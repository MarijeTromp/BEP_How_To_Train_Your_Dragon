{"test_case": 0, "data": "MetropolisHasting 0: robots/2-0-0.pl, test_cost: 0, train_cost: 0, time: 0.0069194569999999995, length: 39, iterations: 548"}
{"test_case": 1, "data": "MetropolisHasting 1: robots/2-0-1.pl, test_cost: 0, train_cost: 0, time: 0.007221468, length: 15, iterations: 669"}
{"test_case": 2, "data": "MetropolisHasting 2: robots/2-0-2.pl, test_cost: 0, train_cost: 0, time: 0.00170033, length: 14, iterations: 167"}
{"test_case": 3, "data": "MetropolisHasting 3: robots/2-0-3.pl, test_cost: 0, train_cost: 0, time: 0.00032518800000000056, length: 7, iterations: 30"}
{"test_case": 4, "data": "MetropolisHasting 4: robots/2-0-4.pl, test_cost: 0, train_cost: 0, time: 0.0004501360000000003, length: 3, iterations: 45"}
{"test_case": 5, "data": "MetropolisHasting 5: robots/2-0-5.pl, test_cost: 0, train_cost: 0, time: 0.0020175769999999996, length: 4, iterations: 207"}
{"test_case": 6, "data": "MetropolisHasting 6: robots/2-0-6.pl, test_cost: 0, train_cost: 0, time: 0.00015432900000000166, length: 4, iterations: 12"}
{"test_case": 7, "data": "MetropolisHasting 7: robots/2-0-7.pl, test_cost: 0, train_cost: 0, time: 0.00023109400000000113, length: 1, iterations: 23"}
{"test_case": 8, "data": "MetropolisHasting 8: robots/2-0-8.pl, test_cost: 0, train_cost: 0, time: 0.039058602000000005, length: 28, iterations: 2600"}
{"test_case": 9, "data": "MetropolisHasting 9: robots/2-0-9.pl, test_cost: 0, train_cost: 0, time: 0.007760055000000002, length: 21, iterations: 725"}
{"test_case": 10, "data": "MetropolisHasting 10: robots/2-0-10.pl, test_cost: 0, train_cost: 0, time: 0.005437743000000001, length: 19, iterations: 457"}
{"test_case": 11, "data": "MetropolisHasting 11: robots/2-1-0.pl, test_cost: 0, train_cost: 0, time: 0.004258944000000001, length: 40, iterations: 358"}
{"test_case": 12, "data": "MetropolisHasting 12: robots/2-1-1.pl, test_cost: 0, train_cost: 0, time: 0.002983223999999998, length: 18, iterations: 275"}
{"test_case": 13, "data": "MetropolisHasting 13: robots/2-1-2.pl, test_cost: 0, train_cost: 0, time: 0.011122489, length: 16, iterations: 1048"}
{"test_case": 14, "data": "MetropolisHasting 14: robots/2-1-3.pl, test_cost: 0, train_cost: 0, time: 0.00010862900000000245, length: 1, iterations: 10"}
{"test_case": 15, "data": "MetropolisHasting 15: robots/2-1-4.pl, test_cost: 0, train_cost: 0, time: 2.7400999999999814e-05, length: 2, iterations: 1"}
{"test_case": 16, "data": "MetropolisHasting 16: robots/2-1-5.pl, test_cost: 0, train_cost: 0, time: 0.0005359719999999991, length: 6, iterations: 55"}
{"test_case": 17, "data": "MetropolisHasting 17: robots/2-1-6.pl, test_cost: 0, train_cost: 0, time: 0.019213396999999997, length: 45, iterations: 1553"}
{"test_case": 18, "data": "MetropolisHasting 18: robots/2-1-7.pl, test_cost: 0, train_cost: 0, time: 8.050400000000207e-05, length: 3, iterations: 6"}
{"test_case": 19, "data": "MetropolisHasting 19: robots/2-1-8.pl, test_cost: 0, train_cost: 0, time: 0.015213687999999996, length: 37, iterations: 1211"}
{"test_case": 20, "data": "MetropolisHasting 20: robots/2-1-9.pl, test_cost: 0, train_cost: 0, time: 0.0004952510000000004, length: 4, iterations: 26"}
{"test_case": 21, "data": "MetropolisHasting 21: robots/2-1-10.pl, test_cost: 0, train_cost: 0, time: 0.0013780780000000005, length: 11, iterations: 135"}
{"test_case": 22, "data": "MetropolisHasting 22: robots/2-2-0.pl, test_cost: 0, train_cost: 0, time: 0.008772161, length: 43, iterations: 616"}
{"test_case": 23, "data": "MetropolisHasting 23: robots/2-2-1.pl, test_cost: 0, train_cost: 0, time: 0.003139496000000002, length: 23, iterations: 280"}
{"test_case": 24, "data": "MetropolisHasting 24: robots/2-2-2.pl, test_cost: 0, train_cost: 0, time: 0.0045576160000000004, length: 36, iterations: 327"}
{"test_case": 25, "data": "MetropolisHasting 25: robots/2-2-3.pl, test_cost: 0, train_cost: 0, time: 0.0014748710000000026, length: 11, iterations: 135"}
{"test_case": 26, "data": "MetropolisHasting 26: robots/2-2-4.pl, test_cost: 0, train_cost: 0, time: 0.00033693300000000106, length: 8, iterations: 29"}
{"test_case": 27, "data": "MetropolisHasting 27: robots/2-2-5.pl, test_cost: 0, train_cost: 0, time: 0.0010897449999999996, length: 6, iterations: 107"}
{"test_case": 28, "data": "MetropolisHasting 28: robots/2-2-6.pl, test_cost: 0, train_cost: 0, time: 0.016635496000000003, length: 19, iterations: 1518"}
{"test_case": 29, "data": "MetropolisHasting 29: robots/2-2-7.pl, test_cost: 0, train_cost: 0, time: 0.019922493999999992, length: 29, iterations: 1768"}
{"test_case": 30, "data": "MetropolisHasting 30: robots/2-2-8.pl, test_cost: 0, train_cost: 0, time: 0.000718616, length: 2, iterations: 47"}
{"test_case": 31, "data": "MetropolisHasting 31: robots/2-2-9.pl, test_cost: 0, train_cost: 0, time: 0.00010904099999999983, length: 5, iterations: 7"}
{"test_case": 32, "data": "MetropolisHasting 32: robots/2-2-10.pl, test_cost: 0, train_cost: 0, time: 0.002599413, length: 25, iterations: 219"}
{"test_case": 33, "data": "MetropolisHasting 33: robots/2-3-0.pl, test_cost: 0, train_cost: 0, time: 0.0022865149999999994, length: 23, iterations: 175"}
{"test_case": 34, "data": "MetropolisHasting 34: robots/2-3-1.pl, test_cost: 0, train_cost: 0, time: 0.007324558999999998, length: 19, iterations: 650"}
{"test_case": 35, "data": "MetropolisHasting 35: robots/2-3-2.pl, test_cost: 0, train_cost: 0, time: 0.0009128850000000022, length: 10, iterations: 86"}
{"test_case": 36, "data": "MetropolisHasting 36: robots/2-3-3.pl, test_cost: 0, train_cost: 0, time: 0.006183363000000001, length: 19, iterations: 582"}
{"test_case": 37, "data": "MetropolisHasting 37: robots/2-3-4.pl, test_cost: 0, train_cost: 0, time: 0.0011700189999999978, length: 14, iterations: 105"}
{"test_case": 38, "data": "MetropolisHasting 38: robots/2-3-5.pl, test_cost: 0, train_cost: 0, time: 0.011969550999999998, length: 14, iterations: 1064"}
{"test_case": 39, "data": "MetropolisHasting 39: robots/2-3-6.pl, test_cost: 0, train_cost: 0, time: 0.0031431009999999954, length: 15, iterations: 315"}
{"test_case": 40, "data": "MetropolisHasting 40: robots/2-3-7.pl, test_cost: 0, train_cost: 0, time: 0.0014572539999999998, length: 8, iterations: 119"}
{"test_case": 41, "data": "MetropolisHasting 41: robots/2-3-8.pl, test_cost: 0, train_cost: 0, time: 0.0003466530000000006, length: 9, iterations: 27"}
{"test_case": 42, "data": "MetropolisHasting 42: robots/2-3-9.pl, test_cost: 0, train_cost: 0, time: 0.016685109, length: 21, iterations: 1451"}
{"test_case": 43, "data": "MetropolisHasting 43: robots/2-3-10.pl, test_cost: 0, train_cost: 0, time: 0.002600909000000002, length: 16, iterations: 220"}
{"test_case": 44, "data": "MetropolisHasting 44: robots/2-4-0.pl, test_cost: 0, train_cost: 0, time: 0.00022193699999999844, length: 2, iterations: 20"}
{"test_case": 45, "data": "MetropolisHasting 45: robots/2-4-1.pl, test_cost: 0, train_cost: 0, time: 0.002710701999999999, length: 11, iterations: 259"}
{"test_case": 46, "data": "MetropolisHasting 46: robots/2-4-2.pl, test_cost: 0, train_cost: 0, time: 0.0015322250000000016, length: 12, iterations: 150"}
{"test_case": 47, "data": "MetropolisHasting 47: robots/2-4-3.pl, test_cost: 0, train_cost: 0, time: 0.00014566300000000074, length: 6, iterations: 11"}
{"test_case": 48, "data": "MetropolisHasting 48: robots/2-4-4.pl, test_cost: 0, train_cost: 0, time: 0.0055699529999999955, length: 38, iterations: 469"}
{"test_case": 49, "data": "MetropolisHasting 49: robots/2-4-5.pl, test_cost: 0, train_cost: 0, time: 0.008320941999999998, length: 22, iterations: 754"}
{"test_case": 50, "data": "MetropolisHasting 50: robots/2-4-6.pl, test_cost: 0, train_cost: 0, time: 0.00016148800000000043, length: 0, iterations: 1"}
{"test_case": 51, "data": "MetropolisHasting 51: robots/2-4-7.pl, test_cost: 0, train_cost: 0, time: 0.000383698, length: 4, iterations: 29"}
{"test_case": 52, "data": "MetropolisHasting 52: robots/2-4-8.pl, test_cost: 0, train_cost: 0, time: 0.004092647, length: 14, iterations: 330"}
{"test_case": 53, "data": "MetropolisHasting 53: robots/2-4-9.pl, test_cost: 0, train_cost: 0, time: 0.002212285999999999, length: 15, iterations: 218"}
{"test_case": 54, "data": "MetropolisHasting 54: robots/2-4-10.pl, test_cost: 0, train_cost: 0, time: 0.021690148, length: 31, iterations: 1745"}
{"test_case": 55, "data": "MetropolisHasting 55: robots/2-5-0.pl, test_cost: 0, train_cost: 0, time: 0.002115592999999999, length: 5, iterations: 213"}
{"test_case": 56, "data": "MetropolisHasting 56: robots/2-5-1.pl, test_cost: 0, train_cost: 0, time: 0.011501932999999999, length: 14, iterations: 1059"}
{"test_case": 57, "data": "MetropolisHasting 57: robots/2-5-2.pl, test_cost: 0, train_cost: 0, time: 0.02102638300000001, length: 45, iterations: 1474"}
{"test_case": 58, "data": "MetropolisHasting 58: robots/2-5-3.pl, test_cost: 0, train_cost: 0, time: 0.0035601660000000035, length: 8, iterations: 324"}
{"test_case": 59, "data": "MetropolisHasting 59: robots/2-5-4.pl, test_cost: 0, train_cost: 0, time: 0.015082451999999996, length: 15, iterations: 1434"}
{"test_case": 60, "data": "MetropolisHasting 60: robots/2-5-5.pl, test_cost: 0, train_cost: 0, time: 0.0017957560000000008, length: 11, iterations: 148"}
{"test_case": 61, "data": "MetropolisHasting 61: robots/2-5-6.pl, test_cost: 0, train_cost: 0, time: 2.9759999999999336e-05, length: 0, iterations: 1"}
{"test_case": 62, "data": "MetropolisHasting 62: robots/2-5-7.pl, test_cost: 0, train_cost: 0, time: 0.008330442, length: 34, iterations: 651"}
{"test_case": 63, "data": "MetropolisHasting 63: robots/2-5-8.pl, test_cost: 0, train_cost: 0, time: 0.005014583999999999, length: 10, iterations: 383"}
{"test_case": 64, "data": "MetropolisHasting 64: robots/2-5-9.pl, test_cost: 0, train_cost: 0, time: 0.002105285000000002, length: 20, iterations: 189"}
{"test_case": 65, "data": "MetropolisHasting 65: robots/2-5-10.pl, test_cost: 0, train_cost: 0, time: 0.004348691000000002, length: 25, iterations: 386"}
{"test_case": 66, "data": "MetropolisHasting 66: robots/2-6-0.pl, test_cost: 0, train_cost: 0, time: 0.006448134999999997, length: 14, iterations: 594"}
{"test_case": 67, "data": "MetropolisHasting 67: robots/2-6-1.pl, test_cost: 0, train_cost: 0, time: 0.0035330089999999967, length: 11, iterations: 328"}
{"test_case": 68, "data": "MetropolisHasting 68: robots/2-6-2.pl, test_cost: 0, train_cost: 0, time: 0.0068990619999999975, length: 12, iterations: 675"}
{"test_case": 69, "data": "MetropolisHasting 69: robots/2-6-3.pl, test_cost: 0, train_cost: 0, time: 0.0020664290000000016, length: 37, iterations: 152"}
{"test_case": 70, "data": "MetropolisHasting 70: robots/2-6-4.pl, test_cost: 0, train_cost: 0, time: 0.005264242, length: 52, iterations: 334"}
{"test_case": 71, "data": "MetropolisHasting 71: robots/2-6-5.pl, test_cost: 0, train_cost: 0, time: 0.0006566090000000007, length: 5, iterations: 57"}
{"test_case": 72, "data": "MetropolisHasting 72: robots/2-6-6.pl, test_cost: 0, train_cost: 0, time: 0.002498918000000001, length: 8, iterations: 237"}
{"test_case": 73, "data": "MetropolisHasting 73: robots/2-6-7.pl, test_cost: 0, train_cost: 0, time: 0.0002972649999999997, length: 2, iterations: 26"}
{"test_case": 74, "data": "MetropolisHasting 74: robots/2-6-8.pl, test_cost: 0, train_cost: 0, time: 0.061752262, length: 77, iterations: 3923"}
{"test_case": 75, "data": "MetropolisHasting 75: robots/2-6-9.pl, test_cost: 0, train_cost: 0, time: 0.004243681999999999, length: 27, iterations: 363"}
{"test_case": 76, "data": "MetropolisHasting 76: robots/2-6-10.pl, test_cost: 0, train_cost: 0, time: 0.002749689999999999, length: 10, iterations: 252"}
{"test_case": 77, "data": "MetropolisHasting 77: robots/2-7-0.pl, test_cost: 0, train_cost: 0, time: 0.002369502999999995, length: 13, iterations: 223"}
{"test_case": 78, "data": "MetropolisHasting 78: robots/2-7-1.pl, test_cost: 0, train_cost: 0, time: 0.005789515000000009, length: 21, iterations: 507"}
{"test_case": 79, "data": "MetropolisHasting 79: robots/2-7-2.pl, test_cost: 0, train_cost: 0, time: 0.0035439320000000135, length: 7, iterations: 341"}
{"test_case": 80, "data": "MetropolisHasting 80: robots/2-7-3.pl, test_cost: 0, train_cost: 0, time: 0.006252208, length: 8, iterations: 543"}
{"test_case": 81, "data": "MetropolisHasting 81: robots/2-7-4.pl, test_cost: 0, train_cost: 0, time: 0.00012786099999999995, length: 3, iterations: 9"}
{"test_case": 82, "data": "MetropolisHasting 82: robots/2-7-5.pl, test_cost: 0, train_cost: 0, time: 0.00612361, length: 13, iterations: 584"}
{"test_case": 83, "data": "MetropolisHasting 83: robots/2-7-6.pl, test_cost: 0, train_cost: 0, time: 2.928399999999748e-05, length: 0, iterations: 1"}
{"test_case": 84, "data": "MetropolisHasting 84: robots/2-7-7.pl, test_cost: 0, train_cost: 0, time: 0.016049601, length: 20, iterations: 1483"}
{"test_case": 85, "data": "MetropolisHasting 85: robots/2-7-8.pl, test_cost: 0, train_cost: 0, time: 0.014864427999999999, length: 28, iterations: 1282"}
{"test_case": 86, "data": "MetropolisHasting 86: robots/2-7-9.pl, test_cost: 0, train_cost: 0, time: 0.00010497500000000021, length: 0, iterations: 9"}
{"test_case": 87, "data": "MetropolisHasting 87: robots/2-7-10.pl, test_cost: 0, train_cost: 0, time: 0.00018086200000000385, length: 3, iterations: 15"}
{"test_case": 88, "data": "MetropolisHasting 88: robots/2-8-0.pl, test_cost: 0, train_cost: 0, time: 0.007447290999999995, length: 27, iterations: 569"}
{"test_case": 89, "data": "MetropolisHasting 89: robots/2-8-1.pl, test_cost: 0, train_cost: 0, time: 0.006877517999999999, length: 28, iterations: 478"}
{"test_case": 90, "data": "MetropolisHasting 90: robots/2-8-2.pl, test_cost: 0, train_cost: 0, time: 0.0041295030000000005, length: 15, iterations: 321"}
{"test_case": 91, "data": "MetropolisHasting 91: robots/2-8-3.pl, test_cost: 0, train_cost: 0, time: 0.011513934, length: 24, iterations: 1009"}
{"test_case": 92, "data": "MetropolisHasting 92: robots/2-8-4.pl, test_cost: 0, train_cost: 0, time: 0.0014366410000000024, length: 14, iterations: 138"}
{"test_case": 93, "data": "MetropolisHasting 93: robots/2-8-5.pl, test_cost: 0, train_cost: 0, time: 0.004765336000000002, length: 17, iterations: 477"}
{"test_case": 94, "data": "MetropolisHasting 94: robots/2-8-6.pl, test_cost: 0, train_cost: 0, time: 0.0008647760000000011, length: 11, iterations: 80"}
{"test_case": 95, "data": "MetropolisHasting 95: robots/2-8-7.pl, test_cost: 0, train_cost: 0, time: 8.162199999999994e-05, length: 5, iterations: 6"}
{"test_case": 96, "data": "MetropolisHasting 96: robots/2-8-8.pl, test_cost: 0, train_cost: 0, time: 0.000232309, length: 7, iterations: 19"}
{"test_case": 97, "data": "MetropolisHasting 97: robots/2-8-9.pl, test_cost: 0, train_cost: 0, time: 0.003270707000000001, length: 26, iterations: 291"}
{"test_case": 98, "data": "MetropolisHasting 98: robots/2-8-10.pl, test_cost: 0, train_cost: 0, time: 0.007715645, length: 14, iterations: 696"}
{"test_case": 99, "data": "MetropolisHasting 99: robots/2-9-0.pl, test_cost: 0, train_cost: 0, time: 0.015451605, length: 26, iterations: 1402"}
{"test_case": 100, "data": "MetropolisHasting 100: robots/2-9-1.pl, test_cost: 0, train_cost: 0, time: 0.0021662350000000007, length: 16, iterations: 173"}
{"test_case": 101, "data": "MetropolisHasting 101: robots/2-9-2.pl, test_cost: 0, train_cost: 0, time: 0.001978319000000001, length: 7, iterations: 175"}
{"test_case": 102, "data": "MetropolisHasting 102: robots/2-9-3.pl, test_cost: 0, train_cost: 0, time: 0.0003140269999999997, length: 4, iterations: 25"}
{"test_case": 103, "data": "MetropolisHasting 103: robots/2-9-4.pl, test_cost: 0, train_cost: 0, time: 0.0026660469999999995, length: 17, iterations: 232"}
{"test_case": 104, "data": "MetropolisHasting 104: robots/2-9-5.pl, test_cost: 0, train_cost: 0, time: 0.006831116, length: 17, iterations: 632"}
{"test_case": 105, "data": "MetropolisHasting 105: robots/2-9-6.pl, test_cost: 0, train_cost: 0, time: 0.009428305999999997, length: 11, iterations: 930"}
{"test_case": 106, "data": "MetropolisHasting 106: robots/2-9-7.pl, test_cost: 0, train_cost: 0, time: 2.4935000000000235e-05, length: 0, iterations: 1"}
{"test_case": 107, "data": "MetropolisHasting 107: robots/2-9-8.pl, test_cost: 0, train_cost: 0, time: 0.002206061000000002, length: 5, iterations: 226"}
{"test_case": 108, "data": "MetropolisHasting 108: robots/2-9-9.pl, test_cost: 0, train_cost: 0, time: 0.008978374999999997, length: 10, iterations: 864"}
{"test_case": 109, "data": "MetropolisHasting 109: robots/2-9-10.pl, test_cost: 0, train_cost: 0, time: 0.013493162000000003, length: 11, iterations: 1324"}
{"test_case": 110, "data": "MetropolisHasting 110: robots/4-0-0.pl, test_cost: 0, train_cost: 0, time: 0.015763384, length: 37, iterations: 1127"}
{"test_case": 111, "data": "MetropolisHasting 111: robots/4-0-1.pl, test_cost: 0, train_cost: 0, time: 0.019380269999999998, length: 84, iterations: 1151"}
{"test_case": 112, "data": "MetropolisHasting 112: robots/4-0-2.pl, test_cost: 0, train_cost: 0, time: 0.013875855, length: 41, iterations: 1133"}
{"test_case": 113, "data": "MetropolisHasting 113: robots/4-0-3.pl, test_cost: 0, train_cost: 0, time: 0.249122114, length: 342, iterations: 6925"}
{"test_case": 114, "data": "MetropolisHasting 114: robots/4-0-4.pl, test_cost: 0, train_cost: 0, time: 0.0012038589999999738, length: 17, iterations: 97"}
{"test_case": 115, "data": "MetropolisHasting 115: robots/4-0-5.pl, test_cost: 0, train_cost: 0, time: 0.006298970000000015, length: 50, iterations: 456"}
{"test_case": 116, "data": "MetropolisHasting 116: robots/4-0-6.pl, test_cost: 0, train_cost: 0, time: 0.444394381, length: 532, iterations: 9833"}
{"test_case": 117, "data": "MetropolisHasting 117: robots/4-0-7.pl, test_cost: 0, train_cost: 0, time: 0.019423265000000023, length: 17, iterations: 1692"}
{"test_case": 118, "data": "MetropolisHasting 118: robots/4-0-8.pl, test_cost: 0, train_cost: 0, time: 0.010262197999999945, length: 35, iterations: 887"}
{"test_case": 119, "data": "MetropolisHasting 119: robots/4-0-9.pl, test_cost: 0, train_cost: 0, time: 0.002848509999999971, length: 28, iterations: 222"}
{"test_case": 120, "data": "MetropolisHasting 120: robots/4-0-10.pl, test_cost: 0, train_cost: 0, time: 0.0028570520000000005, length: 46, iterations: 168"}
{"test_case": 121, "data": "MetropolisHasting 121: robots/4-1-0.pl, test_cost: 0, train_cost: 0, time: 0.043987834, length: 94, iterations: 2381"}
{"test_case": 122, "data": "MetropolisHasting 122: robots/4-1-1.pl, test_cost: 0, train_cost: 0, time: 0.018741019999999997, length: 64, iterations: 1205"}
{"test_case": 123, "data": "MetropolisHasting 123: robots/4-1-2.pl, test_cost: 0, train_cost: 0, time: 0.032605734, length: 93, iterations: 1929"}
{"test_case": 124, "data": "MetropolisHasting 124: robots/4-1-3.pl, test_cost: 0, train_cost: 0, time: 0.020474285999999994, length: 21, iterations: 1769"}
{"test_case": 125, "data": "MetropolisHasting 125: robots/4-1-4.pl, test_cost: 0, train_cost: 0, time: 0.10475242700000001, length: 264, iterations: 4467"}
{"test_case": 126, "data": "MetropolisHasting 126: robots/4-1-5.pl, test_cost: 0, train_cost: 0, time: 0.018399708999999986, length: 83, iterations: 1069"}
{"test_case": 127, "data": "MetropolisHasting 127: robots/4-1-6.pl, test_cost: 0, train_cost: 0, time: 0.007164244999999986, length: 27, iterations: 622"}
{"test_case": 128, "data": "MetropolisHasting 128: robots/4-1-7.pl, test_cost: 0, train_cost: 0, time: 0.0034940310000000085, length: 41, iterations: 249"}
{"test_case": 129, "data": "MetropolisHasting 129: robots/4-1-8.pl, test_cost: 0, train_cost: 0, time: 0.023004903999999993, length: 17, iterations: 1823"}
{"test_case": 130, "data": "MetropolisHasting 130: robots/4-1-9.pl, test_cost: 0, train_cost: 0, time: 0.012978229, length: 45, iterations: 1037"}
{"test_case": 131, "data": "MetropolisHasting 131: robots/4-1-10.pl, test_cost: 0, train_cost: 0, time: 0.567333364, length: 725, iterations: 9529"}
{"test_case": 132, "data": "MetropolisHasting 132: robots/4-2-0.pl, test_cost: 0, train_cost: 0, time: 0.014487027000000041, length: 84, iterations: 894"}
{"test_case": 133, "data": "MetropolisHasting 133: robots/4-2-1.pl, test_cost: 0, train_cost: 0, time: 0.013956433000000046, length: 29, iterations: 1275"}
{"test_case": 134, "data": "MetropolisHasting 134: robots/4-2-2.pl, test_cost: 0, train_cost: 0, time: 0.045637397999999996, length: 160, iterations: 1878"}
{"test_case": 135, "data": "MetropolisHasting 135: robots/4-2-3.pl, test_cost: 0, train_cost: 0, time: 0.021436311000000097, length: 73, iterations: 1344"}
{"test_case": 136, "data": "MetropolisHasting 136: robots/4-2-4.pl, test_cost: 0, train_cost: 0, time: 0.0073775699999999445, length: 20, iterations: 692"}
{"test_case": 137, "data": "MetropolisHasting 137: robots/4-2-5.pl, test_cost: 0, train_cost: 0, time: 0.015728251999999943, length: 53, iterations: 1079"}
{"test_case": 138, "data": "MetropolisHasting 138: robots/4-2-6.pl, test_cost: 0, train_cost: 0, time: 0.02190257200000001, length: 81, iterations: 1308"}
{"test_case": 139, "data": "MetropolisHasting 139: robots/4-2-7.pl, test_cost: 0, train_cost: 0, time: 0.24367690099999995, length: 330, iterations: 6922"}
{"test_case": 140, "data": "MetropolisHasting 140: robots/4-2-8.pl, test_cost: 0, train_cost: 0, time: 0.008002318000000001, length: 25, iterations: 610"}
{"test_case": 141, "data": "MetropolisHasting 141: robots/4-2-9.pl, test_cost: 0, train_cost: 0, time: 0.005707047999999999, length: 23, iterations: 431"}
{"test_case": 142, "data": "MetropolisHasting 142: robots/4-2-10.pl, test_cost: 0, train_cost: 0, time: 0.019553108, length: 39, iterations: 1382"}
{"test_case": 143, "data": "MetropolisHasting 143: robots/4-3-0.pl, test_cost: 0, train_cost: 0, time: 0.012851489, length: 46, iterations: 844"}
{"test_case": 144, "data": "MetropolisHasting 144: robots/4-3-1.pl, test_cost: 0, train_cost: 0, time: 0.007770097000000004, length: 29, iterations: 628"}
{"test_case": 145, "data": "MetropolisHasting 145: robots/4-3-2.pl, test_cost: 0, train_cost: 0, time: 0.007424724999999993, length: 35, iterations: 555"}
{"test_case": 146, "data": "MetropolisHasting 146: robots/4-3-3.pl, test_cost: 0, train_cost: 0, time: 0.023565045000000007, length: 40, iterations: 1779"}
{"test_case": 147, "data": "MetropolisHasting 147: robots/4-3-4.pl, test_cost: 0, train_cost: 0, time: 0.068228173, length: 66, iterations: 3852"}
{"test_case": 148, "data": "MetropolisHasting 148: robots/4-3-5.pl, test_cost: 0, train_cost: 0, time: 0.072503818, length: 177, iterations: 3028"}
{"test_case": 149, "data": "MetropolisHasting 149: robots/4-3-6.pl, test_cost: 0, train_cost: 0, time: 0.050709207000000006, length: 28, iterations: 3811"}
{"test_case": 150, "data": "MetropolisHasting 150: robots/4-3-7.pl, test_cost: 0, train_cost: 0, time: 0.19507143999999998, length: 316, iterations: 5290"}
{"test_case": 151, "data": "MetropolisHasting 151: robots/4-3-8.pl, test_cost: 0, train_cost: 0, time: 0.011890737000000012, length: 37, iterations: 931"}
{"test_case": 152, "data": "MetropolisHasting 152: robots/4-3-9.pl, test_cost: 0, train_cost: 0, time: 0.035766575999999994, length: 92, iterations: 2369"}
{"test_case": 153, "data": "MetropolisHasting 153: robots/4-3-10.pl, test_cost: 0, train_cost: 0, time: 0.018692570999999963, length: 83, iterations: 1265"}
{"test_case": 154, "data": "MetropolisHasting 154: robots/4-4-0.pl, test_cost: 0, train_cost: 0, time: 0.01027919599999999, length: 32, iterations: 810"}
{"test_case": 155, "data": "MetropolisHasting 155: robots/4-4-1.pl, test_cost: 0, train_cost: 0, time: 0.005627563000000002, length: 61, iterations: 432"}
{"test_case": 156, "data": "MetropolisHasting 156: robots/4-4-2.pl, test_cost: 0, train_cost: 0, time: 0.0005913590000000135, length: 8, iterations: 54"}
{"test_case": 157, "data": "MetropolisHasting 157: robots/4-4-3.pl, test_cost: 0, train_cost: 0, time: 0.013287110000000046, length: 73, iterations: 803"}
{"test_case": 158, "data": "MetropolisHasting 158: robots/4-4-4.pl, test_cost: 0, train_cost: 0, time: 0.008607863999999965, length: 48, iterations: 581"}
{"test_case": 159, "data": "MetropolisHasting 159: robots/4-4-5.pl, test_cost: 0, train_cost: 0, time: 0.013939793000000034, length: 59, iterations: 788"}
{"test_case": 160, "data": "MetropolisHasting 160: robots/4-4-6.pl, test_cost: 0, train_cost: 0, time: 0.039574007, length: 119, iterations: 2045"}
{"test_case": 161, "data": "MetropolisHasting 161: robots/4-4-7.pl, test_cost: 0, train_cost: 0, time: 0.012722826999999999, length: 100, iterations: 805"}
{"test_case": 162, "data": "MetropolisHasting 162: robots/4-4-8.pl, test_cost: 0, train_cost: 0, time: 0.0002523820000000024, length: 10, iterations: 18"}
{"test_case": 163, "data": "MetropolisHasting 163: robots/4-4-9.pl, test_cost: 0, train_cost: 0, time: 0.018057466000000008, length: 59, iterations: 1140"}
{"test_case": 164, "data": "MetropolisHasting 164: robots/4-4-10.pl, test_cost: 0, train_cost: 0, time: 1.208790478, length: 697, iterations: 19123"}
{"test_case": 165, "data": "MetropolisHasting 165: robots/4-5-0.pl, test_cost: 0, train_cost: 0, time: 0.01948160199999993, length: 42, iterations: 1336"}
{"test_case": 166, "data": "MetropolisHasting 166: robots/4-5-1.pl, test_cost: 0, train_cost: 0, time: 6.75459999999184e-05, length: 2, iterations: 4"}
{"test_case": 167, "data": "MetropolisHasting 167: robots/4-5-2.pl, test_cost: 0, train_cost: 0, time: 0.0002498719999999288, length: 3, iterations: 24"}
{"test_case": 168, "data": "MetropolisHasting 168: robots/4-5-3.pl, test_cost: 0, train_cost: 0, time: 0.026747650999999983, length: 131, iterations: 1538"}
{"test_case": 169, "data": "MetropolisHasting 169: robots/4-5-4.pl, test_cost: 0, train_cost: 0, time: 0.017633126, length: 37, iterations: 1365"}
{"test_case": 170, "data": "MetropolisHasting 170: robots/4-5-5.pl, test_cost: 0, train_cost: 0, time: 0.022967282999999998, length: 100, iterations: 1315"}
{"test_case": 171, "data": "MetropolisHasting 171: robots/4-5-6.pl, test_cost: 0, train_cost: 0, time: 0.006637753000000003, length: 58, iterations: 547"}
{"test_case": 172, "data": "MetropolisHasting 172: robots/4-5-7.pl, test_cost: 0, train_cost: 0, time: 0.055509239, length: 58, iterations: 2708"}
{"test_case": 173, "data": "MetropolisHasting 173: robots/4-5-8.pl, test_cost: 0, train_cost: 0, time: 0.026303402000000004, length: 117, iterations: 1367"}
{"test_case": 174, "data": "MetropolisHasting 174: robots/4-5-9.pl, test_cost: 0, train_cost: 0, time: 0.25526949, length: 352, iterations: 6966"}
{"test_case": 175, "data": "MetropolisHasting 175: robots/4-5-10.pl, test_cost: 0, train_cost: 0, time: 0.005715773000000035, length: 19, iterations: 487"}
{"test_case": 176, "data": "MetropolisHasting 176: robots/4-6-0.pl, test_cost: 0, train_cost: 0, time: 0.002346495000000004, length: 29, iterations: 185"}
{"test_case": 177, "data": "MetropolisHasting 177: robots/4-6-1.pl, test_cost: 0, train_cost: 0, time: 0.0017499269999999845, length: 11, iterations: 171"}
{"test_case": 178, "data": "MetropolisHasting 178: robots/4-6-2.pl, test_cost: 0, train_cost: 0, time: 0.002281286999999965, length: 31, iterations: 184"}
{"test_case": 179, "data": "MetropolisHasting 179: robots/4-6-3.pl, test_cost: 0, train_cost: 0, time: 8.348399999996703e-05, length: 1, iterations: 6"}
{"test_case": 180, "data": "MetropolisHasting 180: robots/4-6-4.pl, test_cost: 0, train_cost: 0, time: 0.0013444090000000047, length: 33, iterations: 106"}
{"test_case": 181, "data": "MetropolisHasting 181: robots/4-6-5.pl, test_cost: 0, train_cost: 0, time: 0.009554357999999999, length: 42, iterations: 701"}
{"test_case": 182, "data": "MetropolisHasting 182: robots/4-6-6.pl, test_cost: 0, train_cost: 0, time: 0.026192201000000005, length: 78, iterations: 1644"}
{"test_case": 183, "data": "MetropolisHasting 183: robots/4-6-7.pl, test_cost: 0, train_cost: 0, time: 0.009075871, length: 30, iterations: 682"}
{"test_case": 184, "data": "MetropolisHasting 184: robots/4-6-8.pl, test_cost: 0, train_cost: 0, time: 0.015406735000000005, length: 79, iterations: 980"}
{"test_case": 185, "data": "MetropolisHasting 185: robots/4-6-9.pl, test_cost: 0, train_cost: 0, time: 0.067666565, length: 86, iterations: 4199"}
{"test_case": 186, "data": "MetropolisHasting 186: robots/4-6-10.pl, test_cost: 0, train_cost: 0, time: 0.003251168999999998, length: 37, iterations: 259"}
{"test_case": 187, "data": "MetropolisHasting 187: robots/4-7-0.pl, test_cost: 0, train_cost: 0, time: 4.517799999997907e-05, length: 3, iterations: 2"}
{"test_case": 188, "data": "MetropolisHasting 188: robots/4-7-1.pl, test_cost: 0, train_cost: 0, time: 0.009274164000000001, length: 59, iterations: 632"}
{"test_case": 189, "data": "MetropolisHasting 189: robots/4-7-2.pl, test_cost: 0, train_cost: 0, time: 0.021969340000000004, length: 104, iterations: 1173"}
{"test_case": 190, "data": "MetropolisHasting 190: robots/4-7-3.pl, test_cost: 0, train_cost: 0, time: 0.0036341309999999988, length: 37, iterations: 289"}
{"test_case": 191, "data": "MetropolisHasting 191: robots/4-7-4.pl, test_cost: 0, train_cost: 0, time: 0.014633873999999998, length: 71, iterations: 837"}
{"test_case": 192, "data": "MetropolisHasting 192: robots/4-7-5.pl, test_cost: 0, train_cost: 0, time: 0.11820651799999998, length: 25, iterations: 5170"}
{"test_case": 193, "data": "MetropolisHasting 193: robots/4-7-6.pl, test_cost: 0, train_cost: 0, time: 0.014403790999999999, length: 87, iterations: 729"}
{"test_case": 194, "data": "MetropolisHasting 194: robots/4-7-7.pl, test_cost: 0, train_cost: 0, time: 0.0020081479999999874, length: 9, iterations: 182"}
{"test_case": 195, "data": "MetropolisHasting 195: robots/4-7-8.pl, test_cost: 0, train_cost: 0, time: 1.333901773, length: 155, iterations: 21838"}
{"test_case": 196, "data": "MetropolisHasting 196: robots/4-7-9.pl, test_cost: 0, train_cost: 0, time: 0.027246447000000007, length: 62, iterations: 1562"}
{"test_case": 197, "data": "MetropolisHasting 197: robots/4-7-10.pl, test_cost: 0, train_cost: 0, time: 0.005583147999999927, length: 36, iterations: 430"}
{"test_case": 198, "data": "MetropolisHasting 198: robots/4-8-0.pl, test_cost: 0, train_cost: 0, time: 0.01571048899999994, length: 20, iterations: 1332"}
{"test_case": 199, "data": "MetropolisHasting 199: robots/4-8-1.pl, test_cost: 0, train_cost: 0, time: 0.00387047500000004, length: 23, iterations: 289"}
{"test_case": 200, "data": "MetropolisHasting 200: robots/4-8-2.pl, test_cost: 0, train_cost: 0, time: 0.008548399, length: 53, iterations: 640"}
{"test_case": 201, "data": "MetropolisHasting 201: robots/4-8-3.pl, test_cost: 0, train_cost: 0, time: 0.006210170999999999, length: 32, iterations: 460"}
{"test_case": 202, "data": "MetropolisHasting 202: robots/4-8-4.pl, test_cost: 0, train_cost: 0, time: 0.0019825459999999982, length: 19, iterations: 165"}
{"test_case": 203, "data": "MetropolisHasting 203: robots/4-8-5.pl, test_cost: 0, train_cost: 0, time: 0.005176332999999998, length: 42, iterations: 412"}
{"test_case": 204, "data": "MetropolisHasting 204: robots/4-8-6.pl, test_cost: 0, train_cost: 0, time: 0.003497809000000001, length: 43, iterations: 248"}
{"test_case": 205, "data": "MetropolisHasting 205: robots/4-8-7.pl, test_cost: 0, train_cost: 0, time: 0.010936804000000001, length: 56, iterations: 800"}
{"test_case": 206, "data": "MetropolisHasting 206: robots/4-8-8.pl, test_cost: 0, train_cost: 0, time: 0.086497922, length: 52, iterations: 6700"}
{"test_case": 207, "data": "MetropolisHasting 207: robots/4-8-9.pl, test_cost: 0, train_cost: 0, time: 0.04611236299999999, length: 189, iterations: 2054"}
{"test_case": 208, "data": "MetropolisHasting 208: robots/4-8-10.pl, test_cost: 0, train_cost: 0, time: 0.014852807999999995, length: 40, iterations: 1139"}
{"test_case": 209, "data": "MetropolisHasting 209: robots/4-9-0.pl, test_cost: 0, train_cost: 0, time: 0.006081550000000019, length: 22, iterations: 523"}
{"test_case": 210, "data": "MetropolisHasting 210: robots/4-9-1.pl, test_cost: 0, train_cost: 0, time: 0.0007363420000000001, length: 7, iterations: 46"}
{"test_case": 211, "data": "MetropolisHasting 211: robots/4-9-2.pl, test_cost: 0, train_cost: 0, time: 0.013070556, length: 51, iterations: 927"}
{"test_case": 212, "data": "MetropolisHasting 212: robots/4-9-3.pl, test_cost: 0, train_cost: 0, time: 0.005126350000000002, length: 30, iterations: 429"}
{"test_case": 213, "data": "MetropolisHasting 213: robots/4-9-4.pl, test_cost: 0, train_cost: 0, time: 0.025849093, length: 54, iterations: 1624"}
{"test_case": 214, "data": "MetropolisHasting 214: robots/4-9-5.pl, test_cost: 0, train_cost: 0, time: 0.06513361200000001, length: 67, iterations: 4464"}
{"test_case": 215, "data": "MetropolisHasting 215: robots/4-9-6.pl, test_cost: 0, train_cost: 0, time: 0.0013047000000000059, length: 21, iterations: 112"}
{"test_case": 216, "data": "MetropolisHasting 216: robots/4-9-7.pl, test_cost: 0, train_cost: 0, time: 0.014232867999999996, length: 87, iterations: 862"}
{"test_case": 217, "data": "MetropolisHasting 217: robots/4-9-8.pl, test_cost: 0, train_cost: 0, time: 0.043415203999999985, length: 80, iterations: 2797"}
{"test_case": 218, "data": "MetropolisHasting 218: robots/4-9-9.pl, test_cost: 0, train_cost: 0, time: 0.016129879999999985, length: 131, iterations: 774"}
{"test_case": 219, "data": "MetropolisHasting 219: robots/4-9-10.pl, test_cost: 0, train_cost: 0, time: 0.060100596000000006, length: 63, iterations: 3623"}
{"test_case": 220, "data": "MetropolisHasting 220: robots/6-0-0.pl, test_cost: 0, train_cost: 0, time: 0.368771693, length: 457, iterations: 10536"}
{"test_case": 221, "data": "MetropolisHasting 221: robots/6-0-1.pl, test_cost: 0, train_cost: 0, time: 0.07390021100000005, length: 270, iterations: 2328"}
{"test_case": 222, "data": "MetropolisHasting 222: robots/6-0-2.pl, test_cost: 0, train_cost: 0, time: 0.039019563000000035, length: 119, iterations: 2058"}
{"test_case": 223, "data": "MetropolisHasting 223: robots/6-0-3.pl, test_cost: 0, train_cost: 0, time: 0.01864270200000001, length: 75, iterations: 1271"}
{"test_case": 224, "data": "MetropolisHasting 224: robots/6-0-4.pl, test_cost: 0, train_cost: 0, time: 0.029642620000000064, length: 123, iterations: 1394"}
{"test_case": 225, "data": "MetropolisHasting 225: robots/6-0-5.pl, test_cost: 0, train_cost: 0, time: 1.0264235140000002, length: 950, iterations: 15146"}
{"test_case": 226, "data": "MetropolisHasting 226: robots/6-0-6.pl, test_cost: 0, train_cost: 0, time: 0.06006500600000009, length: 107, iterations: 3441"}
{"test_case": 227, "data": "MetropolisHasting 227: robots/6-0-7.pl, test_cost: 0, train_cost: 0, time: 0.03578938900000006, length: 132, iterations: 1501"}
{"test_case": 228, "data": "MetropolisHasting 228: robots/6-0-8.pl, test_cost: 0, train_cost: 0, time: 0.009969129999999993, length: 68, iterations: 614"}
{"test_case": 229, "data": "MetropolisHasting 229: robots/6-0-9.pl, test_cost: 0, train_cost: 0, time: 0.00011690099999994708, length: 6, iterations: 8"}
{"test_case": 230, "data": "MetropolisHasting 230: robots/6-0-10.pl, test_cost: 0, train_cost: 0, time: 0.044190087, length: 108, iterations: 2177"}
{"test_case": 231, "data": "MetropolisHasting 231: robots/6-1-0.pl, test_cost: 0, train_cost: 0, time: 0.09956459099999998, length: 134, iterations: 3632"}
{"test_case": 232, "data": "MetropolisHasting 232: robots/6-1-1.pl, test_cost: 0, train_cost: 0, time: 0.008221543999999997, length: 45, iterations: 612"}
{"test_case": 233, "data": "MetropolisHasting 233: robots/6-1-2.pl, test_cost: 0, train_cost: 0, time: 0.010237192999999978, length: 41, iterations: 885"}
{"test_case": 234, "data": "MetropolisHasting 234: robots/6-1-3.pl, test_cost: 0, train_cost: 0, time: 1.3161358730000001, length: 329, iterations: 16228"}
{"test_case": 235, "data": "MetropolisHasting 235: robots/6-1-4.pl, test_cost: 0, train_cost: 0, time: 0.08922248100000019, length: 250, iterations: 3002"}
{"test_case": 236, "data": "MetropolisHasting 236: robots/6-1-5.pl, test_cost: 0, train_cost: 0, time: 0.029163330000000043, length: 148, iterations: 1649"}
{"test_case": 237, "data": "MetropolisHasting 237: robots/6-1-6.pl, test_cost: 0, train_cost: 0, time: 0.002425067000000114, length: 34, iterations: 173"}
{"test_case": 238, "data": "MetropolisHasting 238: robots/6-1-7.pl, test_cost: 0, train_cost: 0, time: 0.05920594300000004, length: 100, iterations: 3007"}
{"test_case": 239, "data": "MetropolisHasting 239: robots/6-1-8.pl, test_cost: 0, train_cost: 0, time: 0.0008753150000000431, length: 8, iterations: 67"}
{"test_case": 240, "data": "MetropolisHasting 240: robots/6-1-9.pl, test_cost: 0, train_cost: 0, time: 0.153112907, length: 364, iterations: 4095"}
{"test_case": 241, "data": "MetropolisHasting 241: robots/6-1-10.pl, test_cost: 0, train_cost: 0, time: 0.01467977299999998, length: 101, iterations: 678"}
{"test_case": 242, "data": "MetropolisHasting 242: robots/6-2-0.pl, test_cost: 0, train_cost: 0, time: 0.266926197, length: 480, iterations: 6273"}
{"test_case": 243, "data": "MetropolisHasting 243: robots/6-2-1.pl, test_cost: 0, train_cost: 0, time: 0.037868344, length: 144, iterations: 1600"}
{"test_case": 244, "data": "MetropolisHasting 244: robots/6-2-2.pl, test_cost: 0, train_cost: 0, time: 0.039275543999999996, length: 81, iterations: 2058"}
{"test_case": 245, "data": "MetropolisHasting 245: robots/6-2-3.pl, test_cost: 0, train_cost: 0, time: 0.20115683399999995, length: 304, iterations: 4885"}
{"test_case": 246, "data": "MetropolisHasting 246: robots/6-2-4.pl, test_cost: 0, train_cost: 0, time: 0.023094944999999978, length: 77, iterations: 1245"}
{"test_case": 247, "data": "MetropolisHasting 247: robots/6-2-5.pl, test_cost: 0, train_cost: 0, time: 0.2851952429999999, length: 242, iterations: 7980"}
{"test_case": 248, "data": "MetropolisHasting 248: robots/6-2-6.pl, test_cost: 0, train_cost: 0, time: 0.05330204100000002, length: 165, iterations: 2330"}
{"test_case": 249, "data": "MetropolisHasting 249: robots/6-2-7.pl, test_cost: 0, train_cost: 0, time: 0.0194273920000001, length: 95, iterations: 1091"}
{"test_case": 250, "data": "MetropolisHasting 250: robots/6-2-8.pl, test_cost: 0, train_cost: 0, time: 0.005055582, length: 43, iterations: 343"}
{"test_case": 251, "data": "MetropolisHasting 251: robots/6-2-9.pl, test_cost: 0, train_cost: 0, time: 0.031629965, length: 120, iterations: 1561"}
{"test_case": 252, "data": "MetropolisHasting 252: robots/6-2-10.pl, test_cost: 0, train_cost: 0, time: 0.10329032599999999, length: 214, iterations: 4059"}
{"test_case": 253, "data": "MetropolisHasting 253: robots/6-3-0.pl, test_cost: 0, train_cost: 0, time: 0.040301955, length: 151, iterations: 1906"}
{"test_case": 254, "data": "MetropolisHasting 254: robots/6-3-1.pl, test_cost: 0, train_cost: 0, time: 0.189405829, length: 458, iterations: 4732"}
{"test_case": 255, "data": "MetropolisHasting 255: robots/6-3-2.pl, test_cost: 0, train_cost: 0, time: 0.005024915000000019, length: 24, iterations: 373"}
{"test_case": 256, "data": "MetropolisHasting 256: robots/6-3-3.pl, test_cost: 0, train_cost: 0, time: 0.089371702, length: 264, iterations: 3045"}
{"test_case": 257, "data": "MetropolisHasting 257: robots/6-3-4.pl, test_cost: 0, train_cost: 0, time: 0.017603237999999966, length: 105, iterations: 963"}
{"test_case": 258, "data": "MetropolisHasting 258: robots/6-3-5.pl, test_cost: 0, train_cost: 0, time: 0.02881746599999996, length: 167, iterations: 1290"}
{"test_case": 259, "data": "MetropolisHasting 259: robots/6-3-6.pl, test_cost: 0, train_cost: 0, time: 1.70057166, length: 1235, iterations: 17364"}
{"test_case": 260, "data": "MetropolisHasting 260: robots/6-3-7.pl, test_cost: 0, train_cost: 0, time: 0.005843954999999998, length: 60, iterations: 416"}
{"test_case": 261, "data": "MetropolisHasting 261: robots/6-3-8.pl, test_cost: 0, train_cost: 0, time: 9.760002277, length: 3283, iterations: 39790"}
{"test_case": 262, "data": "MetropolisHasting 262: robots/6-3-9.pl, test_cost: 0, train_cost: 0, time: 0.0014942090000005237, length: 28, iterations: 112"}
{"test_case": 263, "data": "MetropolisHasting 263: robots/6-3-10.pl, test_cost: 0, train_cost: 0, time: 0.2553037309999997, length: 420, iterations: 5153"}
{"test_case": 264, "data": "MetropolisHasting 264: robots/6-4-0.pl, test_cost: 0, train_cost: 0, time: 0.08958243300000035, length: 181, iterations: 4098"}
{"test_case": 265, "data": "MetropolisHasting 265: robots/6-4-1.pl, test_cost: 0, train_cost: 0, time: 0.0419501810000007, length: 87, iterations: 2646"}
{"test_case": 266, "data": "MetropolisHasting 266: robots/6-4-2.pl, test_cost: 0, train_cost: 0, time: 0.018818252000000868, length: 123, iterations: 951"}
{"test_case": 267, "data": "MetropolisHasting 267: robots/6-4-3.pl, test_cost: 0, train_cost: 0, time: 0.013531908000000925, length: 43, iterations: 1047"}
{"test_case": 268, "data": "MetropolisHasting 268: robots/6-4-4.pl, test_cost: 0, train_cost: 0, time: 0.026448965000000157, length: 94, iterations: 1649"}
{"test_case": 269, "data": "MetropolisHasting 269: robots/6-4-5.pl, test_cost: 0, train_cost: 0, time: 0.0041099080000002175, length: 22, iterations: 355"}
{"test_case": 270, "data": "MetropolisHasting 270: robots/6-4-6.pl, test_cost: 0, train_cost: 0, time: 0.111311203, length: 78, iterations: 4571"}
{"test_case": 271, "data": "MetropolisHasting 271: robots/6-4-7.pl, test_cost: 0, train_cost: 0, time: 0.00714280099999999, length: 72, iterations: 476"}
{"test_case": 272, "data": "MetropolisHasting 272: robots/6-4-8.pl, test_cost: 0, train_cost: 0, time: 0.24907837099999997, length: 389, iterations: 6728"}
{"test_case": 273, "data": "MetropolisHasting 273: robots/6-4-9.pl, test_cost: 0, train_cost: 0, time: 0.012645968000000007, length: 53, iterations: 910"}
{"test_case": 274, "data": "MetropolisHasting 274: robots/6-4-10.pl, test_cost: 0, train_cost: 0, time: 0.885852174, length: 723, iterations: 13451"}
{"test_case": 275, "data": "MetropolisHasting 275: robots/6-5-0.pl, test_cost: 0, train_cost: 0, time: 0.017567828999999868, length: 116, iterations: 1018"}
{"test_case": 276, "data": "MetropolisHasting 276: robots/6-5-1.pl, test_cost: 0, train_cost: 0, time: 0.0027201860000001243, length: 14, iterations: 222"}
{"test_case": 277, "data": "MetropolisHasting 277: robots/6-5-2.pl, test_cost: 0, train_cost: 0, time: 0.003599009999999847, length: 22, iterations: 301"}
{"test_case": 278, "data": "MetropolisHasting 278: robots/6-5-3.pl, test_cost: 0, train_cost: 0, time: 0.16318542600000008, length: 311, iterations: 4731"}
{"test_case": 279, "data": "MetropolisHasting 279: robots/6-5-4.pl, test_cost: 0, train_cost: 0, time: 0.008714818000000069, length: 59, iterations: 485"}
{"test_case": 280, "data": "MetropolisHasting 280: robots/6-5-5.pl, test_cost: 0, train_cost: 0, time: 0.131426204, length: 342, iterations: 3937"}
{"test_case": 281, "data": "MetropolisHasting 281: robots/6-5-6.pl, test_cost: 0, train_cost: 0, time: 0.04269999300000002, length: 106, iterations: 2308"}
{"test_case": 282, "data": "MetropolisHasting 282: robots/6-5-7.pl, test_cost: 0, train_cost: 0, time: 0.01140886699999999, length: 88, iterations: 672"}
{"test_case": 283, "data": "MetropolisHasting 283: robots/6-5-8.pl, test_cost: 0, train_cost: 0, time: 0.005991173000000016, length: 35, iterations: 450"}
{"test_case": 284, "data": "MetropolisHasting 284: robots/6-5-9.pl, test_cost: 0, train_cost: 0, time: 0.12549434599999998, length: 283, iterations: 3805"}
{"test_case": 285, "data": "MetropolisHasting 285: robots/6-5-10.pl, test_cost: 0, train_cost: 0, time: 0.048026247999999994, length: 126, iterations: 2197"}
{"test_case": 286, "data": "MetropolisHasting 286: robots/6-6-0.pl, test_cost: 0, train_cost: 0, time: 0.04520806500000002, length: 71, iterations: 2431"}
{"test_case": 287, "data": "MetropolisHasting 287: robots/6-6-1.pl, test_cost: 0, train_cost: 0, time: 0.014079956000000005, length: 71, iterations: 847"}
{"test_case": 288, "data": "MetropolisHasting 288: robots/6-6-2.pl, test_cost: 0, train_cost: 0, time: 0.01985843100000001, length: 72, iterations: 989"}
{"test_case": 289, "data": "MetropolisHasting 289: robots/6-6-3.pl, test_cost: 0, train_cost: 0, time: 0.01094657099999996, length: 92, iterations: 640"}
{"test_case": 290, "data": "MetropolisHasting 290: robots/6-6-4.pl, test_cost: 0, train_cost: 0, time: 0.033571469, length: 52, iterations: 2259"}
{"test_case": 291, "data": "MetropolisHasting 291: robots/6-6-5.pl, test_cost: 0, train_cost: 0, time: 0.080643169, length: 197, iterations: 2831"}
{"test_case": 292, "data": "MetropolisHasting 292: robots/6-6-6.pl, test_cost: 0, train_cost: 0, time: 0.013959921, length: 78, iterations: 804"}
{"test_case": 293, "data": "MetropolisHasting 293: robots/6-6-7.pl, test_cost: 0, train_cost: 0, time: 0.019902734000000005, length: 102, iterations: 1088"}
{"test_case": 294, "data": "MetropolisHasting 294: robots/6-6-8.pl, test_cost: 0, train_cost: 0, time: 0.5386755089999999, length: 637, iterations: 9188"}
{"test_case": 295, "data": "MetropolisHasting 295: robots/6-6-9.pl, test_cost: 0, train_cost: 0, time: 0.059967832, length: 110, iterations: 2782"}
{"test_case": 296, "data": "MetropolisHasting 296: robots/6-6-10.pl, test_cost: 0, train_cost: 0, time: 0.066675551, length: 196, iterations: 2417"}
{"test_case": 297, "data": "MetropolisHasting 297: robots/6-7-0.pl, test_cost: 0, train_cost: 0, time: 0.009309685000000067, length: 32, iterations: 717"}
{"test_case": 298, "data": "MetropolisHasting 298: robots/6-7-1.pl, test_cost: 0, train_cost: 0, time: 7.391868157000001, length: 3086, iterations: 34673"}
{"test_case": 299, "data": "MetropolisHasting 299: robots/6-7-2.pl, test_cost: 0, train_cost: 0, time: 0.02032753800000009, length: 71, iterations: 1199"}
{"test_case": 300, "data": "MetropolisHasting 300: robots/6-7-3.pl, test_cost: 0, train_cost: 0, time: 0.010888535999999999, length: 68, iterations: 724"}
{"test_case": 301, "data": "MetropolisHasting 301: robots/6-7-4.pl, test_cost: 0, train_cost: 0, time: 0.115678109, length: 336, iterations: 3339"}
{"test_case": 302, "data": "MetropolisHasting 302: robots/6-7-5.pl, test_cost: 0, train_cost: 0, time: 2.580476499, length: 1814, iterations: 20892"}
{"test_case": 303, "data": "MetropolisHasting 303: robots/6-7-6.pl, test_cost: 0, train_cost: 0, time: 0.4826009349999998, length: 747, iterations: 7912"}
{"test_case": 304, "data": "MetropolisHasting 304: robots/6-7-7.pl, test_cost: 0, train_cost: 0, time: 0.014858717000000077, length: 60, iterations: 840"}
{"test_case": 305, "data": "MetropolisHasting 305: robots/6-7-8.pl, test_cost: 0, train_cost: 0, time: 0.018602326999999974, length: 59, iterations: 1300"}
{"test_case": 306, "data": "MetropolisHasting 306: robots/6-7-9.pl, test_cost: 0, train_cost: 0, time: 0.18478270600000002, length: 385, iterations: 4078"}
{"test_case": 307, "data": "MetropolisHasting 307: robots/6-7-10.pl, test_cost: 0, train_cost: 0, time: 0.16276093299999994, length: 447, iterations: 3752"}
{"test_case": 308, "data": "MetropolisHasting 308: robots/6-8-0.pl, test_cost: 0, train_cost: 0, time: 0.057260215999999975, length: 256, iterations: 2065"}
{"test_case": 309, "data": "MetropolisHasting 309: robots/6-8-1.pl, test_cost: 0, train_cost: 0, time: 0.004425574999999959, length: 26, iterations: 378"}
{"test_case": 310, "data": "MetropolisHasting 310: robots/6-8-2.pl, test_cost: 0, train_cost: 0, time: 0.650238576, length: 661, iterations: 10792"}
{"test_case": 311, "data": "MetropolisHasting 311: robots/6-8-3.pl, test_cost: 0, train_cost: 0, time: 0.07592982200000009, length: 264, iterations: 2662"}
{"test_case": 312, "data": "MetropolisHasting 312: robots/6-8-4.pl, test_cost: 0, train_cost: 0, time: 0.09863690600000008, length: 316, iterations: 3218"}
{"test_case": 313, "data": "MetropolisHasting 313: robots/6-8-5.pl, test_cost: 0, train_cost: 0, time: 0.038158687999999996, length: 169, iterations: 1565"}
{"test_case": 314, "data": "MetropolisHasting 314: robots/6-8-6.pl, test_cost: 0, train_cost: 0, time: 0.004248713000000071, length: 61, iterations: 327"}
{"test_case": 315, "data": "MetropolisHasting 315: robots/6-8-7.pl, test_cost: 0, train_cost: 0, time: 0.006163988000000065, length: 72, iterations: 353"}
{"test_case": 316, "data": "MetropolisHasting 316: robots/6-8-8.pl, test_cost: 6, train_cost: 6, time: 60.000850935, length: 8238, iterations: 106432"}
{"test_case": 317, "data": "MetropolisHasting 317: robots/6-8-9.pl, test_cost: 0, train_cost: 0, time: 0.08061567600000075, length: 207, iterations: 3108"}
{"test_case": 318, "data": "MetropolisHasting 318: robots/6-8-10.pl, test_cost: 0, train_cost: 0, time: 0.029925087999998823, length: 107, iterations: 1490"}
{"test_case": 319, "data": "MetropolisHasting 319: robots/6-9-0.pl, test_cost: 0, train_cost: 0, time: 0.07130488800000023, length: 190, iterations: 3384"}
{"test_case": 320, "data": "MetropolisHasting 320: robots/6-9-1.pl, test_cost: 0, train_cost: 0, time: 0.006398779, length: 40, iterations: 533"}
{"test_case": 321, "data": "MetropolisHasting 321: robots/6-9-2.pl, test_cost: 0, train_cost: 0, time: 0.035882159, length: 75, iterations: 2407"}
{"test_case": 322, "data": "MetropolisHasting 322: robots/6-9-3.pl, test_cost: 0, train_cost: 0, time: 0.038664916, length: 31, iterations: 2458"}
{"test_case": 323, "data": "MetropolisHasting 323: robots/6-9-4.pl, test_cost: 0, train_cost: 0, time: 0.024877710999999997, length: 113, iterations: 1280"}
{"test_case": 324, "data": "MetropolisHasting 324: robots/6-9-5.pl, test_cost: 0, train_cost: 0, time: 0.054126377, length: 127, iterations: 2979"}
{"test_case": 325, "data": "MetropolisHasting 325: robots/6-9-6.pl, test_cost: 0, train_cost: 0, time: 0.02902412900000001, length: 122, iterations: 1629"}
{"test_case": 326, "data": "MetropolisHasting 326: robots/6-9-7.pl, test_cost: 0, train_cost: 0, time: 0.024590525000000002, length: 73, iterations: 1356"}
{"test_case": 327, "data": "MetropolisHasting 327: robots/6-9-8.pl, test_cost: 0, train_cost: 0, time: 0.011275102000000009, length: 29, iterations: 941"}
{"test_case": 328, "data": "MetropolisHasting 328: robots/6-9-9.pl, test_cost: 0, train_cost: 0, time: 0.06627788100000001, length: 205, iterations: 2998"}
{"test_case": 329, "data": "MetropolisHasting 329: robots/6-9-10.pl, test_cost: 0, train_cost: 0, time: 0.024788569000000038, length: 101, iterations: 1354"}
{"test_case": 330, "data": "MetropolisHasting 330: robots/8-0-0.pl, test_cost: 0, train_cost: 0, time: 0.077683053, length: 183, iterations: 3191"}
{"test_case": 331, "data": "MetropolisHasting 331: robots/8-0-1.pl, test_cost: 0, train_cost: 0, time: 0.08135607199999999, length: 207, iterations: 3128"}
{"test_case": 332, "data": "MetropolisHasting 332: robots/8-0-2.pl, test_cost: 0, train_cost: 0, time: 9.646473744, length: 3372, iterations: 43242"}
{"test_case": 333, "data": "MetropolisHasting 333: robots/8-0-3.pl, test_cost: 0, train_cost: 0, time: 0.023462853999999922, length: 79, iterations: 1602"}
{"test_case": 334, "data": "MetropolisHasting 334: robots/8-0-4.pl, test_cost: 7, train_cost: 7, time: 60.000785558000004, length: 9527, iterations: 95928"}
{"test_case": 335, "data": "MetropolisHasting 335: robots/8-0-5.pl, test_cost: 0, train_cost: 0, time: 0.013271899999992343, length: 84, iterations: 822"}
{"test_case": 336, "data": "MetropolisHasting 336: robots/8-0-6.pl, test_cost: 0, train_cost: 0, time: 0.1322941349999951, length: 437, iterations: 2861"}
{"test_case": 337, "data": "MetropolisHasting 337: robots/8-0-7.pl, test_cost: 0, train_cost: 0, time: 0.02588891599999954, length: 161, iterations: 1086"}
{"test_case": 338, "data": "MetropolisHasting 338: robots/8-0-8.pl, test_cost: 0, train_cost: 0, time: 0.004382814999999596, length: 50, iterations: 344"}
{"test_case": 339, "data": "MetropolisHasting 339: robots/8-0-9.pl, test_cost: 0, train_cost: 0, time: 0.0218018260000008, length: 139, iterations: 1046"}
{"test_case": 340, "data": "MetropolisHasting 340: robots/8-0-10.pl, test_cost: 0, train_cost: 0, time: 0.11755199699999999, length: 291, iterations: 4546"}
{"test_case": 341, "data": "MetropolisHasting 341: robots/8-1-0.pl, test_cost: 0, train_cost: 0, time: 0.208702481, length: 397, iterations: 5006"}
{"test_case": 342, "data": "MetropolisHasting 342: robots/8-1-1.pl, test_cost: 0, train_cost: 0, time: 0.27359576500000005, length: 352, iterations: 5945"}
{"test_case": 343, "data": "MetropolisHasting 343: robots/8-1-2.pl, test_cost: 0, train_cost: 0, time: 0.065082835, length: 167, iterations: 2878"}
{"test_case": 344, "data": "MetropolisHasting 344: robots/8-1-3.pl, test_cost: 0, train_cost: 0, time: 0.02426781499999997, length: 129, iterations: 1215"}
{"test_case": 345, "data": "MetropolisHasting 345: robots/8-1-4.pl, test_cost: 0, train_cost: 0, time: 0.06452181999999995, length: 212, iterations: 1938"}
{"test_case": 346, "data": "MetropolisHasting 346: robots/8-1-5.pl, test_cost: 0, train_cost: 0, time: 0.3012412609999999, length: 781, iterations: 4966"}
{"test_case": 347, "data": "MetropolisHasting 347: robots/8-1-6.pl, test_cost: 0, train_cost: 0, time: 0.03547608999999996, length: 109, iterations: 1888"}
{"test_case": 348, "data": "MetropolisHasting 348: robots/8-1-7.pl, test_cost: 0, train_cost: 0, time: 0.16151090499999987, length: 307, iterations: 4927"}
{"test_case": 349, "data": "MetropolisHasting 349: robots/8-1-8.pl, test_cost: 0, train_cost: 0, time: 0.17557685200000006, length: 235, iterations: 7125"}
{"test_case": 350, "data": "MetropolisHasting 350: robots/8-1-9.pl, test_cost: 0, train_cost: 0, time: 0.08232697200000001, length: 204, iterations: 3218"}
{"test_case": 351, "data": "MetropolisHasting 351: robots/8-1-10.pl, test_cost: 0, train_cost: 0, time: 0.02939849, length: 100, iterations: 1564"}
{"test_case": 352, "data": "MetropolisHasting 352: robots/8-2-0.pl, test_cost: 0, train_cost: 0, time: 0.10912814999999998, length: 249, iterations: 4542"}
{"test_case": 353, "data": "MetropolisHasting 353: robots/8-2-1.pl, test_cost: 0, train_cost: 0, time: 0.26447545199999994, length: 508, iterations: 6409"}
{"test_case": 354, "data": "MetropolisHasting 354: robots/8-2-2.pl, test_cost: 0, train_cost: 0, time: 0.10018691299999993, length: 166, iterations: 3784"}
{"test_case": 355, "data": "MetropolisHasting 355: robots/8-2-3.pl, test_cost: 0, train_cost: 0, time: 0.179440433, length: 408, iterations: 4269"}
{"test_case": 356, "data": "MetropolisHasting 356: robots/8-2-4.pl, test_cost: 0, train_cost: 0, time: 7.764038789999999, length: 3002, iterations: 33629"}
{"test_case": 357, "data": "MetropolisHasting 357: robots/8-2-5.pl, test_cost: 0, train_cost: 0, time: 0.06032286299999967, length: 173, iterations: 3029"}
{"test_case": 358, "data": "MetropolisHasting 358: robots/8-2-6.pl, test_cost: 0, train_cost: 0, time: 0.17209004799999938, length: 62, iterations: 5176"}
{"test_case": 359, "data": "MetropolisHasting 359: robots/8-2-7.pl, test_cost: 0, train_cost: 0, time: 0.11126650299999952, length: 188, iterations: 3979"}
{"test_case": 360, "data": "MetropolisHasting 360: robots/8-2-8.pl, test_cost: 0, train_cost: 0, time: 0.097947476, length: 245, iterations: 2973"}
{"test_case": 361, "data": "MetropolisHasting 361: robots/8-2-9.pl, test_cost: 0, train_cost: 0, time: 0.013527448999999997, length: 80, iterations: 839"}
{"test_case": 362, "data": "MetropolisHasting 362: robots/8-2-10.pl, test_cost: 0, train_cost: 0, time: 0.132525055, length: 261, iterations: 3729"}
{"test_case": 363, "data": "MetropolisHasting 363: robots/8-3-0.pl, test_cost: 0, train_cost: 0, time: 0.122998617, length: 215, iterations: 4275"}
{"test_case": 364, "data": "MetropolisHasting 364: robots/8-3-1.pl, test_cost: 12, train_cost: 12, time: 60.000082481, length: 8182, iterations: 98630"}
{"test_case": 365, "data": "MetropolisHasting 365: robots/8-3-2.pl, test_cost: 0, train_cost: 0, time: 0.20466091800000186, length: 497, iterations: 4407"}
{"test_case": 366, "data": "MetropolisHasting 366: robots/8-3-3.pl, test_cost: 0, train_cost: 0, time: 0.2899468230000011, length: 355, iterations: 7369"}
{"test_case": 367, "data": "MetropolisHasting 367: robots/8-3-4.pl, test_cost: 0, train_cost: 0, time: 0.034073788999997134, length: 191, iterations: 1398"}
{"test_case": 368, "data": "MetropolisHasting 368: robots/8-3-5.pl, test_cost: 0, train_cost: 0, time: 0.10253863599999846, length: 303, iterations: 2984"}
{"test_case": 369, "data": "MetropolisHasting 369: robots/8-3-6.pl, test_cost: 0, train_cost: 0, time: 0.006718537000004687, length: 53, iterations: 499"}
{"test_case": 370, "data": "MetropolisHasting 370: robots/8-3-7.pl, test_cost: 0, train_cost: 0, time: 0.04697526, length: 196, iterations: 1858"}
{"test_case": 371, "data": "MetropolisHasting 371: robots/8-3-8.pl, test_cost: 0, train_cost: 0, time: 0.017759004000000002, length: 21, iterations: 1428"}
{"test_case": 372, "data": "MetropolisHasting 372: robots/8-3-9.pl, test_cost: 0, train_cost: 0, time: 0.39224332900000003, length: 901, iterations: 5207"}
{"test_case": 373, "data": "MetropolisHasting 373: robots/8-3-10.pl, test_cost: 0, train_cost: 0, time: 0.031050562999999975, length: 147, iterations: 1277"}
{"test_case": 374, "data": "MetropolisHasting 374: robots/8-4-0.pl, test_cost: 0, train_cost: 0, time: 0.03317914400000005, length: 176, iterations: 1454"}
{"test_case": 375, "data": "MetropolisHasting 375: robots/8-4-1.pl, test_cost: 0, train_cost: 0, time: 0.250766328, length: 547, iterations: 5527"}
{"test_case": 376, "data": "MetropolisHasting 376: robots/8-4-2.pl, test_cost: 0, train_cost: 0, time: 0.04501224000000004, length: 191, iterations: 1581"}
{"test_case": 377, "data": "MetropolisHasting 377: robots/8-4-3.pl, test_cost: 0, train_cost: 0, time: 0.11548502900000002, length: 294, iterations: 3230"}
{"test_case": 378, "data": "MetropolisHasting 378: robots/8-4-4.pl, test_cost: 0, train_cost: 0, time: 0.08624688199999997, length: 158, iterations: 3687"}
{"test_case": 379, "data": "MetropolisHasting 379: robots/8-4-5.pl, test_cost: 0, train_cost: 0, time: 0.013431611999999982, length: 113, iterations: 682"}
{"test_case": 380, "data": "MetropolisHasting 380: robots/8-4-6.pl, test_cost: 0, train_cost: 0, time: 0.069125443, length: 170, iterations: 2884"}
{"test_case": 381, "data": "MetropolisHasting 381: robots/8-4-7.pl, test_cost: 0, train_cost: 0, time: 2.858896203, length: 1720, iterations: 23091"}
{"test_case": 382, "data": "MetropolisHasting 382: robots/8-4-8.pl, test_cost: 0, train_cost: 0, time: 0.009318667000000058, length: 51, iterations: 564"}
{"test_case": 383, "data": "MetropolisHasting 383: robots/8-4-9.pl, test_cost: 0, train_cost: 0, time: 0.01707600900000017, length: 89, iterations: 984"}
{"test_case": 384, "data": "MetropolisHasting 384: robots/8-4-10.pl, test_cost: 0, train_cost: 0, time: 0.367979756, length: 556, iterations: 6697"}
{"test_case": 385, "data": "MetropolisHasting 385: robots/8-5-0.pl, test_cost: 0, train_cost: 0, time: 0.17869603899999964, length: 88, iterations: 6516"}
{"test_case": 386, "data": "MetropolisHasting 386: robots/8-5-1.pl, test_cost: 0, train_cost: 0, time: 0.14562805800000023, length: 407, iterations: 3381"}
{"test_case": 387, "data": "MetropolisHasting 387: robots/8-5-2.pl, test_cost: 0, train_cost: 0, time: 0.050482666999999815, length: 78, iterations: 2772"}
{"test_case": 388, "data": "MetropolisHasting 388: robots/8-5-3.pl, test_cost: 0, train_cost: 0, time: 0.01765001200000027, length: 112, iterations: 926"}
{"test_case": 389, "data": "MetropolisHasting 389: robots/8-5-4.pl, test_cost: 0, train_cost: 0, time: 0.013573889000000339, length: 29, iterations: 999"}
{"test_case": 390, "data": "MetropolisHasting 390: robots/8-5-5.pl, test_cost: 0, train_cost: 0, time: 0.003487416000000001, length: 33, iterations: 225"}
{"test_case": 391, "data": "MetropolisHasting 391: robots/8-5-6.pl, test_cost: 0, train_cost: 0, time: 0.03666499299999999, length: 97, iterations: 1766"}
{"test_case": 392, "data": "MetropolisHasting 392: robots/8-5-7.pl, test_cost: 0, train_cost: 0, time: 0.08054214899999998, length: 237, iterations: 2938"}
{"test_case": 393, "data": "MetropolisHasting 393: robots/8-5-8.pl, test_cost: 0, train_cost: 0, time: 0.044741381, length: 132, iterations: 2392"}
{"test_case": 394, "data": "MetropolisHasting 394: robots/8-5-9.pl, test_cost: 0, train_cost: 0, time: 0.035947221, length: 139, iterations: 1598"}
{"test_case": 395, "data": "MetropolisHasting 395: robots/8-5-10.pl, test_cost: 0, train_cost: 0, time: 0.218906619, length: 378, iterations: 5671"}
{"test_case": 396, "data": "MetropolisHasting 396: robots/8-6-0.pl, test_cost: 0, train_cost: 0, time: 0.058991775999999996, length: 131, iterations: 2954"}
{"test_case": 397, "data": "MetropolisHasting 397: robots/8-6-1.pl, test_cost: 0, train_cost: 0, time: 0.06724937000000003, length: 185, iterations: 2429"}
{"test_case": 398, "data": "MetropolisHasting 398: robots/8-6-2.pl, test_cost: 0, train_cost: 0, time: 0.025016246999999936, length: 69, iterations: 1554"}
{"test_case": 399, "data": "MetropolisHasting 399: robots/8-6-3.pl, test_cost: 0, train_cost: 0, time: 1.272336437, length: 148, iterations: 15096"}
{"test_case": 400, "data": "MetropolisHasting 400: robots/8-6-4.pl, test_cost: 0, train_cost: 0, time: 0.019542325, length: 99, iterations: 1372"}
{"test_case": 401, "data": "MetropolisHasting 401: robots/8-6-5.pl, test_cost: 0, train_cost: 0, time: 0.041901825000000004, length: 112, iterations: 1964"}
{"test_case": 402, "data": "MetropolisHasting 402: robots/8-6-6.pl, test_cost: 0, train_cost: 0, time: 0.281145891, length: 385, iterations: 5958"}
{"test_case": 403, "data": "MetropolisHasting 403: robots/8-6-7.pl, test_cost: 0, train_cost: 0, time: 0.9103807690000001, length: 1017, iterations: 10047"}
{"test_case": 404, "data": "MetropolisHasting 404: robots/8-6-8.pl, test_cost: 0, train_cost: 0, time: 0.011547945000000004, length: 74, iterations: 650"}
{"test_case": 405, "data": "MetropolisHasting 405: robots/8-6-9.pl, test_cost: 0, train_cost: 0, time: 0.02269647099999994, length: 100, iterations: 1166"}
{"test_case": 406, "data": "MetropolisHasting 406: robots/8-6-10.pl, test_cost: 0, train_cost: 0, time: 0.10924852399999985, length: 327, iterations: 3715"}
{"test_case": 407, "data": "MetropolisHasting 407: robots/8-7-0.pl, test_cost: 0, train_cost: 0, time: 0.020727900999999882, length: 153, iterations: 1022"}
{"test_case": 408, "data": "MetropolisHasting 408: robots/8-7-1.pl, test_cost: 0, train_cost: 0, time: 1.1569850599999998, length: 1109, iterations: 13833"}
{"test_case": 409, "data": "MetropolisHasting 409: robots/8-7-2.pl, test_cost: 0, train_cost: 0, time: 0.04934893799999962, length: 164, iterations: 2087"}
{"test_case": 410, "data": "MetropolisHasting 410: robots/8-7-3.pl, test_cost: 0, train_cost: 0, time: 0.020860013, length: 97, iterations: 1113"}
{"test_case": 411, "data": "MetropolisHasting 411: robots/8-7-4.pl, test_cost: 0, train_cost: 0, time: 0.20562646699999998, length: 400, iterations: 5026"}
{"test_case": 412, "data": "MetropolisHasting 412: robots/8-7-5.pl, test_cost: 0, train_cost: 0, time: 0.014931618000000008, length: 70, iterations: 846"}
{"test_case": 413, "data": "MetropolisHasting 413: robots/8-7-6.pl, test_cost: 0, train_cost: 0, time: 0.056949002000000026, length: 184, iterations: 2519"}
{"test_case": 414, "data": "MetropolisHasting 414: robots/8-7-7.pl, test_cost: 0, train_cost: 0, time: 0.006444239000000018, length: 20, iterations: 556"}
{"test_case": 415, "data": "MetropolisHasting 415: robots/8-7-8.pl, test_cost: 0, train_cost: 0, time: 24.632804266, length: 5890, iterations: 67508"}
{"test_case": 416, "data": "MetropolisHasting 416: robots/8-7-9.pl, test_cost: 0, train_cost: 0, time: 0.3721320850000005, length: 445, iterations: 9060"}
{"test_case": 417, "data": "MetropolisHasting 417: robots/8-7-10.pl, test_cost: 0, train_cost: 0, time: 0.10648290800000026, length: 342, iterations: 2883"}
{"test_case": 418, "data": "MetropolisHasting 418: robots/8-8-0.pl, test_cost: 0, train_cost: 0, time: 0.06347813400000035, length: 242, iterations: 2494"}
{"test_case": 419, "data": "MetropolisHasting 419: robots/8-8-1.pl, test_cost: 0, train_cost: 0, time: 0.04200718100000245, length: 110, iterations: 2932"}
{"test_case": 420, "data": "MetropolisHasting 420: robots/8-8-2.pl, test_cost: 0, train_cost: 0, time: 0.18190734, length: 364, iterations: 4428"}
{"test_case": 421, "data": "MetropolisHasting 421: robots/8-8-3.pl, test_cost: 0, train_cost: 0, time: 0.09673399100000002, length: 338, iterations: 2673"}
{"test_case": 422, "data": "MetropolisHasting 422: robots/8-8-4.pl, test_cost: 0, train_cost: 0, time: 0.07051723300000001, length: 190, iterations: 2373"}
{"test_case": 423, "data": "MetropolisHasting 423: robots/8-8-5.pl, test_cost: 0, train_cost: 0, time: 0.025005074000000016, length: 134, iterations: 1285"}
{"test_case": 424, "data": "MetropolisHasting 424: robots/8-8-6.pl, test_cost: 0, train_cost: 0, time: 19.174157524, length: 5706, iterations: 51077"}
{"test_case": 425, "data": "MetropolisHasting 425: robots/8-8-7.pl, test_cost: 0, train_cost: 0, time: 0.04443872399999904, length: 148, iterations: 2145"}
{"test_case": 426, "data": "MetropolisHasting 426: robots/8-8-8.pl, test_cost: 0, train_cost: 0, time: 0.3169440289999983, length: 475, iterations: 7025"}
{"test_case": 427, "data": "MetropolisHasting 427: robots/8-8-9.pl, test_cost: 0, train_cost: 0, time: 2.5330071770000018, length: 1463, iterations: 21453"}
{"test_case": 428, "data": "MetropolisHasting 428: robots/8-8-10.pl, test_cost: 0, train_cost: 0, time: 0.013854744999999724, length: 82, iterations: 913"}
{"test_case": 429, "data": "MetropolisHasting 429: robots/8-9-0.pl, test_cost: 0, train_cost: 0, time: 0.8199421549999997, length: 1027, iterations: 9430"}
{"test_case": 430, "data": "MetropolisHasting 430: robots/8-9-1.pl, test_cost: 0, train_cost: 0, time: 0.04393453, length: 154, iterations: 1798"}
{"test_case": 431, "data": "MetropolisHasting 431: robots/8-9-2.pl, test_cost: 0, train_cost: 0, time: 0.06610031799999999, length: 93, iterations: 2674"}
{"test_case": 432, "data": "MetropolisHasting 432: robots/8-9-3.pl, test_cost: 0, train_cost: 0, time: 0.016060301, length: 73, iterations: 989"}
{"test_case": 433, "data": "MetropolisHasting 433: robots/8-9-4.pl, test_cost: 0, train_cost: 0, time: 0.029339912999999995, length: 42, iterations: 1954"}
{"test_case": 434, "data": "MetropolisHasting 434: robots/8-9-5.pl, test_cost: 0, train_cost: 0, time: 0.01393936400000001, length: 46, iterations: 921"}
{"test_case": 435, "data": "MetropolisHasting 435: robots/8-9-6.pl, test_cost: 0, train_cost: 0, time: 0.15095750200000002, length: 305, iterations: 4039"}
{"test_case": 436, "data": "MetropolisHasting 436: robots/8-9-7.pl, test_cost: 0, train_cost: 0, time: 0.021746092999999966, length: 108, iterations: 1136"}
{"test_case": 437, "data": "MetropolisHasting 437: robots/8-9-8.pl, test_cost: 0, train_cost: 0, time: 0.016590074999999982, length: 97, iterations: 892"}
{"test_case": 438, "data": "MetropolisHasting 438: robots/8-9-9.pl, test_cost: 0, train_cost: 0, time: 0.866460122, length: 792, iterations: 11457"}
{"test_case": 439, "data": "MetropolisHasting 439: robots/8-9-10.pl, test_cost: 0, train_cost: 0, time: 0.08764774400000008, length: 193, iterations: 3426"}
{"test_case": 440, "data": "MetropolisHasting 440: robots/10-0-0.pl, test_cost: 0, train_cost: 0, time: 0.006084203999999999, length: 12, iterations: 501"}
{"test_case": 441, "data": "MetropolisHasting 441: robots/10-0-1.pl, test_cost: 0, train_cost: 0, time: 1.7548471509999999, length: 1672, iterations: 14546"}
{"test_case": 442, "data": "MetropolisHasting 442: robots/10-0-2.pl, test_cost: 6, train_cost: 6, time: 60.001922308000005, length: 10248, iterations: 80159"}
{"test_case": 443, "data": "MetropolisHasting 443: robots/10-0-3.pl, test_cost: 0, train_cost: 0, time: 1.1033244260000004, length: 1115, iterations: 11098"}
{"test_case": 444, "data": "MetropolisHasting 444: robots/10-0-4.pl, test_cost: 0, train_cost: 0, time: 0.010954277999999817, length: 61, iterations: 669"}
{"test_case": 445, "data": "MetropolisHasting 445: robots/10-0-5.pl, test_cost: 0, train_cost: 0, time: 0.022862772999999947, length: 81, iterations: 1520"}
{"test_case": 446, "data": "MetropolisHasting 446: robots/10-0-6.pl, test_cost: 0, train_cost: 0, time: 0.052654807999999775, length: 201, iterations: 2074"}
{"test_case": 447, "data": "MetropolisHasting 447: robots/10-0-7.pl, test_cost: 0, train_cost: 0, time: 0.028110116000000573, length: 50, iterations: 1773"}
{"test_case": 448, "data": "MetropolisHasting 448: robots/10-0-8.pl, test_cost: 0, train_cost: 0, time: 0.03404669500000068, length: 146, iterations: 1507"}
{"test_case": 449, "data": "MetropolisHasting 449: robots/10-0-9.pl, test_cost: 0, train_cost: 0, time: 6.825901867000006, length: 3295, iterations: 33640"}
{"test_case": 450, "data": "MetropolisHasting 450: robots/10-0-10.pl, test_cost: 7, train_cost: 7, time: 60.000944862999994, length: 10322, iterations: 75343"}
{"test_case": 451, "data": "MetropolisHasting 451: robots/10-1-0.pl, test_cost: 0, train_cost: 0, time: 0.20615684700000259, length: 73, iterations: 5691"}
{"test_case": 452, "data": "MetropolisHasting 452: robots/10-1-1.pl, test_cost: 0, train_cost: 0, time: 0.0035634579999950233, length: 59, iterations: 220"}
{"test_case": 453, "data": "MetropolisHasting 453: robots/10-1-2.pl, test_cost: 0, train_cost: 0, time: 0.18494875200000394, length: 366, iterations: 4932"}
{"test_case": 454, "data": "MetropolisHasting 454: robots/10-1-3.pl, test_cost: 0, train_cost: 0, time: 0.040820738999997275, length: 216, iterations: 1279"}
{"test_case": 455, "data": "MetropolisHasting 455: robots/10-1-4.pl, test_cost: 0, train_cost: 0, time: 0.2185080419999963, length: 482, iterations: 4744"}
{"test_case": 456, "data": "MetropolisHasting 456: robots/10-1-5.pl, test_cost: 0, train_cost: 0, time: 1.6035074179999995, length: 1346, iterations: 14735"}
{"test_case": 457, "data": "MetropolisHasting 457: robots/10-1-6.pl, test_cost: 0, train_cost: 0, time: 0.02642006600000002, length: 76, iterations: 1492"}
{"test_case": 458, "data": "MetropolisHasting 458: robots/10-1-7.pl, test_cost: 0, train_cost: 0, time: 0.1090099930000008, length: 262, iterations: 2983"}
{"test_case": 459, "data": "MetropolisHasting 459: robots/10-1-8.pl, test_cost: 0, train_cost: 0, time: 0.03458415300000439, length: 131, iterations: 1673"}
{"test_case": 460, "data": "MetropolisHasting 460: robots/10-1-9.pl, test_cost: 0, train_cost: 0, time: 2.554783208, length: 2266, iterations: 17207"}
{"test_case": 461, "data": "MetropolisHasting 461: robots/10-1-10.pl, test_cost: 0, train_cost: 0, time: 0.021171675000000167, length: 169, iterations: 896"}
{"test_case": 462, "data": "MetropolisHasting 462: robots/10-2-0.pl, test_cost: 0, train_cost: 0, time: 4.196238564, length: 2339, iterations: 21432"}
{"test_case": 463, "data": "MetropolisHasting 463: robots/10-2-1.pl, test_cost: 0, train_cost: 0, time: 0.06157874999999979, length: 206, iterations: 3100"}
{"test_case": 464, "data": "MetropolisHasting 464: robots/10-2-2.pl, test_cost: 0, train_cost: 0, time: 0.034680788000000184, length: 162, iterations: 1569"}
{"test_case": 465, "data": "MetropolisHasting 465: robots/10-2-3.pl, test_cost: 0, train_cost: 0, time: 0.026395949999999502, length: 140, iterations: 1224"}
{"test_case": 466, "data": "MetropolisHasting 466: robots/10-2-4.pl, test_cost: 0, train_cost: 0, time: 0.09591795000000047, length: 271, iterations: 2916"}
{"test_case": 467, "data": "MetropolisHasting 467: robots/10-2-5.pl, test_cost: 0, train_cost: 0, time: 0.07247850099999997, length: 248, iterations: 2145"}
{"test_case": 468, "data": "MetropolisHasting 468: robots/10-2-6.pl, test_cost: 0, train_cost: 0, time: 0.874674615, length: 702, iterations: 11544"}
{"test_case": 469, "data": "MetropolisHasting 469: robots/10-2-7.pl, test_cost: 0, train_cost: 0, time: 0.023522843999999488, length: 126, iterations: 1204"}
{"test_case": 470, "data": "MetropolisHasting 470: robots/10-2-8.pl, test_cost: 0, train_cost: 0, time: 0.36830063700000004, length: 798, iterations: 5026"}
{"test_case": 471, "data": "MetropolisHasting 471: robots/10-2-9.pl, test_cost: 0, train_cost: 0, time: 0.045669514999999994, length: 169, iterations: 1950"}
{"test_case": 472, "data": "MetropolisHasting 472: robots/10-2-10.pl, test_cost: 0, train_cost: 0, time: 0.073724283, length: 218, iterations: 3352"}
{"test_case": 473, "data": "MetropolisHasting 473: robots/10-3-0.pl, test_cost: 0, train_cost: 0, time: 0.055065984999999984, length: 50, iterations: 3979"}
{"test_case": 474, "data": "MetropolisHasting 474: robots/10-3-1.pl, test_cost: 0, train_cost: 0, time: 0.256164305, length: 707, iterations: 4414"}
{"test_case": 475, "data": "MetropolisHasting 475: robots/10-3-2.pl, test_cost: 0, train_cost: 0, time: 0.22329410300000008, length: 491, iterations: 4372"}
{"test_case": 476, "data": "MetropolisHasting 476: robots/10-3-3.pl, test_cost: 0, train_cost: 0, time: 25.003440323, length: 5254, iterations: 86656"}
{"test_case": 477, "data": "MetropolisHasting 477: robots/10-3-4.pl, test_cost: 0, train_cost: 0, time: 0.006793968999996736, length: 65, iterations: 433"}
{"test_case": 478, "data": "MetropolisHasting 478: robots/10-3-5.pl, test_cost: 0, train_cost: 0, time: 0.16854305200000042, length: 313, iterations: 4316"}
{"test_case": 479, "data": "MetropolisHasting 479: robots/10-3-6.pl, test_cost: 12, train_cost: 12, time: 60.001414185, length: 10864, iterations: 85880"}
{"test_case": 480, "data": "MetropolisHasting 480: robots/10-3-7.pl, test_cost: 0, train_cost: 0, time: 0.10312452100000001, length: 354, iterations: 2667"}
{"test_case": 481, "data": "MetropolisHasting 481: robots/10-3-8.pl, test_cost: 0, train_cost: 0, time: 0.82919867, length: 1143, iterations: 8882"}
{"test_case": 482, "data": "MetropolisHasting 482: robots/10-3-9.pl, test_cost: 0, train_cost: 0, time: 0.11763932100000007, length: 235, iterations: 4207"}
{"test_case": 483, "data": "MetropolisHasting 483: robots/10-3-10.pl, test_cost: 0, train_cost: 0, time: 8.178485622, length: 3985, iterations: 27689"}
{"test_case": 484, "data": "MetropolisHasting 484: robots/10-4-0.pl, test_cost: 0, train_cost: 0, time: 0.0663680590000002, length: 140, iterations: 2732"}
{"test_case": 485, "data": "MetropolisHasting 485: robots/10-4-1.pl, test_cost: 0, train_cost: 0, time: 7.3329509, length: 3508, iterations: 26473"}
{"test_case": 486, "data": "MetropolisHasting 486: robots/10-4-2.pl, test_cost: 0, train_cost: 0, time: 0.16131581800000205, length: 131, iterations: 6553"}
{"test_case": 487, "data": "MetropolisHasting 487: robots/10-4-3.pl, test_cost: 0, train_cost: 0, time: 0.5276052730000025, length: 776, iterations: 7733"}
{"test_case": 488, "data": "MetropolisHasting 488: robots/10-4-4.pl, test_cost: 0, train_cost: 0, time: 0.022642318999999134, length: 77, iterations: 1440"}
{"test_case": 489, "data": "MetropolisHasting 489: robots/10-4-5.pl, test_cost: 0, train_cost: 0, time: 0.1924674849999981, length: 563, iterations: 3365"}
{"test_case": 490, "data": "MetropolisHasting 490: robots/10-4-6.pl, test_cost: 0, train_cost: 0, time: 0.54162681, length: 1067, iterations: 6345"}
{"test_case": 491, "data": "MetropolisHasting 491: robots/10-4-7.pl, test_cost: 0, train_cost: 0, time: 1.0513943399999999, length: 1017, iterations: 12787"}
{"test_case": 492, "data": "MetropolisHasting 492: robots/10-4-8.pl, test_cost: 0, train_cost: 0, time: 0.2525576599999999, length: 530, iterations: 4528"}
{"test_case": 493, "data": "MetropolisHasting 493: robots/10-4-9.pl, test_cost: 0, train_cost: 0, time: 0.1783798710000002, length: 319, iterations: 4847"}
{"test_case": 494, "data": "MetropolisHasting 494: robots/10-4-10.pl, test_cost: 0, train_cost: 0, time: 0.773538432, length: 1326, iterations: 7502"}
{"test_case": 495, "data": "MetropolisHasting 495: robots/10-5-0.pl, test_cost: 0, train_cost: 0, time: 0.0683091130000002, length: 138, iterations: 3363"}
{"test_case": 496, "data": "MetropolisHasting 496: robots/10-5-1.pl, test_cost: 0, train_cost: 0, time: 0.08874020100000024, length: 148, iterations: 4406"}
{"test_case": 497, "data": "MetropolisHasting 497: robots/10-5-2.pl, test_cost: 0, train_cost: 0, time: 0.01987452199999984, length: 146, iterations: 1005"}
{"test_case": 498, "data": "MetropolisHasting 498: robots/10-5-3.pl, test_cost: 0, train_cost: 0, time: 0.15804316000000007, length: 96, iterations: 8240"}
{"test_case": 499, "data": "MetropolisHasting 499: robots/10-5-4.pl, test_cost: 0, train_cost: 0, time: 0.5845610400000001, length: 836, iterations: 8717"}
{"test_case": 500, "data": "MetropolisHasting 500: robots/10-5-5.pl, test_cost: 0, train_cost: 0, time: 0.0300802, length: 128, iterations: 1371"}
{"test_case": 501, "data": "MetropolisHasting 501: robots/10-5-6.pl, test_cost: 0, train_cost: 0, time: 2.9824328770000004, length: 2426, iterations: 20461"}
{"test_case": 502, "data": "MetropolisHasting 502: robots/10-5-7.pl, test_cost: 0, train_cost: 0, time: 0.051634818999999776, length: 167, iterations: 2563"}
{"test_case": 503, "data": "MetropolisHasting 503: robots/10-5-8.pl, test_cost: 0, train_cost: 0, time: 0.009680223000000154, length: 46, iterations: 703"}
{"test_case": 504, "data": "MetropolisHasting 504: robots/10-5-9.pl, test_cost: 0, train_cost: 0, time: 0.03138551999999972, length: 130, iterations: 1722"}
{"test_case": 505, "data": "MetropolisHasting 505: robots/10-5-10.pl, test_cost: 0, train_cost: 0, time: 0.057605994000000216, length: 205, iterations: 1985"}
{"test_case": 506, "data": "MetropolisHasting 506: robots/10-6-0.pl, test_cost: 0, train_cost: 0, time: 1.0299060020000002, length: 933, iterations: 12522"}
{"test_case": 507, "data": "MetropolisHasting 507: robots/10-6-1.pl, test_cost: 0, train_cost: 0, time: 0.005660600999999765, length: 34, iterations: 465"}
{"test_case": 508, "data": "MetropolisHasting 508: robots/10-6-2.pl, test_cost: 0, train_cost: 0, time: 0.06503911700000042, length: 156, iterations: 2447"}
{"test_case": 509, "data": "MetropolisHasting 509: robots/10-6-3.pl, test_cost: 0, train_cost: 0, time: 0.11044105299999973, length: 333, iterations: 2988"}
{"test_case": 510, "data": "MetropolisHasting 510: robots/10-6-4.pl, test_cost: 0, train_cost: 0, time: 0.129977528, length: 348, iterations: 3125"}
{"test_case": 511, "data": "MetropolisHasting 511: robots/10-6-5.pl, test_cost: 0, train_cost: 0, time: 0.008319814000000009, length: 44, iterations: 584"}
{"test_case": 512, "data": "MetropolisHasting 512: robots/10-6-6.pl, test_cost: 0, train_cost: 0, time: 0.348818787, length: 522, iterations: 7209"}
{"test_case": 513, "data": "MetropolisHasting 513: robots/10-6-7.pl, test_cost: 0, train_cost: 0, time: 0.03991221899999997, length: 173, iterations: 1545"}
{"test_case": 514, "data": "MetropolisHasting 514: robots/10-6-8.pl, test_cost: 0, train_cost: 0, time: 0.047823746000000056, length: 137, iterations: 2361"}
{"test_case": 515, "data": "MetropolisHasting 515: robots/10-6-9.pl, test_cost: 0, train_cost: 0, time: 0.054857732999999964, length: 188, iterations: 2190"}
{"test_case": 516, "data": "MetropolisHasting 516: robots/10-6-10.pl, test_cost: 0, train_cost: 0, time: 0.03560052299999994, length: 209, iterations: 1267"}
{"test_case": 517, "data": "MetropolisHasting 517: robots/10-7-0.pl, test_cost: 0, train_cost: 0, time: 0.015667922, length: 105, iterations: 901"}
{"test_case": 518, "data": "MetropolisHasting 518: robots/10-7-1.pl, test_cost: 0, train_cost: 0, time: 0.40000216899999996, length: 431, iterations: 7106"}
{"test_case": 519, "data": "MetropolisHasting 519: robots/10-7-2.pl, test_cost: 0, train_cost: 0, time: 0.0967409170000002, length: 236, iterations: 3145"}
{"test_case": 520, "data": "MetropolisHasting 520: robots/10-7-3.pl, test_cost: 0, train_cost: 0, time: 0.06650067, length: 200, iterations: 2735"}
{"test_case": 521, "data": "MetropolisHasting 521: robots/10-7-4.pl, test_cost: 0, train_cost: 0, time: 0.600320903, length: 310, iterations: 9810"}
{"test_case": 522, "data": "MetropolisHasting 522: robots/10-7-5.pl, test_cost: 0, train_cost: 0, time: 2.167475894, length: 1735, iterations: 15135"}
{"test_case": 523, "data": "MetropolisHasting 523: robots/10-7-6.pl, test_cost: 0, train_cost: 0, time: 9.202405049000001, length: 3931, iterations: 37794"}
{"test_case": 524, "data": "MetropolisHasting 524: robots/10-7-7.pl, test_cost: 0, train_cost: 0, time: 0.02425908400000054, length: 125, iterations: 1565"}
{"test_case": 525, "data": "MetropolisHasting 525: robots/10-7-8.pl, test_cost: 0, train_cost: 0, time: 0.010281954000001647, length: 54, iterations: 707"}
{"test_case": 526, "data": "MetropolisHasting 526: robots/10-7-9.pl, test_cost: 0, train_cost: 0, time: 0.16842118599999978, length: 326, iterations: 4605"}
{"test_case": 527, "data": "MetropolisHasting 527: robots/10-7-10.pl, test_cost: 0, train_cost: 0, time: 0.13038427699999922, length: 422, iterations: 2537"}
{"test_case": 528, "data": "MetropolisHasting 528: robots/10-8-0.pl, test_cost: 0, train_cost: 0, time: 0.5897865379999985, length: 892, iterations: 8918"}
{"test_case": 529, "data": "MetropolisHasting 529: robots/10-8-1.pl, test_cost: 0, train_cost: 0, time: 0.1012847420000007, length: 244, iterations: 3075"}
{"test_case": 530, "data": "MetropolisHasting 530: robots/10-8-2.pl, test_cost: 0, train_cost: 0, time: 0.09320090600000001, length: 275, iterations: 2688"}
{"test_case": 531, "data": "MetropolisHasting 531: robots/10-8-3.pl, test_cost: 0, train_cost: 0, time: 0.36975346600000003, length: 439, iterations: 6164"}
{"test_case": 532, "data": "MetropolisHasting 532: robots/10-8-4.pl, test_cost: 0, train_cost: 0, time: 1.491611923, length: 1522, iterations: 12562"}
{"test_case": 533, "data": "MetropolisHasting 533: robots/10-8-5.pl, test_cost: 0, train_cost: 0, time: 0.017941176999999975, length: 108, iterations: 1034"}
{"test_case": 534, "data": "MetropolisHasting 534: robots/10-8-6.pl, test_cost: 0, train_cost: 0, time: 0.06922357400000001, length: 232, iterations: 2252"}
{"test_case": 535, "data": "MetropolisHasting 535: robots/10-8-7.pl, test_cost: 0, train_cost: 0, time: 0.9721907660000002, length: 580, iterations: 15471"}
{"test_case": 536, "data": "MetropolisHasting 536: robots/10-8-8.pl, test_cost: 0, train_cost: 0, time: 0.01607687300000027, length: 94, iterations: 862"}
{"test_case": 537, "data": "MetropolisHasting 537: robots/10-8-9.pl, test_cost: 0, train_cost: 0, time: 0.9270742369999998, length: 1115, iterations: 11132"}
{"test_case": 538, "data": "MetropolisHasting 538: robots/10-8-10.pl, test_cost: 0, train_cost: 0, time: 0.025648528999999698, length: 134, iterations: 1233"}
{"test_case": 539, "data": "MetropolisHasting 539: robots/10-9-0.pl, test_cost: 0, train_cost: 0, time: 0.05630606300000007, length: 185, iterations: 2022"}
{"test_case": 540, "data": "MetropolisHasting 540: robots/10-9-1.pl, test_cost: 0, train_cost: 0, time: 0.25603826700000004, length: 481, iterations: 5523"}
{"test_case": 541, "data": "MetropolisHasting 541: robots/10-9-2.pl, test_cost: 0, train_cost: 0, time: 0.16206907600000003, length: 47, iterations: 5495"}
{"test_case": 542, "data": "MetropolisHasting 542: robots/10-9-3.pl, test_cost: 0, train_cost: 0, time: 0.07831980399999999, length: 213, iterations: 2657"}
{"test_case": 543, "data": "MetropolisHasting 543: robots/10-9-4.pl, test_cost: 0, train_cost: 0, time: 0.06672973699999996, length: 172, iterations: 2396"}
{"test_case": 544, "data": "MetropolisHasting 544: robots/10-9-5.pl, test_cost: 0, train_cost: 0, time: 0.150583935, length: 411, iterations: 4433"}
{"test_case": 545, "data": "MetropolisHasting 545: robots/10-9-6.pl, test_cost: 0, train_cost: 0, time: 0.19089197300000005, length: 385, iterations: 4802"}
{"test_case": 546, "data": "MetropolisHasting 546: robots/10-9-7.pl, test_cost: 0, train_cost: 0, time: 0.5818648129999999, length: 951, iterations: 6408"}
{"test_case": 547, "data": "MetropolisHasting 547: robots/10-9-8.pl, test_cost: 0, train_cost: 0, time: 0.07040724200000015, length: 169, iterations: 2611"}
{"test_case": 548, "data": "MetropolisHasting 548: robots/10-9-9.pl, test_cost: 0, train_cost: 0, time: 0.3429525069999999, length: 571, iterations: 6852"}
{"test_case": 549, "data": "MetropolisHasting 549: robots/10-9-10.pl, test_cost: 0, train_cost: 0, time: 11.069036729, length: 4530, iterations: 38946"}
{"domain": "robot", "params": {"type": "metropolis", "alpha": 1, "add_token_end": 0, "add_token_random": 30, "remove_token_end": 0, "remove_token_random": 30, "add_loop_end": 0, "add_loop_random": 20, "add_if_statement_end": 0, "add_if_statement_random": 30, "start_over": 6}, "files": "([2, 4, 6, 8, 10], range(0, 10), range(0, 11))", "cases_solved": "544 / 550 (98.9%)", "average": {"test_cost": 0.09090909090909091, "train_cost": 0.09090909090909091, "execution_time": 1.0601325346945452, "program_length": 381.9563636363637, "number_of_explored_programs": 4559.416363636365, "number_of_iterations": 4559.416363636365}, "average_correct": {"test_cost": 0.0, "train_cost": 0.0, "execution_time": 0.4100494370441177, "program_length": 280.68933823529403, "number_of_explored_programs": 3612.6966911764703, "number_of_iterations": 3612.6966911764703}, "average_failed": {"test_cost": 8.333333333333334, "train_cost": 8.333333333333334, "execution_time": 60.001000055, "program_length": 9563.5, "number_of_explored_programs": 90395.33333333333, "number_of_iterations": 90395.33333333333}, "variance": {"test_cost": 0.8259645636694812, "train_cost": 0.8259645636694812, "execution_time": 42.54396293261194, "program_length": 1384036.5554694487, "number_of_explored_programs": 137607911.9082928, "number_of_iterations": 137607911.9082928}, "variance_correct": {"test_cost": 0.0, "train_cost": 0.0, "execution_time": 4.203649527397151, "program_length": 445765.9198861175, "number_of_explored_programs": 55515657.77339602, "number_of_iterations": 55515657.77339602}, "variance_failed": {"test_cost": 8.266666666666666, "train_cost": 8.266666666666666, "execution_time": 3.870576385332879e-07, "program_length": 1280397.5, "number_of_explored_programs": 141467661.46666667, "number_of_iterations": 141467661.46666667}, "best_results": {"file": "robots/10-9-10.pl", "test_cost": 0, "train_cost": 0, "execution_time": 11.069036729, "program_length": 4530, "number_of_explored_programs": 38946, "program": "Program([LoopWhile(AtLeft [MoveRight]), MoveRight, If(AtTop [MoveRight] [MoveUp]), If(NotAtRight [Grab] [MoveDown]), MoveLeft, MoveLeft, MoveLeft, MoveRight, MoveLeft, LoopWhile(AtBottom [Drop]), If(NotAtTop [MoveRight] [MoveLeft]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveLeft]), MoveLeft, If(NotAtRight [MoveUp] [Grab]), MoveRight, If(NotAtBottom [MoveDown] [MoveRight]), If(AtLeft [Drop] [MoveRight]), If(NotAtBottom [MoveDown] [MoveUp]), MoveLeft, LoopWhile(AtRight [MoveDown]), If(AtBottom [Grab] [MoveLeft]), If(NotAtTop [MoveLeft] [MoveUp]), MoveRight, LoopWhile(AtLeft [MoveLeft]), MoveDown, MoveDown, LoopWhile(AtBottom [MoveDown]), If(NotAtRight [MoveUp] [MoveUp]), LoopWhile(AtTop [Grab]), If(NotAtLeft [MoveDown] [MoveDown]), MoveLeft, If(NotAtBottom [MoveUp] [MoveLeft]), MoveLeft, If(AtRight [MoveRight] [MoveDown]), If(AtBottom [Drop] [MoveUp]), If(NotAtBottom [MoveLeft] [MoveLeft]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveRight]), If(AtTop [Grab] [MoveDown]), MoveLeft, If(NotAtTop [MoveDown] [MoveRight]), MoveRight, If(NotAtRight [MoveLeft] [MoveLeft]), LoopWhile(AtBottom [Drop]), MoveRight, MoveUp, LoopWhile(AtTop [MoveUp]), MoveLeft, LoopWhile(NotAtRight [MoveRight]), MoveLeft, If(NotAtBottom [MoveRight] [MoveRight]), MoveLeft, If(AtLeft [MoveDown] [MoveDown]), If(AtRight [MoveDown] [MoveLeft]), If(NotAtBottom [MoveDown] [MoveRight]), If(NotAtLeft [MoveLeft] [MoveUp]), If(NotAtRight [MoveLeft] [MoveUp]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [MoveRight]), If(AtBottom [MoveDown] [MoveDown]), If(NotAtRight [MoveLeft] [MoveRight]), If(AtLeft [MoveUp] [MoveUp]), MoveLeft, If(AtTop [MoveRight] [MoveDown]), MoveLeft, If(NotAtTop [MoveUp] [Drop]), LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [Grab]), If(AtLeft [Grab] [MoveLeft]), If(NotAtLeft [MoveRight] [MoveUp]), If(NotAtTop [MoveDown] [MoveRight]), If(NotAtTop [MoveDown] [MoveUp]), If(NotAtBottom [MoveRight] [Grab]), If(NotAtBottom [MoveRight] [MoveRight]), MoveUp, MoveUp, If(NotAtTop [MoveUp] [Grab]), LoopWhile(AtRight [Drop]), If(AtRight [Grab] [MoveUp]), MoveLeft, MoveRight, If(AtTop [Drop] [MoveUp]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [Grab]), MoveUp, MoveDown, LoopWhile(AtLeft [MoveRight]), LoopWhile(NotAtLeft [MoveLeft]), If(AtLeft [MoveDown] [MoveLeft]), If(NotAtBottom [MoveRight] [Grab]), MoveLeft, LoopWhile(AtLeft [MoveRight]), MoveDown, If(AtBottom [MoveDown] [MoveDown]), MoveRight, MoveDown, MoveRight, LoopWhile(AtLeft [MoveDown]), MoveLeft, If(NotAtLeft [MoveDown] [MoveDown]), LoopWhile(AtTop [Drop]), MoveUp, If(AtRight [Drop] [MoveUp]), MoveDown, LoopWhile(AtBottom [MoveRight]), MoveLeft, MoveDown, LoopWhile(AtLeft [Drop]), If(NotAtTop [MoveRight] [MoveDown]), MoveUp, MoveDown, MoveLeft, MoveLeft, If(AtTop [MoveRight] [MoveRight]), MoveDown, MoveUp, If(AtTop [MoveDown] [MoveLeft]), LoopWhile(AtBottom [Drop]), If(AtTop [Drop] [MoveRight]), If(AtLeft [MoveLeft] [MoveUp]), If(NotAtLeft [MoveUp] [Grab]), LoopWhile(AtLeft [Drop]), LoopWhile(AtLeft [MoveUp]), MoveUp, If(AtBottom [MoveRight] [MoveUp]), If(NotAtLeft [MoveLeft] [Drop]), LoopWhile(AtLeft [MoveRight]), If(NotAtLeft [MoveUp] [Grab]), MoveLeft, MoveRight, MoveDown, If(NotAtLeft [MoveUp] [MoveRight]), LoopWhile(AtBottom [Drop]), If(NotAtTop [MoveRight] [Grab]), MoveUp, MoveDown, LoopWhile(NotAtTop [MoveUp]), LoopWhile(NotAtLeft [MoveLeft]), If(NotAtLeft [MoveLeft] [MoveRight]), MoveDown, If(NotAtRight [MoveDown] [MoveRight]), LoopWhile(NotAtTop [MoveUp]), MoveRight, LoopWhile(NotAtTop [MoveRight]), LoopWhile(NotAtTop [MoveLeft]), MoveLeft, MoveDown, If(AtBottom [MoveRight] [MoveDown]), If(AtTop [MoveRight] [MoveUp]), If(NotAtTop [MoveLeft] [MoveUp]), LoopWhile(AtTop [Drop]), MoveDown, If(NotAtBottom [MoveRight] [MoveLeft]), If(NotAtBottom [MoveDown] [MoveLeft]), LoopWhile(AtBottom [MoveDown]), If(NotAtLeft [MoveDown] [Grab]), MoveDown, If(NotAtBottom [MoveRight] [MoveDown]), MoveLeft, If(NotAtTop [MoveRight] [MoveRight]), MoveLeft, LoopWhile(AtLeft [Drop]), LoopWhile(AtLeft [Grab]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [Drop]), LoopWhile(AtBottom [MoveLeft]), If(AtBottom [MoveRight] [MoveRight]), LoopWhile(AtBottom [Drop]), If(NotAtRight [MoveDown] [Grab]), LoopWhile(AtLeft [MoveUp]), MoveDown, If(AtRight [MoveLeft] [MoveUp]), If(AtLeft [Drop] [MoveRight]), LoopWhile(AtLeft [MoveUp]), MoveLeft, MoveUp, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveDown]), If(NotAtLeft [MoveRight] [Drop]), MoveDown, If(NotAtBottom [MoveRight] [Grab]), LoopWhile(AtTop [MoveLeft]), If(AtTop [MoveUp] [MoveUp]), MoveUp, If(NotAtTop [MoveUp] [Drop]), If(NotAtBottom [MoveUp] [MoveUp]), MoveRight, LoopWhile(AtBottom [MoveDown]), If(AtRight [MoveRight] [MoveRight]), If(AtLeft [MoveDown] [MoveDown]), MoveRight, If(AtBottom [Drop] [MoveUp]), If(NotAtRight [MoveLeft] [MoveLeft]), LoopWhile(AtRight [MoveUp]), MoveLeft, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [MoveUp]), If(AtTop [MoveUp] [MoveDown]), MoveDown, If(AtBottom [MoveDown] [MoveLeft]), MoveDown, MoveDown, LoopWhile(AtBottom [MoveRight]), If(AtBottom [MoveLeft] [MoveUp]), If(AtBottom [Grab] [MoveRight]), LoopWhile(AtTop [MoveRight]), If(AtBottom [Drop] [MoveDown]), MoveUp, MoveRight, If(AtBottom [MoveDown] [MoveUp]), If(NotAtTop [MoveUp] [MoveRight]), If(NotAtTop [MoveRight] [MoveLeft]), MoveUp, LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtTop [MoveUp]), If(AtTop [MoveDown] [MoveRight]), MoveRight, MoveDown, If(NotAtRight [MoveRight] [MoveDown]), If(NotAtTop [MoveDown] [MoveUp]), If(NotAtLeft [MoveLeft] [MoveDown]), MoveLeft, MoveDown, If(NotAtRight [MoveLeft] [MoveUp]), LoopWhile(AtBottom [MoveUp]), If(NotAtTop [MoveUp] [MoveDown]), If(AtTop [Grab] [MoveUp]), MoveLeft, MoveLeft, MoveUp, If(NotAtRight [MoveLeft] [MoveUp]), MoveUp, If(NotAtRight [MoveRight] [MoveDown]), If(NotAtLeft [MoveUp] [MoveDown]), MoveLeft, LoopWhile(AtLeft [MoveDown]), MoveRight, MoveLeft, MoveRight, If(AtBottom [MoveUp] [MoveUp]), LoopWhile(NotAtTop [Grab]), LoopWhile(AtRight [Drop]), If(NotAtTop [MoveRight] [MoveLeft]), MoveLeft, MoveRight, MoveDown, MoveDown, LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [Drop]), MoveDown, LoopWhile(AtBottom [Grab]), If(AtBottom [Drop] [MoveUp]), If(AtLeft [Grab] [MoveDown]), If(AtLeft [Drop] [MoveRight]), If(NotAtLeft [MoveRight] [MoveLeft]), If(AtRight [Drop] [MoveRight]), If(NotAtRight [MoveRight] [MoveDown]), MoveDown, If(AtBottom [MoveUp] [MoveDown]), If(NotAtRight [MoveDown] [MoveDown]), LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [MoveLeft]), MoveLeft, If(AtBottom [MoveRight] [MoveLeft]), If(NotAtLeft [MoveRight] [Grab]), LoopWhile(AtLeft [MoveUp]), If(NotAtRight [MoveLeft] [MoveUp]), LoopWhile(AtLeft [MoveDown]), MoveUp, MoveDown, If(NotAtLeft [MoveLeft] [MoveLeft]), If(AtRight [Drop] [MoveUp]), LoopWhile(AtRight [Grab]), If(NotAtTop [MoveRight] [MoveRight]), MoveDown, LoopWhile(AtRight [MoveUp]), If(NotAtTop [MoveRight] [MoveRight]), LoopWhile(AtTop [Grab]), If(AtRight [Grab] [MoveUp]), If(AtTop [MoveLeft] [MoveUp]), If(NotAtLeft [MoveUp] [Drop]), LoopWhile(AtRight [MoveUp]), If(AtLeft [MoveUp] [MoveUp]), MoveRight, MoveUp, MoveLeft, LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [MoveLeft]), MoveLeft, MoveLeft, MoveUp, If(NotAtTop [MoveRight] [MoveDown]), LoopWhile(AtRight [MoveLeft]), If(NotAtBottom [MoveDown] [MoveLeft]), MoveUp, If(NotAtTop [MoveRight] [MoveUp]), MoveDown, LoopWhile(AtBottom [Grab]), If(NotAtBottom [MoveUp] [MoveDown]), MoveDown, If(NotAtLeft [MoveDown] [MoveUp]), If(NotAtBottom [MoveLeft] [MoveRight]), If(AtRight [Drop] [MoveLeft]), If(NotAtBottom [MoveLeft] [Grab]), If(AtTop [MoveLeft] [MoveRight]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [Drop]), If(NotAtTop [MoveLeft] [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtRight [MoveRight]), If(NotAtBottom [MoveDown] [MoveUp]), If(AtLeft [Drop] [MoveUp]), MoveUp, If(NotAtBottom [MoveDown] [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtTop [MoveUp]), MoveUp, LoopWhile(AtLeft [MoveDown]), If(AtBottom [Grab] [MoveRight]), If(AtBottom [MoveUp] [MoveUp]), If(NotAtTop [MoveDown] [Grab]), If(AtRight [MoveLeft] [MoveLeft]), MoveRight, If(NotAtLeft [MoveUp] [Drop]), If(NotAtLeft [MoveLeft] [MoveLeft]), MoveDown, MoveLeft, If(NotAtLeft [MoveRight] [MoveLeft]), LoopWhile(AtTop [MoveRight]), If(AtTop [MoveRight] [MoveRight]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtLeft [MoveLeft]), MoveRight, LoopWhile(AtTop [MoveUp]), If(AtTop [Drop] [MoveDown]), LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [MoveLeft]), MoveDown, LoopWhile(AtRight [MoveRight]), If(AtRight [Grab] [MoveLeft]), LoopWhile(AtTop [MoveRight]), If(NotAtLeft [MoveLeft] [Grab]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtLeft [Grab]), MoveLeft, MoveDown, LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveLeft]), If(NotAtLeft [MoveRight] [Grab]), MoveRight, If(AtTop [MoveDown] [MoveDown]), If(NotAtLeft [MoveUp] [Drop]), MoveDown, LoopWhile(AtRight [MoveUp]), MoveRight, If(NotAtLeft [MoveDown] [MoveRight]), If(AtBottom [MoveUp] [MoveLeft]), If(AtRight [Grab] [MoveUp]), LoopWhile(AtBottom [MoveDown]), MoveUp, MoveLeft, LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [MoveUp]), MoveRight, MoveDown, If(NotAtTop [MoveRight] [MoveRight]), MoveUp, MoveDown, MoveUp, LoopWhile(AtTop [MoveLeft]), MoveRight, MoveUp, MoveRight, MoveUp, MoveUp, MoveRight, MoveDown, LoopWhile(AtLeft [MoveUp]), If(NotAtLeft [MoveUp] [MoveLeft]), If(NotAtRight [MoveUp] [MoveLeft]), MoveDown, MoveRight, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [Grab]), MoveUp, MoveRight, LoopWhile(AtLeft [MoveRight]), If(AtBottom [Grab] [MoveLeft]), LoopWhile(AtTop [Drop]), LoopWhile(AtBottom [MoveRight]), MoveLeft, If(NotAtRight [MoveLeft] [MoveDown]), If(AtLeft [MoveRight] [MoveLeft]), MoveUp, If(NotAtLeft [MoveLeft] [MoveUp]), LoopWhile(AtLeft [MoveUp]), LoopWhile(NotAtTop [MoveDown]), If(AtTop [MoveRight] [MoveDown]), MoveDown, If(NotAtBottom [MoveLeft] [MoveRight]), If(NotAtBottom [MoveRight] [MoveRight]), If(AtTop [MoveDown] [MoveRight]), MoveLeft, If(NotAtLeft [MoveDown] [MoveUp]), LoopWhile(AtLeft [Grab]), If(AtRight [MoveRight] [MoveRight]), If(NotAtTop [MoveLeft] [MoveRight]), If(AtRight [MoveLeft] [MoveRight]), MoveDown, MoveUp, MoveRight, LoopWhile(AtRight [Drop]), MoveLeft, LoopWhile(AtBottom [MoveRight]), If(AtLeft [MoveRight] [MoveRight]), If(AtRight [Drop] [MoveLeft]), MoveLeft, If(AtBottom [Grab] [MoveDown]), If(NotAtBottom [MoveUp] [Grab]), If(NotAtTop [MoveLeft] [Grab]), LoopWhile(AtLeft [MoveRight]), If(NotAtLeft [MoveRight] [Grab]), MoveUp, LoopWhile(AtBottom [MoveRight]), MoveLeft, MoveDown, LoopWhile(AtBottom [MoveDown]), MoveRight, If(AtRight [MoveDown] [MoveRight]), If(NotAtRight [MoveDown] [MoveRight]), LoopWhile(AtLeft [MoveLeft]), MoveLeft, LoopWhile(AtTop [MoveLeft]), If(AtRight [MoveRight] [MoveUp]), If(NotAtLeft [MoveDown] [MoveDown]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtLeft [MoveRight]), If(NotAtRight [MoveDown] [MoveRight]), If(AtBottom [Grab] [MoveDown]), MoveUp, MoveUp, If(AtTop [Drop] [MoveLeft]), MoveRight, If(AtLeft [Drop] [MoveRight]), If(NotAtRight [MoveRight] [Drop]), If(AtLeft [MoveRight] [MoveUp]), MoveDown, LoopWhile(AtTop [MoveRight]), MoveDown, If(NotAtBottom [MoveDown] [MoveLeft]), If(AtTop [MoveLeft] [MoveLeft]), LoopWhile(NotAtBottom [MoveDown]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [MoveRight]), If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtBottom [MoveUp]), MoveRight, MoveRight, If(AtBottom [MoveUp] [MoveUp]), MoveLeft, LoopWhile(AtTop [MoveUp]), If(NotAtRight [MoveUp] [MoveUp]), If(NotAtTop [MoveDown] [Drop]), If(AtTop [MoveRight] [MoveUp]), MoveRight, LoopWhile(AtBottom [MoveDown]), If(AtBottom [MoveDown] [MoveLeft]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtBottom [MoveLeft]), If(AtRight [Grab] [MoveLeft]), If(AtTop [Drop] [MoveLeft]), MoveUp, LoopWhile(AtLeft [Drop]), LoopWhile(AtLeft [MoveUp]), If(AtLeft [Drop] [MoveUp]), If(AtLeft [MoveUp] [MoveLeft]), If(NotAtLeft [MoveLeft] [MoveLeft]), MoveDown, If(AtLeft [MoveUp] [MoveUp]), MoveRight, MoveRight, LoopWhile(AtTop [MoveUp]), If(AtRight [Drop] [MoveRight]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [MoveRight]), MoveLeft, If(NotAtBottom [MoveUp] [MoveRight]), LoopWhile(AtLeft [MoveRight]), If(AtRight [MoveRight] [MoveDown]), If(NotAtRight [MoveDown] [Drop]), MoveLeft, LoopWhile(AtRight [MoveDown]), MoveLeft, MoveRight, LoopWhile(AtRight [MoveLeft]), If(AtBottom [MoveDown] [MoveRight]), MoveLeft, MoveDown, If(NotAtRight [MoveDown] [MoveUp]), If(AtRight [MoveRight] [MoveRight]), MoveDown, If(NotAtTop [MoveLeft] [MoveUp]), LoopWhile(AtRight [MoveLeft]), If(AtTop [MoveDown] [MoveLeft]), If(NotAtBottom [MoveUp] [MoveLeft]), If(NotAtTop [MoveUp] [MoveUp]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [Drop]), MoveRight, MoveLeft, LoopWhile(AtTop [MoveUp]), If(NotAtRight [MoveLeft] [Grab]), MoveLeft, MoveRight, If(NotAtTop [MoveRight] [Grab]), MoveDown, MoveUp, LoopWhile(AtLeft [MoveUp]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [Drop]), MoveUp, LoopWhile(AtRight [Grab]), If(AtTop [Grab] [MoveUp]), If(NotAtLeft [MoveRight] [MoveLeft]), MoveDown, MoveUp, If(AtTop [Drop] [MoveUp]), If(NotAtBottom [MoveLeft] [MoveLeft]), If(AtRight [Drop] [MoveUp]), MoveLeft, MoveDown, LoopWhile(AtLeft [MoveUp]), MoveUp, MoveUp, If(AtBottom [MoveLeft] [MoveDown]), If(NotAtBottom [MoveUp] [MoveDown]), LoopWhile(AtRight [MoveRight]), If(NotAtRight [MoveDown] [MoveUp]), If(NotAtRight [MoveDown] [Drop]), If(AtLeft [MoveLeft] [MoveLeft]), MoveRight, MoveUp, LoopWhile(AtRight [MoveLeft]), MoveDown, MoveDown, If(NotAtBottom [MoveDown] [Grab]), If(AtLeft [MoveDown] [MoveDown]), If(NotAtLeft [MoveLeft] [MoveLeft]), If(NotAtTop [MoveDown] [MoveLeft]), MoveLeft, If(AtTop [Drop] [MoveRight]), If(AtBottom [Drop] [MoveUp]), MoveLeft, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtRight [MoveDown]), MoveRight, LoopWhile(AtBottom [MoveLeft]), MoveUp, MoveDown, MoveRight, LoopWhile(AtTop [Drop]), If(AtTop [Drop] [MoveUp]), If(AtRight [Grab] [MoveRight]), If(NotAtLeft [MoveDown] [MoveRight]), MoveDown, If(AtLeft [MoveDown] [MoveUp]), LoopWhile(AtBottom [MoveDown]), MoveUp, LoopWhile(AtTop [MoveDown]), MoveDown, MoveLeft, If(AtRight [MoveRight] [MoveLeft]), MoveRight, MoveDown, LoopWhile(AtTop [MoveRight]), MoveDown, LoopWhile(AtLeft [MoveUp]), MoveRight, If(AtRight [Drop] [MoveLeft]), If(NotAtRight [MoveDown] [Grab]), If(AtTop [Grab] [MoveLeft]), If(NotAtTop [MoveUp] [MoveLeft]), LoopWhile(AtRight [Drop]), MoveRight, MoveRight, MoveDown, MoveUp, If(AtLeft [MoveRight] [MoveRight]), LoopWhile(AtTop [MoveUp]), MoveUp, MoveLeft, If(NotAtRight [MoveUp] [MoveLeft]), If(NotAtTop [MoveRight] [MoveUp]), LoopWhile(AtLeft [MoveUp]), If(AtTop [Drop] [MoveDown]), LoopWhile(AtBottom [MoveUp]), MoveLeft, MoveDown, MoveUp, MoveUp, If(NotAtTop [MoveDown] [Drop]), If(AtTop [Grab] [MoveRight]), MoveUp, MoveLeft, If(AtBottom [MoveLeft] [MoveDown]), MoveLeft, LoopWhile(AtRight [Drop]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [MoveDown]), If(AtLeft [Drop] [MoveDown]), If(NotAtRight [MoveUp] [Drop]), MoveUp, LoopWhile(AtBottom [Drop]), If(AtTop [MoveRight] [MoveUp]), LoopWhile(AtLeft [Grab]), LoopWhile(AtTop [Grab]), If(AtRight [MoveLeft] [MoveDown]), MoveRight, MoveUp, MoveUp, MoveRight, LoopWhile(AtTop [Grab]), MoveDown, MoveLeft, MoveDown, MoveUp, If(AtTop [MoveDown] [MoveUp]), MoveRight, If(NotAtBottom [MoveRight] [MoveRight]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [MoveDown]), MoveUp, If(NotAtTop [MoveUp] [Grab]), If(AtLeft [Grab] [MoveDown]), MoveUp, LoopWhile(AtBottom [Grab]), If(NotAtBottom [MoveRight] [MoveUp]), If(NotAtLeft [MoveDown] [MoveDown]), If(AtRight [MoveLeft] [MoveUp]), MoveRight, MoveLeft, If(AtTop [MoveLeft] [MoveLeft]), If(AtLeft [Drop] [MoveLeft]), MoveLeft, MoveDown, MoveUp, LoopWhile(AtTop [Grab]), If(AtRight [Grab] [MoveDown]), LoopWhile(AtTop [MoveDown]), If(NotAtTop [MoveRight] [MoveLeft]), MoveRight, MoveRight, If(NotAtTop [MoveDown] [Grab]), LoopWhile(AtBottom [Grab]), MoveRight, If(NotAtBottom [MoveUp] [Grab]), MoveUp, LoopWhile(AtRight [MoveUp]), If(AtRight [Drop] [MoveLeft]), MoveLeft, MoveLeft, If(AtRight [MoveUp] [MoveLeft]), If(NotAtRight [MoveUp] [Grab]), If(NotAtBottom [MoveLeft] [MoveRight]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [MoveLeft]), If(AtRight [Drop] [MoveRight]), If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtRight [MoveRight]), MoveLeft, If(AtRight [Grab] [MoveDown]), LoopWhile(AtBottom [MoveLeft]), MoveDown, LoopWhile(AtRight [MoveDown]), MoveRight, LoopWhile(AtLeft [MoveUp]), If(NotAtLeft [MoveLeft] [Drop]), MoveRight, If(NotAtRight [MoveLeft] [MoveDown]), MoveLeft, LoopWhile(AtRight [MoveDown]), MoveUp, MoveDown, If(NotAtLeft [MoveDown] [MoveRight]), If(AtTop [MoveRight] [MoveUp]), If(NotAtLeft [MoveUp] [MoveUp]), MoveLeft, MoveLeft, LoopWhile(AtRight [MoveLeft]), MoveUp, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [Grab]), MoveLeft, If(NotAtRight [MoveRight] [Drop]), If(NotAtRight [MoveDown] [MoveUp]), If(NotAtLeft [MoveUp] [MoveUp]), MoveLeft, If(NotAtLeft [MoveDown] [MoveRight]), LoopWhile(AtBottom [MoveUp]), If(NotAtRight [MoveLeft] [MoveRight]), MoveDown, MoveRight, MoveDown, MoveUp, LoopWhile(AtRight [Drop]), MoveDown, If(AtBottom [Drop] [MoveRight]), LoopWhile(AtTop [Grab]), If(AtLeft [Grab] [MoveDown]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [MoveUp]), If(NotAtBottom [MoveRight] [MoveUp]), MoveUp, If(AtTop [Drop] [MoveLeft]), If(NotAtTop [MoveUp] [MoveDown]), If(NotAtLeft [MoveDown] [MoveLeft]), MoveLeft, MoveLeft, LoopWhile(NotAtLeft [MoveUp]), MoveUp, LoopWhile(NotAtLeft [MoveUp]), MoveDown, If(AtRight [Drop] [MoveDown]), LoopWhile(AtRight [MoveLeft]), If(NotAtTop [MoveDown] [Grab]), LoopWhile(NotAtTop [MoveUp]), MoveRight, If(AtBottom [Drop] [MoveRight]), LoopWhile(AtRight [Drop]), LoopWhile(AtBottom [MoveUp]), MoveLeft, MoveLeft, LoopWhile(AtTop [MoveDown]), If(AtTop [MoveRight] [MoveUp]), MoveRight, If(AtRight [Grab] [MoveLeft]), LoopWhile(NotAtLeft [MoveRight]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtLeft [MoveRight]), If(AtLeft [MoveDown] [MoveDown]), LoopWhile(NotAtTop [MoveUp]), MoveDown, MoveDown, LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [MoveDown]), If(AtLeft [Drop] [MoveDown]), If(NotAtBottom [MoveRight] [MoveRight]), If(AtLeft [Drop] [MoveDown]), LoopWhile(AtRight [Grab]), If(NotAtTop [MoveRight] [Drop]), If(NotAtLeft [MoveRight] [Grab]), If(NotAtRight [MoveLeft] [MoveDown]), MoveUp, If(AtTop [MoveLeft] [MoveDown]), If(NotAtTop [MoveLeft] [MoveUp]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveLeft]), If(AtRight [MoveDown] [MoveRight]), MoveDown, MoveRight, LoopWhile(AtTop [Drop]), LoopWhile(AtLeft [MoveUp]), If(NotAtRight [MoveUp] [MoveLeft]), If(NotAtRight [MoveRight] [MoveDown]), LoopWhile(AtRight [Grab]), LoopWhile(AtRight [MoveLeft]), MoveUp, MoveDown, If(AtRight [MoveLeft] [MoveRight]), If(NotAtTop [MoveUp] [MoveUp]), If(NotAtLeft [MoveRight] [MoveLeft]), MoveRight, If(NotAtRight [MoveLeft] [Grab]), If(AtBottom [MoveDown] [MoveLeft]), If(NotAtLeft [MoveRight] [MoveLeft]), If(AtTop [MoveLeft] [MoveDown]), MoveLeft, If(NotAtRight [MoveDown] [MoveDown]), If(NotAtTop [MoveLeft] [MoveLeft]), If(NotAtLeft [MoveUp] [Grab]), If(NotAtBottom [MoveRight] [MoveRight]), MoveRight, MoveRight, MoveRight, MoveDown, If(NotAtTop [MoveLeft] [MoveUp]), LoopWhile(AtTop [MoveUp]), MoveUp, MoveDown, MoveRight, LoopWhile(AtTop [MoveLeft]), If(AtBottom [MoveUp] [MoveDown]), MoveLeft, If(AtRight [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [Grab]), If(NotAtBottom [MoveUp] [MoveLeft]), If(NotAtBottom [MoveUp] [MoveUp]), If(AtTop [Drop] [MoveLeft]), MoveRight, If(AtLeft [Drop] [MoveLeft]), MoveUp, If(AtLeft [MoveDown] [MoveLeft]), MoveLeft, MoveRight, MoveRight, LoopWhile(AtBottom [MoveUp]), MoveDown, MoveDown, LoopWhile(AtLeft [MoveRight]), If(NotAtLeft [MoveRight] [MoveUp]), MoveLeft, MoveUp, If(NotAtTop [MoveDown] [MoveRight]), If(AtLeft [MoveRight] [MoveLeft]), If(AtTop [MoveRight] [MoveDown]), If(NotAtRight [MoveRight] [MoveLeft]), MoveDown, LoopWhile(AtTop [MoveDown]), LoopWhile(AtLeft [MoveDown]), If(AtTop [Drop] [MoveLeft]), If(NotAtTop [MoveDown] [MoveDown]), LoopWhile(AtBottom [Drop]), MoveDown, If(NotAtBottom [MoveRight] [MoveLeft]), If(NotAtTop [MoveLeft] [MoveLeft]), If(NotAtLeft [MoveLeft] [MoveUp]), If(AtBottom [MoveRight] [MoveLeft]), LoopWhile(AtTop [MoveUp]), MoveRight, LoopWhile(AtLeft [MoveUp]), If(NotAtTop [MoveUp] [Grab]), MoveDown, LoopWhile(AtLeft [Drop]), If(NotAtBottom [MoveLeft] [MoveRight]), If(AtLeft [MoveDown] [MoveUp]), MoveLeft, MoveLeft, MoveUp, MoveUp, LoopWhile(AtTop [Drop]), If(AtBottom [MoveUp] [MoveRight]), MoveRight, LoopWhile(AtRight [Drop]), If(NotAtBottom [MoveUp] [MoveLeft]), LoopWhile(AtTop [Drop]), MoveRight, If(AtLeft [Drop] [MoveRight]), MoveRight, LoopWhile(AtRight [MoveLeft]), If(NotAtLeft [MoveLeft] [MoveUp]), MoveDown, LoopWhile(AtRight [Drop]), If(AtLeft [MoveRight] [MoveUp]), MoveDown, LoopWhile(AtBottom [MoveRight]), MoveLeft, MoveRight, LoopWhile(AtBottom [Drop]), LoopWhile(AtTop [MoveLeft]), If(AtRight [MoveDown] [MoveDown]), If(NotAtTop [MoveLeft] [MoveLeft]), MoveLeft, LoopWhile(AtRight [MoveDown]), MoveDown, LoopWhile(AtBottom [MoveRight]), If(AtTop [Drop] [MoveRight]), MoveUp, If(NotAtLeft [MoveDown] [Drop]), MoveDown, LoopWhile(AtBottom [MoveUp]), MoveDown, If(NotAtLeft [MoveRight] [MoveUp]), MoveUp, If(NotAtBottom [MoveUp] [Drop]), LoopWhile(AtTop [MoveRight]), If(AtTop [MoveRight] [MoveDown]), MoveUp, MoveLeft, MoveLeft, If(NotAtTop [MoveDown] [Grab]), MoveUp, LoopWhile(AtLeft [MoveDown]), If(AtRight [MoveUp] [MoveRight]), MoveRight, If(AtTop [MoveLeft] [MoveLeft]), If(NotAtBottom [MoveRight] [MoveDown]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [MoveLeft]), MoveUp, If(NotAtRight [MoveLeft] [Drop]), MoveDown, MoveLeft, If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtTop [Grab]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtRight [MoveDown]), MoveLeft, If(AtRight [Grab] [MoveDown]), If(NotAtRight [MoveLeft] [MoveRight]), If(AtLeft [MoveDown] [MoveDown]), MoveDown, MoveRight, MoveRight, MoveUp, LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtBottom [MoveRight]), MoveUp, If(NotAtTop [MoveRight] [MoveRight]), MoveRight, If(AtBottom [Drop] [MoveRight]), If(AtTop [MoveDown] [MoveUp]), LoopWhile(AtRight [MoveRight]), MoveUp, LoopWhile(AtLeft [MoveDown]), MoveRight, If(NotAtLeft [MoveLeft] [Grab]), MoveRight, LoopWhile(AtRight [MoveLeft]), If(NotAtTop [MoveLeft] [MoveRight]), MoveLeft, If(AtRight [MoveRight] [MoveRight]), LoopWhile(AtBottom [Grab]), MoveUp, If(NotAtLeft [MoveLeft] [MoveUp]), If(NotAtBottom [MoveDown] [MoveDown]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(NotAtLeft [MoveLeft]), If(AtLeft [MoveUp] [MoveUp]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtLeft [MoveRight]), If(AtRight [MoveUp] [MoveUp]), If(AtRight [Drop] [MoveUp]), LoopWhile(AtRight [Grab]), MoveDown, LoopWhile(AtBottom [Drop]), If(AtTop [MoveUp] [MoveLeft]), MoveUp, LoopWhile(AtBottom [Grab]), MoveRight, MoveRight, If(AtLeft [MoveDown] [MoveUp]), If(NotAtRight [MoveRight] [Grab]), LoopWhile(AtTop [Grab]), If(NotAtLeft [MoveDown] [MoveRight]), MoveLeft, LoopWhile(AtRight [MoveRight]), If(AtTop [MoveLeft] [MoveUp]), MoveDown, If(NotAtTop [MoveRight] [MoveDown]), If(NotAtTop [MoveRight] [MoveLeft]), MoveRight, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [MoveDown]), If(AtLeft [MoveDown] [MoveDown]), If(AtBottom [MoveUp] [MoveUp]), If(AtLeft [MoveDown] [MoveLeft]), If(NotAtRight [MoveDown] [Drop]), MoveLeft, LoopWhile(AtRight [MoveLeft]), If(AtBottom [MoveRight] [MoveUp]), LoopWhile(AtLeft [MoveDown]), MoveUp, If(NotAtBottom [MoveDown] [Grab]), If(NotAtTop [MoveLeft] [Drop]), If(AtRight [MoveUp] [MoveUp]), MoveDown, LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [Drop]), If(AtBottom [MoveLeft] [MoveRight]), If(AtLeft [Grab] [MoveLeft]), LoopWhile(AtRight [MoveRight]), If(AtTop [Drop] [MoveDown]), If(AtLeft [Grab] [MoveUp]), If(AtLeft [MoveLeft] [MoveRight]), If(AtRight [Grab] [MoveLeft]), MoveDown, MoveUp, MoveDown, LoopWhile(AtTop [MoveLeft]), If(NotAtTop [MoveUp] [Drop]), MoveLeft, MoveUp, If(NotAtTop [MoveLeft] [Grab]), MoveRight, If(AtBottom [MoveRight] [MoveLeft]), MoveRight, LoopWhile(AtRight [Drop]), MoveUp, If(NotAtLeft [MoveRight] [Grab]), MoveDown, MoveRight, MoveLeft, MoveUp, LoopWhile(AtRight [MoveDown]), MoveRight, MoveRight, MoveLeft, If(NotAtBottom [MoveRight] [MoveRight]), MoveRight, If(NotAtTop [MoveDown] [MoveDown]), MoveDown, MoveDown, LoopWhile(AtBottom [MoveRight]), MoveUp, MoveRight, If(AtTop [MoveDown] [MoveRight]), If(NotAtBottom [MoveUp] [MoveRight]), LoopWhile(AtTop [MoveRight]), If(NotAtBottom [MoveLeft] [Drop]), MoveLeft, MoveLeft, LoopWhile(AtRight [MoveUp]), MoveLeft, LoopWhile(AtTop [Drop]), MoveRight, If(NotAtBottom [MoveLeft] [MoveLeft]), MoveRight, LoopWhile(AtTop [MoveDown]), If(NotAtTop [MoveDown] [Grab]), If(AtLeft [MoveRight] [MoveUp]), LoopWhile(AtBottom [MoveLeft]), If(NotAtTop [MoveRight] [MoveDown]), If(NotAtBottom [MoveRight] [MoveUp]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtTop [MoveUp]), MoveDown, If(NotAtRight [MoveLeft] [Grab]), LoopWhile(AtBottom [Grab]), MoveDown, MoveUp, MoveUp, If(AtLeft [Drop] [MoveRight]), If(NotAtTop [MoveLeft] [MoveUp]), MoveDown, MoveLeft, MoveDown, MoveUp, LoopWhile(AtBottom [Drop]), If(AtTop [MoveDown] [MoveDown]), MoveUp, MoveLeft, MoveLeft, LoopWhile(AtRight [MoveLeft]), If(NotAtBottom [MoveDown] [Grab]), MoveRight, If(NotAtRight [MoveDown] [MoveRight]), LoopWhile(AtRight [MoveRight]), LoopWhile(NotAtLeft [MoveLeft]), MoveRight, LoopWhile(AtLeft [MoveDown]), MoveDown, MoveLeft, LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [MoveDown]), LoopWhile(NotAtLeft [MoveLeft]), If(NotAtBottom [MoveRight] [MoveUp]), If(NotAtTop [MoveDown] [MoveRight]), If(AtLeft [MoveDown] [MoveUp]), If(NotAtRight [MoveUp] [MoveRight]), MoveRight, If(NotAtRight [MoveUp] [MoveRight]), If(AtLeft [Grab] [MoveUp]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtLeft [Grab]), If(NotAtBottom [MoveUp] [MoveLeft]), MoveLeft, MoveDown, MoveRight, If(NotAtRight [MoveRight] [Grab]), If(NotAtTop [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveDown]), If(AtLeft [Grab] [MoveUp]), If(AtTop [MoveRight] [MoveUp]), MoveLeft, MoveDown, MoveDown, MoveLeft, LoopWhile(AtBottom [MoveLeft]), If(AtBottom [Grab] [MoveDown]), LoopWhile(AtBottom [Drop]), If(NotAtRight [MoveLeft] [MoveLeft]), LoopWhile(NotAtLeft [MoveRight]), If(AtRight [MoveDown] [MoveRight]), MoveDown, If(NotAtLeft [MoveDown] [MoveUp]), If(AtBottom [MoveDown] [MoveLeft]), If(AtLeft [MoveDown] [Drop]), LoopWhile(AtTop [MoveRight]), If(AtBottom [MoveDown] [MoveRight]), MoveLeft, If(AtBottom [MoveUp] [MoveUp]), MoveRight, LoopWhile(AtLeft [MoveUp]), MoveRight, If(NotAtBottom [MoveUp] [MoveLeft]), MoveUp, MoveDown, LoopWhile(AtBottom [Drop]), If(AtRight [Grab] [MoveRight]), If(NotAtBottom [MoveLeft] [MoveRight]), MoveUp, If(AtBottom [MoveLeft] [MoveLeft]), If(AtTop [Grab] [MoveLeft]), LoopWhile(AtRight [Drop]), If(NotAtRight [MoveDown] [MoveDown]), If(AtLeft [MoveRight] [MoveLeft]), If(NotAtBottom [MoveRight] [MoveDown]), If(AtBottom [Grab] [MoveDown]), MoveDown, LoopWhile(AtTop [Grab]), If(NotAtBottom [MoveUp] [MoveDown]), If(NotAtTop [MoveDown] [MoveRight]), If(NotAtBottom [MoveUp] [MoveRight]), LoopWhile(NotAtBottom [MoveDown]), LoopWhile(AtLeft [MoveRight]), MoveLeft, If(AtRight [Drop] [MoveRight]), MoveRight, MoveLeft, LoopWhile(AtTop [MoveUp]), If(NotAtLeft [MoveRight] [MoveLeft]), If(AtRight [MoveLeft] [MoveRight]), MoveRight, LoopWhile(AtLeft [Grab]), If(AtTop [Grab] [MoveRight]), If(AtLeft [Grab] [MoveLeft]), If(AtLeft [MoveUp] [MoveRight]), LoopWhile(AtLeft [MoveRight]), MoveRight, LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [Grab]), If(NotAtBottom [MoveUp] [MoveRight]), MoveLeft, MoveLeft, MoveUp, If(NotAtRight [MoveRight] [MoveRight]), If(NotAtTop [MoveUp] [MoveDown]), MoveLeft, MoveUp, If(AtBottom [MoveLeft] [MoveRight]), MoveUp, LoopWhile(AtRight [MoveLeft]), If(NotAtBottom [MoveLeft] [MoveRight]), LoopWhile(AtLeft [MoveRight]), MoveUp, MoveUp, MoveRight, MoveRight, MoveDown, LoopWhile(AtRight [Drop]), MoveLeft, MoveUp, MoveUp, LoopWhile(AtTop [MoveUp]), LoopWhile(NotAtBottom [MoveDown]), If(AtLeft [MoveDown] [MoveRight]), If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [MoveRight]), MoveUp, If(NotAtRight [MoveLeft] [Grab]), LoopWhile(AtRight [Drop]), LoopWhile(AtBottom [MoveLeft]), If(AtTop [MoveLeft] [MoveLeft]), MoveUp, MoveLeft, LoopWhile(AtLeft [MoveRight]), MoveRight, MoveLeft, If(AtLeft [MoveDown] [MoveRight]), MoveLeft, If(AtTop [MoveRight] [MoveDown]), If(AtRight [Drop] [MoveDown]), MoveUp, If(NotAtRight [MoveUp] [Grab]), MoveUp, MoveUp, LoopWhile(AtBottom [MoveUp]), If(NotAtRight [MoveDown] [Drop]), LoopWhile(AtLeft [MoveDown]), If(NotAtBottom [MoveRight] [MoveRight]), MoveDown, If(AtLeft [MoveDown] [MoveDown]), LoopWhile(AtRight [MoveRight]), If(AtBottom [MoveDown] [MoveRight]), MoveUp, If(AtLeft [MoveDown] [MoveLeft]), MoveLeft, LoopWhile(AtLeft [Drop]), If(NotAtBottom [MoveRight] [MoveDown]), If(AtBottom [MoveUp] [MoveUp]), LoopWhile(AtRight [MoveRight]), If(NotAtLeft [MoveDown] [Drop]), If(AtRight [MoveRight] [MoveLeft]), MoveLeft, If(AtBottom [MoveDown] [MoveDown]), MoveRight, LoopWhile(AtTop [Grab]), If(AtLeft [Grab] [MoveRight]), LoopWhile(AtBottom [Drop]), LoopWhile(AtTop [Grab]), MoveLeft, MoveUp, MoveDown, LoopWhile(AtTop [MoveDown]), LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [MoveLeft]), If(NotAtBottom [MoveRight] [MoveLeft]), MoveDown, LoopWhile(AtRight [Grab]), If(NotAtBottom [MoveLeft] [MoveLeft]), LoopWhile(AtBottom [Drop]), If(NotAtRight [MoveUp] [MoveDown]), If(NotAtTop [MoveRight] [MoveUp]), LoopWhile(AtBottom [MoveUp]), MoveRight, If(AtRight [Drop] [MoveDown]), LoopWhile(AtTop [Drop]), If(AtBottom [Drop] [MoveUp]), LoopWhile(AtBottom [MoveDown]), MoveUp, MoveRight, MoveDown, MoveUp, LoopWhile(AtTop [Drop]), If(NotAtRight [MoveUp] [MoveUp]), If(AtLeft [Grab] [MoveUp]), MoveUp, If(NotAtTop [MoveLeft] [MoveLeft]), If(AtRight [Grab] [MoveUp]), MoveLeft, LoopWhile(AtBottom [Grab]), MoveLeft, MoveLeft, MoveLeft, If(NotAtBottom [MoveLeft] [Grab]), MoveUp, If(NotAtBottom [MoveDown] [MoveUp]), LoopWhile(AtTop [Drop]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [MoveUp]), MoveUp, If(NotAtTop [MoveDown] [MoveLeft]), If(NotAtTop [MoveRight] [Grab]), MoveRight, LoopWhile(AtTop [Grab]), LoopWhile(AtLeft [Drop]), MoveDown, If(NotAtRight [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [Drop]), MoveLeft, MoveDown, MoveUp, MoveRight, MoveRight, MoveRight, LoopWhile(NotAtBottom [MoveDown]), MoveUp, If(NotAtBottom [MoveRight] [MoveLeft]), LoopWhile(AtRight [MoveDown]), MoveUp, MoveUp, MoveLeft, MoveUp, If(AtRight [MoveLeft] [MoveDown]), If(NotAtBottom [MoveLeft] [Drop]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [Grab]), MoveUp, LoopWhile(AtBottom [Grab]), MoveLeft, MoveLeft, If(NotAtTop [MoveRight] [MoveRight]), LoopWhile(AtLeft [Grab]), If(AtLeft [MoveDown] [MoveRight]), MoveRight, If(AtLeft [MoveLeft] [MoveRight]), LoopWhile(AtRight [MoveDown]), MoveRight, MoveLeft, LoopWhile(AtBottom [Grab]), MoveRight, LoopWhile(AtLeft [Drop]), If(AtRight [MoveRight] [MoveRight]), LoopWhile(AtTop [MoveDown]), If(AtTop [MoveLeft] [MoveRight]), MoveLeft, If(AtBottom [MoveDown] [MoveLeft]), MoveLeft, LoopWhile(AtTop [MoveUp]), MoveRight, If(NotAtBottom [MoveLeft] [MoveRight]), LoopWhile(AtLeft [Drop]), MoveLeft, If(NotAtBottom [MoveLeft] [MoveDown]), LoopWhile(AtBottom [MoveDown]), If(NotAtLeft [MoveLeft] [Drop]), If(AtLeft [Drop] [MoveLeft]), MoveRight, If(NotAtLeft [MoveUp] [MoveRight]), If(AtBottom [MoveLeft] [MoveUp]), MoveLeft, If(NotAtLeft [MoveRight] [MoveDown]), LoopWhile(AtTop [MoveDown]), If(NotAtTop [MoveLeft] [MoveLeft]), LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [MoveRight]), MoveLeft, If(AtTop [Drop] [MoveRight]), If(AtTop [MoveLeft] [MoveUp]), MoveRight, MoveLeft, LoopWhile(AtRight [Grab]), LoopWhile(AtRight [MoveRight]), MoveUp, MoveDown, MoveRight, If(NotAtTop [MoveDown] [MoveDown]), If(NotAtBottom [MoveLeft] [Drop]), If(NotAtBottom [MoveDown] [MoveUp]), If(AtLeft [MoveDown] [MoveLeft]), If(AtTop [MoveLeft] [MoveLeft]), LoopWhile(NotAtRight [MoveRight]), If(AtBottom [Drop] [MoveLeft]), MoveRight, MoveLeft, LoopWhile(NotAtRight [MoveRight]), MoveUp, MoveLeft, LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [MoveDown]), If(NotAtTop [MoveDown] [MoveDown]), LoopWhile(AtLeft [Drop]), MoveUp, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [Grab]), If(NotAtLeft [MoveLeft] [Drop]), If(AtLeft [Grab] [MoveLeft]), MoveLeft, MoveRight, If(NotAtLeft [MoveUp] [Drop]), LoopWhile(AtBottom [MoveDown]), If(AtTop [MoveRight] [MoveLeft]), If(NotAtBottom [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveLeft]), MoveDown, MoveDown, MoveRight, If(AtRight [Drop] [MoveRight]), MoveLeft, If(NotAtBottom [MoveRight] [MoveLeft]), LoopWhile(AtBottom [MoveRight]), MoveLeft, If(NotAtTop [MoveDown] [MoveRight]), LoopWhile(AtBottom [MoveRight]), If(AtRight [Grab] [MoveLeft]), MoveLeft, If(AtTop [MoveRight] [MoveRight]), MoveDown, MoveRight, LoopWhile(AtRight [Drop]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [MoveLeft]), If(NotAtLeft [MoveUp] [Drop]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtRight [Grab]), LoopWhile(AtTop [MoveDown]), MoveRight, MoveLeft, If(NotAtBottom [MoveUp] [MoveUp]), MoveLeft, MoveLeft, MoveRight, If(NotAtBottom [MoveLeft] [MoveDown]), If(AtTop [Grab] [MoveRight]), MoveRight, If(NotAtRight [MoveLeft] [Drop]), LoopWhile(AtBottom [Drop]), MoveDown, If(NotAtBottom [MoveRight] [MoveRight]), MoveRight, If(NotAtLeft [MoveRight] [MoveLeft]), If(AtTop [MoveDown] [MoveDown]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveUp]), LoopWhile(NotAtLeft [MoveLeft]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [MoveUp]), If(AtRight [MoveDown] [MoveRight]), LoopWhile(AtBottom [Grab]), If(AtRight [MoveRight] [MoveRight]), MoveRight, If(NotAtTop [MoveLeft] [MoveUp]), If(AtBottom [MoveRight] [MoveRight]), MoveUp, MoveDown, If(NotAtRight [MoveLeft] [MoveRight]), MoveUp, LoopWhile(AtLeft [MoveDown]), If(NotAtLeft [MoveLeft] [MoveRight]), LoopWhile(AtRight [MoveDown]), MoveLeft, LoopWhile(AtBottom [MoveRight]), If(NotAtLeft [MoveRight] [MoveUp]), If(AtBottom [Grab] [MoveDown]), If(AtBottom [Grab] [MoveUp]), MoveDown, MoveRight, If(NotAtRight [MoveUp] [MoveRight]), If(NotAtRight [MoveRight] [Grab]), If(NotAtTop [MoveRight] [Grab]), MoveLeft, If(NotAtTop [MoveRight] [MoveUp]), MoveLeft, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtBottom [Drop]), If(AtRight [Drop] [MoveUp]), If(NotAtTop [MoveDown] [MoveLeft]), MoveUp, If(NotAtTop [MoveLeft] [MoveLeft]), If(AtRight [Grab] [MoveLeft]), MoveRight, If(AtRight [MoveRight] [MoveDown]), If(AtTop [Grab] [MoveUp]), LoopWhile(AtRight [MoveUp]), If(NotAtBottom [MoveDown] [MoveLeft]), If(AtBottom [MoveUp] [MoveRight]), LoopWhile(AtBottom [MoveDown]), MoveLeft, If(AtBottom [Drop] [MoveRight]), If(AtLeft [MoveLeft] [MoveRight]), MoveLeft, MoveUp, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [Grab]), MoveLeft, MoveRight, LoopWhile(AtBottom [MoveRight]), LoopWhile(NotAtRight [MoveRight]), MoveUp, If(NotAtRight [MoveRight] [MoveDown]), MoveDown, MoveDown, LoopWhile(AtTop [MoveLeft]), MoveLeft, If(AtLeft [MoveLeft] [MoveLeft]), If(NotAtBottom [MoveLeft] [Grab]), If(AtLeft [Drop] [MoveLeft]), If(NotAtBottom [MoveUp] [Grab]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [MoveDown]), MoveDown, LoopWhile(AtRight [MoveUp]), If(NotAtBottom [MoveRight] [MoveDown]), LoopWhile(AtLeft [MoveDown]), MoveLeft, LoopWhile(AtTop [Drop]), MoveDown, If(AtLeft [MoveLeft] [MoveUp]), LoopWhile(AtBottom [Grab]), MoveRight, MoveDown, LoopWhile(AtTop [MoveLeft]), MoveLeft, If(NotAtRight [MoveLeft] [Drop]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveRight]), If(AtLeft [Drop] [MoveUp]), LoopWhile(AtBottom [Grab]), MoveDown, LoopWhile(AtTop [Grab]), If(NotAtBottom [MoveUp] [MoveUp]), LoopWhile(AtTop [MoveLeft]), If(AtTop [Drop] [MoveLeft]), If(AtBottom [Grab] [MoveRight]), If(NotAtTop [MoveUp] [Grab]), If(AtBottom [Grab] [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), If(AtTop [Drop] [MoveDown]), LoopWhile(AtLeft [MoveUp]), MoveLeft, LoopWhile(AtTop [Grab]), If(AtBottom [MoveLeft] [MoveRight]), MoveRight, MoveRight, If(NotAtLeft [MoveLeft] [MoveUp]), If(AtRight [MoveRight] [MoveLeft]), MoveDown, If(NotAtLeft [MoveRight] [MoveDown]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [MoveLeft]), If(NotAtBottom [MoveUp] [Drop]), LoopWhile(AtLeft [MoveRight]), MoveDown, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [MoveUp]), If(AtRight [MoveLeft] [MoveLeft]), If(AtRight [MoveRight] [MoveRight]), LoopWhile(AtBottom [MoveDown]), MoveLeft, LoopWhile(AtRight [MoveRight]), If(AtLeft [Drop] [MoveUp]), LoopWhile(AtTop [MoveLeft]), MoveDown, MoveRight, LoopWhile(AtTop [Drop]), MoveLeft, If(AtTop [MoveRight] [MoveDown]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [MoveDown]), If(NotAtTop [MoveRight] [MoveRight]), If(NotAtRight [MoveDown] [Grab]), MoveUp, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveRight]), If(NotAtLeft [MoveRight] [MoveDown]), LoopWhile(AtTop [MoveRight]), MoveLeft, LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [Grab]), MoveRight, If(AtRight [Grab] [MoveUp]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtRight [Drop]), If(NotAtRight [MoveDown] [MoveDown]), If(NotAtLeft [MoveLeft] [Drop]), MoveUp, If(AtLeft [Drop] [MoveLeft]), LoopWhile(AtLeft [Drop]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [MoveDown]), If(AtBottom [MoveDown] [MoveUp]), If(AtLeft [MoveRight] [MoveLeft]), If(NotAtBottom [MoveDown] [MoveDown]), If(NotAtLeft [MoveRight] [MoveUp]), MoveUp, MoveLeft, If(NotAtBottom [MoveLeft] [MoveLeft]), If(AtTop [MoveRight] [MoveRight]), LoopWhile(AtRight [MoveLeft]), MoveRight, If(AtLeft [Grab] [MoveUp]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveRight, If(AtBottom [Grab] [MoveDown]), If(NotAtLeft [MoveUp] [MoveDown]), MoveDown, MoveDown, MoveUp, If(AtRight [MoveUp] [MoveLeft]), If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtRight [MoveLeft]), MoveDown, MoveRight, MoveUp, MoveUp, MoveDown, MoveDown, LoopWhile(AtLeft [MoveDown]), MoveUp, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [Grab]), If(NotAtTop [MoveUp] [MoveUp]), If(AtBottom [MoveDown] [MoveDown]), If(NotAtTop [MoveUp] [Grab]), LoopWhile(AtBottom [MoveUp]), MoveUp, MoveDown, MoveDown, MoveUp, MoveDown, MoveRight, If(NotAtLeft [MoveLeft] [MoveRight]), LoopWhile(AtLeft [Grab]), If(AtRight [Drop] [MoveLeft]), LoopWhile(AtBottom [MoveUp]), MoveRight, LoopWhile(AtBottom [MoveUp]), If(AtLeft [Drop] [MoveRight]), LoopWhile(AtRight [MoveUp]), MoveDown, MoveLeft, LoopWhile(AtLeft [Grab]), If(AtLeft [MoveUp] [MoveDown]), MoveLeft, LoopWhile(AtBottom [MoveDown]), MoveUp, MoveUp, If(NotAtLeft [MoveUp] [MoveDown]), LoopWhile(AtRight [MoveUp]), MoveLeft, MoveUp, MoveLeft, If(AtRight [MoveDown] [MoveRight]), If(NotAtRight [MoveDown] [MoveDown]), If(NotAtLeft [MoveUp] [MoveUp]), MoveLeft, If(NotAtLeft [MoveDown] [Grab]), LoopWhile(AtLeft [Grab]), LoopWhile(AtBottom [Grab]), LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [Grab]), If(AtTop [Grab] [MoveUp]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [Drop]), MoveUp, If(NotAtBottom [MoveUp] [Grab]), If(NotAtTop [MoveDown] [MoveUp]), MoveDown, LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [MoveLeft]), If(NotAtTop [MoveLeft] [MoveLeft]), If(NotAtBottom [MoveUp] [MoveRight]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [MoveRight]), If(NotAtRight [MoveUp] [Grab]), MoveUp, LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveDown]), If(NotAtTop [MoveRight] [MoveLeft]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [MoveUp]), If(NotAtTop [MoveDown] [MoveDown]), If(AtTop [MoveDown] [MoveLeft]), If(AtBottom [MoveRight] [MoveRight]), If(NotAtTop [MoveUp] [MoveLeft]), If(NotAtLeft [MoveUp] [MoveLeft]), If(NotAtRight [MoveDown] [Drop]), If(AtLeft [MoveDown] [MoveDown]), LoopWhile(AtLeft [MoveDown]), MoveRight, MoveUp, MoveRight, If(NotAtTop [MoveRight] [MoveRight]), MoveDown, If(AtRight [Grab] [MoveLeft]), MoveUp, MoveUp, If(NotAtTop [MoveUp] [MoveDown]), If(NotAtTop [MoveUp] [Grab]), If(NotAtRight [MoveDown] [MoveDown]), If(NotAtTop [MoveDown] [MoveRight]), MoveLeft, LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [Drop]), LoopWhile(AtTop [Grab]), MoveLeft, MoveDown, If(NotAtTop [MoveUp] [MoveDown]), If(NotAtLeft [MoveDown] [MoveUp]), MoveDown, LoopWhile(AtBottom [Grab]), If(NotAtRight [MoveLeft] [Drop]), If(AtLeft [MoveDown] [MoveRight]), MoveUp, MoveLeft, LoopWhile(AtRight [Grab]), If(AtBottom [Grab] [MoveDown]), MoveLeft, LoopWhile(AtRight [Drop]), MoveRight, If(NotAtBottom [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [MoveDown]), If(NotAtTop [MoveRight] [Grab]), If(NotAtTop [MoveRight] [MoveUp]), LoopWhile(AtBottom [Drop]), If(NotAtRight [MoveRight] [Grab]), MoveRight, LoopWhile(AtLeft [MoveRight]), MoveRight, If(NotAtRight [MoveUp] [Drop]), MoveDown, If(AtLeft [Grab] [MoveDown]), MoveRight, MoveDown, If(NotAtLeft [MoveDown] [MoveRight]), MoveUp, If(NotAtBottom [MoveUp] [MoveDown]), LoopWhile(AtTop [MoveRight]), If(NotAtBottom [MoveUp] [MoveUp]), MoveLeft, MoveUp, If(AtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtRight [Grab]), MoveRight, If(NotAtLeft [MoveUp] [MoveDown]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtBottom [Drop]), If(NotAtLeft [MoveDown] [MoveRight]), MoveDown, If(AtTop [MoveLeft] [MoveRight]), MoveUp, MoveDown, LoopWhile(AtRight [MoveLeft]), MoveRight, MoveDown, MoveUp, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtTop [Grab]), If(NotAtLeft [MoveDown] [Drop]), MoveLeft, If(AtLeft [MoveDown] [MoveUp]), MoveLeft, LoopWhile(AtRight [MoveRight]), MoveUp, MoveLeft, If(NotAtLeft [MoveUp] [MoveLeft]), LoopWhile(AtTop [Drop]), MoveDown, If(NotAtBottom [MoveLeft] [MoveDown]), LoopWhile(AtBottom [MoveDown]), If(AtBottom [MoveUp] [MoveLeft]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [Grab]), MoveDown, If(NotAtTop [MoveDown] [MoveUp]), MoveDown, LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [Drop]), If(AtLeft [Drop] [MoveLeft]), If(NotAtRight [MoveUp] [MoveUp]), If(NotAtTop [MoveLeft] [MoveUp]), MoveDown, LoopWhile(AtLeft [MoveUp]), MoveUp, If(NotAtBottom [MoveDown] [MoveLeft]), If(NotAtTop [MoveUp] [MoveRight]), If(AtBottom [MoveUp] [MoveRight]), MoveRight, LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [MoveUp]), MoveUp, If(NotAtTop [MoveLeft] [MoveRight]), If(AtTop [Grab] [MoveDown]), If(NotAtRight [MoveRight] [Drop]), MoveRight, If(AtBottom [MoveDown] [MoveUp]), MoveDown, MoveLeft, LoopWhile(AtLeft [Drop]), LoopWhile(AtTop [Drop]), If(AtBottom [MoveUp] [MoveDown]), If(AtTop [Grab] [MoveDown]), If(AtBottom [Grab] [MoveDown]), MoveUp, LoopWhile(AtRight [Drop]), If(NotAtBottom [MoveUp] [Grab]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtTop [MoveLeft]), If(NotAtTop [MoveUp] [MoveDown]), MoveRight, MoveUp, MoveRight, If(AtBottom [MoveUp] [MoveUp]), MoveDown, If(AtRight [MoveRight] [MoveDown]), If(NotAtLeft [MoveDown] [Grab]), LoopWhile(AtRight [Grab]), If(NotAtLeft [MoveDown] [MoveUp]), If(AtBottom [MoveRight] [MoveDown]), LoopWhile(AtLeft [Drop]), MoveUp, MoveDown, MoveLeft, If(AtBottom [MoveDown] [MoveUp]), MoveUp, If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtRight [MoveDown]), If(NotAtLeft [MoveDown] [MoveRight]), If(NotAtTop [MoveDown] [Grab]), LoopWhile(AtTop [Grab]), LoopWhile(AtBottom [MoveLeft]), MoveUp, LoopWhile(AtTop [MoveLeft]), MoveDown, MoveLeft, If(AtRight [MoveLeft] [MoveRight]), If(NotAtLeft [MoveLeft] [Grab]), If(AtLeft [Drop] [MoveUp]), LoopWhile(AtRight [MoveRight]), MoveRight, LoopWhile(AtLeft [MoveLeft]), MoveUp, MoveUp, LoopWhile(AtLeft [MoveDown]), MoveDown, LoopWhile(AtBottom [MoveLeft]), If(AtBottom [MoveUp] [MoveRight]), If(AtRight [Grab] [MoveUp]), LoopWhile(AtBottom [MoveDown]), MoveUp, MoveUp, MoveDown, MoveUp, If(AtRight [MoveRight] [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), MoveUp, If(NotAtRight [MoveDown] [Grab]), LoopWhile(NotAtTop [MoveUp]), MoveDown, If(NotAtLeft [MoveDown] [MoveRight]), If(AtRight [MoveUp] [MoveDown]), LoopWhile(AtLeft [Drop]), If(NotAtLeft [MoveUp] [MoveLeft]), MoveLeft, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtRight [MoveLeft]), MoveRight, LoopWhile(AtBottom [MoveUp]), If(AtBottom [MoveRight] [MoveRight]), MoveLeft, If(NotAtRight [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [MoveRight]), MoveDown, If(AtLeft [MoveDown] [MoveLeft]), LoopWhile(AtBottom [MoveUp]), If(NotAtLeft [MoveUp] [MoveRight]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [Drop]), MoveRight, MoveDown, MoveRight, MoveDown, If(NotAtLeft [MoveUp] [MoveDown]), MoveRight, If(NotAtTop [MoveUp] [MoveRight]), LoopWhile(AtRight [MoveRight]), If(AtRight [Grab] [MoveUp]), LoopWhile(AtTop [Drop]), If(AtBottom [Drop] [MoveDown]), If(AtBottom [MoveDown] [MoveLeft]), LoopWhile(AtLeft [MoveRight]), MoveLeft, MoveLeft, MoveLeft, LoopWhile(AtTop [MoveRight]), If(AtLeft [MoveDown] [MoveRight]), MoveRight, If(AtLeft [Grab] [MoveRight]), If(AtRight [Drop] [MoveUp]), MoveDown, MoveRight, If(AtTop [Grab] [MoveLeft]), LoopWhile(AtBottom [MoveUp]), If(NotAtLeft [MoveLeft] [Drop]), If(AtBottom [MoveRight] [MoveDown]), MoveUp, If(NotAtRight [MoveLeft] [MoveDown]), MoveDown, MoveUp, If(AtTop [Grab] [MoveLeft]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [MoveUp]), MoveRight, LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [MoveLeft]), MoveDown, MoveRight, If(AtBottom [MoveUp] [MoveLeft]), MoveRight, If(NotAtRight [MoveRight] [MoveLeft]), MoveUp, If(AtLeft [Drop] [MoveDown]), MoveUp, MoveRight, LoopWhile(AtBottom [MoveUp]), If(AtBottom [Grab] [MoveUp]), If(AtTop [MoveDown] [MoveLeft]), LoopWhile(AtTop [MoveRight]), MoveDown, If(AtRight [MoveLeft] [MoveLeft]), If(AtTop [MoveUp] [MoveUp]), MoveRight, LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtBottom [MoveDown]), MoveUp, LoopWhile(AtLeft [Grab]), MoveDown, LoopWhile(AtBottom [MoveRight]), MoveDown, If(NotAtLeft [MoveDown] [MoveRight]), LoopWhile(AtRight [MoveRight]), If(AtTop [MoveRight] [MoveDown]), LoopWhile(AtBottom [Drop]), MoveRight, MoveLeft, MoveLeft, If(NotAtTop [MoveLeft] [MoveUp]), If(NotAtBottom [MoveDown] [Grab]), LoopWhile(AtTop [MoveRight]), If(AtRight [MoveDown] [MoveDown]), MoveUp, If(AtRight [MoveRight] [MoveDown]), MoveRight, LoopWhile(AtTop [MoveRight]), If(AtBottom [MoveDown] [MoveLeft]), MoveUp, MoveDown, If(NotAtRight [MoveDown] [MoveDown]), If(NotAtLeft [MoveUp] [MoveLeft]), If(NotAtLeft [MoveLeft] [Grab]), MoveRight, If(AtLeft [MoveRight] [MoveUp]), If(AtBottom [MoveUp] [MoveUp]), LoopWhile(AtBottom [MoveUp]), If(NotAtBottom [MoveRight] [MoveDown]), If(NotAtBottom [MoveRight] [MoveLeft]), MoveRight, LoopWhile(AtRight [MoveDown]), MoveLeft, MoveDown, MoveRight, MoveRight, LoopWhile(AtTop [Grab]), If(AtLeft [MoveDown] [MoveRight]), MoveRight, If(NotAtTop [MoveLeft] [Grab]), MoveLeft, If(AtTop [Grab] [MoveDown]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtTop [Drop]), MoveUp, LoopWhile(AtLeft [Drop]), If(NotAtRight [MoveDown] [MoveRight]), If(NotAtLeft [MoveRight] [MoveLeft]), MoveLeft, LoopWhile(AtBottom [MoveRight]), MoveRight, MoveLeft, MoveLeft, MoveRight, LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtLeft [Drop]), MoveRight, LoopWhile(AtRight [MoveRight]), If(NotAtRight [MoveLeft] [MoveUp]), MoveUp, LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [MoveLeft]), MoveDown, If(NotAtLeft [MoveRight] [MoveDown]), If(NotAtLeft [MoveDown] [Drop]), LoopWhile(AtLeft [Grab]), MoveRight, If(NotAtTop [MoveLeft] [MoveUp]), MoveUp, If(AtTop [MoveDown] [MoveLeft]), MoveUp, If(NotAtBottom [MoveUp] [Drop]), If(NotAtLeft [MoveLeft] [Grab]), MoveUp, If(NotAtRight [MoveLeft] [MoveRight]), MoveLeft, If(NotAtRight [MoveLeft] [MoveDown]), MoveRight, MoveLeft, LoopWhile(AtRight [Drop]), If(NotAtBottom [MoveLeft] [Grab]), If(NotAtBottom [MoveRight] [MoveUp]), MoveLeft, LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [MoveLeft]), MoveLeft, If(AtLeft [MoveLeft] [MoveDown]), If(NotAtLeft [MoveUp] [MoveDown]), MoveLeft, MoveDown, MoveDown, MoveDown, LoopWhile(NotAtLeft [Drop]), MoveDown, If(NotAtLeft [Drop] [MoveUp]), If(AtLeft [MoveUp] [MoveLeft]), MoveRight, MoveLeft, MoveDown, MoveRight, LoopWhile(AtLeft [MoveLeft]), MoveUp, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtTop [MoveUp]), MoveRight, LoopWhile(AtBottom [Drop]), LoopWhile(AtTop [MoveDown]), If(AtRight [MoveLeft] [MoveRight]), MoveLeft, LoopWhile(AtLeft [Drop]), MoveLeft, LoopWhile(AtTop [MoveUp]), LoopWhile(AtLeft [Drop]), If(NotAtRight [MoveRight] [MoveUp]), LoopWhile(AtLeft [MoveLeft]), If(NotAtTop [MoveUp] [MoveUp]), LoopWhile(AtLeft [MoveDown]), MoveRight, MoveRight, LoopWhile(AtTop [MoveRight]), MoveLeft, MoveUp, MoveUp, LoopWhile(AtTop [Grab]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [MoveUp]), MoveUp, If(AtBottom [MoveRight] [MoveRight]), If(NotAtLeft [MoveLeft] [Grab]), MoveLeft, MoveUp, MoveRight, If(NotAtBottom [MoveDown] [Grab]), MoveLeft, MoveLeft, MoveRight, MoveRight, MoveRight, LoopWhile(AtTop [Grab]), MoveRight, LoopWhile(AtTop [MoveRight]), MoveRight, LoopWhile(AtLeft [MoveLeft]), If(AtTop [MoveUp] [MoveDown]), MoveRight, MoveRight, If(AtTop [MoveUp] [MoveLeft]), If(NotAtTop [MoveDown] [MoveRight]), MoveUp, MoveLeft, LoopWhile(AtTop [MoveRight]), MoveDown, MoveDown, LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [MoveRight]), MoveRight, MoveLeft, If(AtTop [Drop] [MoveUp]), If(AtBottom [MoveLeft] [MoveLeft]), MoveUp, If(AtBottom [MoveDown] [MoveRight]), MoveDown, MoveDown, If(AtRight [MoveDown] [MoveRight]), LoopWhile(AtRight [Drop]), If(NotAtRight [MoveRight] [MoveRight]), LoopWhile(AtTop [Grab]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [MoveUp]), LoopWhile(NotAtBottom [MoveDown]), If(NotAtBottom [MoveDown] [MoveLeft]), LoopWhile(AtTop [MoveRight]), MoveLeft, MoveLeft, LoopWhile(NotAtBottom [Drop]), If(AtTop [MoveUp] [MoveLeft]), MoveLeft, MoveRight, MoveLeft, LoopWhile(AtTop [MoveRight]), If(NotAtRight [MoveRight] [Drop]), If(NotAtLeft [MoveRight] [Drop]), MoveLeft, If(AtBottom [MoveUp] [MoveDown]), If(AtRight [Drop] [MoveRight]), If(AtRight [MoveRight] [MoveRight]), LoopWhile(AtTop [Drop]), If(AtRight [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveUp]), If(AtTop [MoveLeft] [MoveDown]), LoopWhile(AtRight [MoveDown]), MoveRight, MoveDown, If(NotAtTop [MoveLeft] [MoveRight]), MoveRight, LoopWhile(AtTop [Grab]), MoveLeft, LoopWhile(NotAtBottom [MoveDown]), If(NotAtRight [MoveRight] [Grab]), LoopWhile(AtLeft [Drop]), LoopWhile(NotAtBottom [Grab]), If(AtLeft [MoveDown] [MoveRight]), LoopWhile(NotAtRight [MoveRight]), If(NotAtLeft [Grab] [Grab]), MoveUp, MoveUp, LoopWhile(AtLeft [MoveUp]), If(AtRight [MoveLeft] [Drop]), MoveUp, MoveLeft, LoopWhile(AtBottom [MoveRight]), MoveRight, MoveUp, If(AtTop [MoveLeft] [MoveRight]), MoveUp, LoopWhile(AtBottom [Drop]), If(NotAtTop [MoveUp] [Grab]), MoveUp, MoveUp, LoopWhile(AtTop [Drop]), If(AtTop [MoveDown] [MoveLeft]), MoveLeft, If(NotAtLeft [MoveDown] [MoveRight]), MoveUp, If(NotAtRight [MoveRight] [MoveUp]), MoveRight, MoveUp, LoopWhile(AtBottom [Drop]), If(AtLeft [MoveLeft] [MoveDown]), MoveLeft, If(NotAtLeft [MoveDown] [Drop]), MoveRight, LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtRight [MoveLeft]), MoveUp, MoveLeft, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtBottom [MoveRight]), MoveDown, If(NotAtBottom [MoveUp] [MoveUp]), If(AtTop [MoveLeft] [MoveLeft]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [Grab]), If(NotAtLeft [MoveLeft] [Drop]), If(AtBottom [MoveRight] [MoveDown]), MoveRight, If(NotAtTop [MoveLeft] [Drop]), If(AtTop [Grab] [MoveDown]), If(AtLeft [MoveRight] [MoveUp]), MoveUp, If(NotAtTop [MoveLeft] [Drop]), If(AtTop [MoveDown] [MoveDown]), If(NotAtTop [MoveRight] [MoveDown]), MoveDown, If(NotAtBottom [MoveDown] [Grab]), MoveRight, MoveUp, LoopWhile(AtBottom [MoveDown]), MoveUp, MoveDown, MoveUp, MoveUp, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtLeft [MoveUp]), If(AtTop [MoveRight] [MoveRight]), LoopWhile(AtBottom [MoveUp]), If(AtRight [Grab] [MoveLeft]), MoveDown, LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [MoveDown]), If(NotAtLeft [MoveDown] [MoveDown]), If(AtTop [MoveLeft] [MoveRight]), If(AtLeft [Drop] [MoveRight]), MoveDown, MoveLeft, LoopWhile(AtBottom [MoveUp]), If(AtTop [Drop] [MoveLeft]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [MoveUp]), MoveDown, LoopWhile(AtLeft [Drop]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [MoveLeft]), If(AtTop [MoveRight] [MoveLeft]), Drop, If(AtRight [Grab] [Grab]), MoveLeft, LoopWhile(AtBottom [MoveRight]), If(NotAtBottom [MoveUp] [MoveRight]), If(AtRight [MoveRight] [MoveDown]), MoveUp, If(AtTop [MoveUp] [MoveDown]), MoveRight, MoveUp, If(NotAtBottom [MoveLeft] [MoveLeft]), If(AtBottom [MoveDown] [MoveUp]), If(NotAtRight [MoveRight] [MoveLeft]), If(AtBottom [MoveRight] [MoveLeft]), MoveDown, MoveUp, LoopWhile(AtLeft [Drop]), If(NotAtLeft [MoveUp] [Grab]), If(AtTop [Drop] [Drop]), LoopWhile(AtBottom [Grab]), Grab, If(AtRight [Grab] [MoveRight]), If(AtLeft [Grab] [MoveUp]), If(NotAtRight [MoveDown] [MoveUp]), MoveUp, LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [MoveLeft]), If(AtTop [MoveDown] [MoveDown]), MoveDown, MoveLeft, LoopWhile(AtRight [Grab]), If(NotAtRight [MoveLeft] [MoveUp]), If(NotAtBottom [MoveDown] [Grab]), If(AtRight [MoveDown] [Drop]), If(AtLeft [Grab] [MoveDown]), MoveRight, If(AtRight [MoveDown] [MoveDown]), LoopWhile(AtLeft [MoveRight]), MoveLeft, MoveUp, MoveDown, If(AtTop [MoveRight] [MoveDown]), MoveDown, If(AtLeft [MoveDown] [MoveLeft]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveRight]), If(NotAtBottom [MoveLeft] [MoveRight]), If(NotAtRight [MoveDown] [MoveLeft]), If(NotAtBottom [MoveRight] [MoveRight]), If(AtBottom [MoveUp] [MoveRight]), LoopWhile(AtTop [MoveDown]), MoveDown, If(AtRight [Drop] [MoveUp]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [Drop]), MoveLeft, If(NotAtBottom [MoveUp] [MoveLeft])])", "cost_per_iteration": [[1, 27], [5, 28], [6, 27], [8, 26], [11, 27], [15, 26], [16, 27], [19, 26], [20, 25], [21, 24], [25, 23], [29, 22], [47, 21], [55, 20], [64, 21], [65, 22], [66, 21], [69, 20], [75, 21], [82, 20], [97, 19], [101, 17], [124, 19], [126, 20], [130, 21], [134, 20], [137, 19], [139, 20], [141, 21], [144, 22], [147, 21], [158, 20], [159, 21], [162, 22], [164, 21], [166, 22], [167, 21], [170, 20], [171, 21], [172, 22], [173, 21], [178, 22], [181, 21], [196, 22], [202, 21], [205, 20], [206, 19], [211, 20], [213, 19], [216, 17], [231, 19], [238, 20], [261, 19], [262, 20], [265, 19], [266, 20], [272, 21], [275, 22], [276, 21], [282, 20], [286, 21], [293, 22], [294, 23], [302, 22], [303, 23], [307, 22], [308, 21], [315, 22], [320, 21], [322, 20], [324, 19], [325, 17], [350, 19], [352, 17], [368, 19], [369, 20], [370, 19], [371, 20], [372, 21], [374, 20], [381, 19], [382, 17], [440, 19], [441, 17], [471, 19], [475, 17], [490, 19], [492, 17], [523, 19], [530, 17], [542, 19], [551, 17], [561, 19], [566, 20], [576, 19], [577, 20], [578, 19], [580, 17], [590, 19], [591, 20], [592, 19], [595, 17], [624, 19], [625, 17], [648, 19], [650, 20], [656, 19], [660, 20], [669, 21], [676, 20], [681, 19], [682, 20], [688, 19], [720, 20], [726, 21], [728, 22], [731, 21], [735, 20], [746, 19], [765, 20], [766, 21], [770, 20], [773, 19], [802, 20], [803, 21], [804, 22], [806, 21], [815, 20], [824, 19], [832, 17], [836, 19], [839, 17], [898, 19], [909, 20], [912, 21], [914, 22], [917, 21], [920, 20], [925, 19], [935, 17], [977, 19], [986, 17], [987, 19], [988, 17], [993, 19], [994, 17], [1073, 19], [1074, 20], [1080, 19], [1086, 20], [1089, 19], [1090, 20], [1093, 19], [1095, 20], [1099, 19], [1104, 20], [1108, 19], [1112, 17], [1147, 19], [1150, 17], [1185, 19], [1187, 17], [1203, 19], [1204, 20], [1210, 19], [1223, 20], [1224, 19], [1225, 17], [1237, 19], [1238, 17], [1240, 19], [1245, 17], [1279, 19], [1288, 20], [1291, 19], [1306, 17], [1406, 19], [1411, 17], [1422, 19], [1432, 20], [1438, 21], [1440, 20], [1441, 19], [1444, 17], [1454, 19], [1456, 17], [1495, 19], [1500, 20], [1514, 19], [1517, 17], [1542, 19], [1547, 17], [1600, 19], [1602, 17], [1744, 19], [1746, 17], [1778, 19], [1786, 17], [1801, 19], [1806, 17], [1842, 19], [1847, 20], [1848, 19], [1856, 20], [1857, 19], [1872, 20], [1873, 19], [1876, 17], [1884, 19], [1886, 20], [1889, 19], [1890, 20], [1892, 21], [1895, 20], [1904, 21], [1905, 20], [1908, 19], [1911, 20], [1917, 19], [1921, 17], [1941, 19], [1943, 17], [1969, 19], [1978, 20], [1979, 19], [1983, 17], [2003, 19], [2005, 17], [2027, 19], [2039, 17], [2049, 19], [2056, 17], [2085, 19], [2091, 17], [2106, 19], [2108, 17], [2150, 19], [2151, 17], [2163, 19], [2174, 17], [2320, 19], [2321, 17], [2456, 19], [2463, 17], [2471, 19], [2475, 17], [2498, 19], [2506, 20], [2512, 19], [2514, 17], [2574, 19], [2580, 17], [2599, 19], [2600, 20], [2601, 21], [2604, 20], [2609, 21], [2611, 22], [2612, 21], [2614, 22], [2617, 21], [2625, 20], [2633, 19], [2637, 20], [2638, 19], [2652, 20], [2662, 19], [2667, 20], [2671, 19], [2674, 20], [2676, 21], [2679, 20], [2696, 21], [2699, 22], [2702, 21], [2713, 22], [2718, 23], [2720, 22], [2729, 23], [2734, 24], [2736, 25], [2742, 24], [2747, 23], [2749, 24], [2750, 23], [2751, 22], [2752, 21], [2753, 20], [2755, 19], [2756, 17], [2777, 19], [2780, 20], [2788, 19], [2792, 17], [2803, 19], [2806, 20], [2808, 19], [2817, 20], [2818, 19], [2825, 17], [2873, 19], [2909, 17], [2937, 19], [2943, 20], [2944, 21], [2951, 20], [2953, 19], [2954, 20], [2955, 19], [2969, 17], [2989, 19], [3005, 17], [3060, 19], [3084, 20], [3097, 19], [3098, 17], [3121, 19], [3131, 20], [3139, 19], [3175, 17], [3183, 19], [3202, 17], [3235, 19], [3245, 17], [3271, 19], [3302, 17], [3410, 19], [3419, 17], [3513, 19], [3517, 17], [4444, 16], [5086, 15], [5321, 14], [6462, 13], [6487, 15], [6500, 13], [6820, 14], [6977, 16], [7233, 17], [7303, 18], [7327, 17], [7353, 18], [7414, 17], [8047, 14], [8140, 13], [8141, 14], [8275, 15], [8337, 14], [8507, 13], [8581, 12], [8617, 11], [8802, 10], [9072, 11], [9116, 12], [9226, 11], [9242, 12], [9289, 11], [9355, 12], [9449, 11], [9584, 12], [9739, 11], [9759, 10], [9920, 9], [9948, 10], [9982, 9], [10065, 10], [10125, 11], [10275, 10], [10368, 11], [10379, 12], [10381, 11], [10431, 10], [10509, 9], [10597, 10], [10627, 9], [10657, 8], [10726, 9], [10729, 8], [10748, 9], [10778, 8], [10822, 7], [10830, 5], [10869, 7], [10879, 8], [11003, 7], [11040, 8], [11067, 7], [11217, 5], [11489, 7], [11547, 8], [11659, 9], [11688, 10], [11690, 9], [11702, 10], [11804, 9], [11843, 10], [11872, 9], [11881, 10], [11905, 9], [11910, 10], [11919, 9], [11958, 8], [12019, 7], [12021, 8], [12111, 7], [12349, 8], [12369, 7], [12370, 5], [12390, 7], [12393, 5], [12814, 7], [12878, 5], [13253, 7], [13254, 5], [13353, 7], [13386, 5], [13389, 7], [13394, 8], [13425, 7], [13428, 5], [13573, 7], [13672, 5], [13809, 7], [13953, 8], [13957, 7], [13991, 8], [14002, 7], [14005, 8], [14026, 7], [14051, 8], [14052, 9], [14056, 8], [14065, 7], [14142, 5], [14224, 7], [14232, 8], [14244, 7], [14266, 5], [14292, 7], [14335, 8], [14348, 7], [14371, 5], [14425, 7], [14485, 5], [14556, 7], [14703, 8], [14716, 7], [14814, 8], [14935, 9], [14962, 8], [15075, 9], [15076, 8], [15172, 7], [15177, 8], [15486, 7], [15489, 8], [15495, 7], [15570, 8], [15592, 7], [15624, 5], [15804, 7], [15820, 8], [15823, 7], [15836, 5], [15882, 7], [15935, 8], [15960, 9], [15964, 8], [15987, 9], [16124, 8], [16142, 7], [16179, 8], [16181, 9], [16185, 10], [16199, 9], [16226, 8], [16271, 9], [16277, 8], [16326, 7], [16340, 5], [16705, 7], [16734, 8], [16784, 7], [16803, 5], [16826, 7], [16910, 4], [17979, 9], [17980, 4], [19021, 9], [19034, 10], [19079, 9], [19099, 4], [20151, 5], [20215, 7], [20245, 5], [20309, 7], [20315, 8], [20427, 7], [20429, 8], [20443, 7], [20451, 5], [20848, 7], [20878, 5], [21723, 7], [21833, 8], [21895, 7], [21897, 5], [21960, 7], [22075, 8], [22085, 7], [22093, 8], [22187, 7], [22195, 5], [22334, 7], [22367, 8], [22375, 7], [22392, 5], [22885, 7], [22925, 8], [22938, 9], [23050, 8], [23165, 7], [23180, 5], [23410, 7], [23436, 8], [23449, 7], [23471, 5], [23564, 7], [23604, 5], [23650, 7], [23656, 8], [23671, 7], [23707, 5], [23729, 7], [23767, 8], [23850, 7], [23886, 5], [24261, 6], [24320, 5], [24344, 7], [24373, 5], [24398, 7], [24595, 9], [24723, 7], [24829, 5], [24838, 4], [25003, 3], [25059, 2], [25127, 1], [25139, 2], [25483, 1], [26409, 2], [26662, 3], [26959, 4], [27111, 5], [27538, 4], [27751, 3], [27907, 2], [28443, 1], [28862, 2], [28905, 3], [29131, 4], [29176, 7], [29371, 5], [29784, 7], [29803, 8], [29879, 7], [29898, 5], [30074, 7], [30087, 5], [30147, 7], [30155, 5], [30956, 7], [30958, 8], [30974, 9], [30976, 8], [30991, 7], [30992, 5], [31472, 7], [31652, 8], [31704, 7], [31714, 5], [32215, 7], [32308, 5], [32352, 7], [32355, 8], [32421, 7], [32436, 5], [32575, 7], [32631, 8], [32648, 7], [32692, 8], [32704, 7], [32740, 5], [32820, 7], [32827, 8], [32840, 9], [32854, 8], [32867, 9], [32909, 8], [32981, 7], [33011, 5], [33215, 7], [33235, 5], [34008, 7], [34064, 5], [34135, 7], [34136, 8], [34162, 7], [34231, 5], [35672, 7], [35885, 8], [35894, 7], [35899, 5], [35938, 7], [36037, 5], [36061, 7], [36143, 8], [36181, 5], [36211, 6], [36302, 9], [36390, 10], [36436, 5], [36612, 4], [36708, 3], [36839, 2], [36933, 3], [37013, 2], [37356, 3], [37901, 4], [38241, 3], [38467, 4], [38483, 3], [38646, 2], [38797, 1], [38946, 0]], "number_of_iterations": 38946}}
