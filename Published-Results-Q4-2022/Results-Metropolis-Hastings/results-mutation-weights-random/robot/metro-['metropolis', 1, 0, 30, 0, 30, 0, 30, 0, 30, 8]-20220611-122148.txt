{"test_case": 0, "data": "MetropolisHasting 0: robots/2-0-0.pl, test_cost: 0, train_cost: 0, time: 0.0027098420000000005, length: 29, iterations: 212"}
{"test_case": 1, "data": "MetropolisHasting 1: robots/2-0-1.pl, test_cost: 0, train_cost: 0, time: 0.01977404, length: 42, iterations: 1766"}
{"test_case": 2, "data": "MetropolisHasting 2: robots/2-0-2.pl, test_cost: 0, train_cost: 0, time: 0.0013949440000000021, length: 12, iterations: 127"}
{"test_case": 3, "data": "MetropolisHasting 3: robots/2-0-3.pl, test_cost: 0, train_cost: 0, time: 7.469099999999826e-05, length: 3, iterations: 5"}
{"test_case": 4, "data": "MetropolisHasting 4: robots/2-0-4.pl, test_cost: 0, train_cost: 0, time: 4.744699999999907e-05, length: 1, iterations: 3"}
{"test_case": 5, "data": "MetropolisHasting 5: robots/2-0-5.pl, test_cost: 0, train_cost: 0, time: 0.0002938290000000024, length: 2, iterations: 29"}
{"test_case": 6, "data": "MetropolisHasting 6: robots/2-0-6.pl, test_cost: 0, train_cost: 0, time: 0.00012957799999999825, length: 4, iterations: 10"}
{"test_case": 7, "data": "MetropolisHasting 7: robots/2-0-7.pl, test_cost: 0, train_cost: 0, time: 0.00021308100000000038, length: 3, iterations: 17"}
{"test_case": 8, "data": "MetropolisHasting 8: robots/2-0-8.pl, test_cost: 0, train_cost: 0, time: 0.0073054170000000015, length: 31, iterations: 565"}
{"test_case": 9, "data": "MetropolisHasting 9: robots/2-0-9.pl, test_cost: 0, train_cost: 0, time: 0.004146805000000003, length: 45, iterations: 315"}
{"test_case": 10, "data": "MetropolisHasting 10: robots/2-0-10.pl, test_cost: 0, train_cost: 0, time: 0.008830885, length: 25, iterations: 673"}
{"test_case": 11, "data": "MetropolisHasting 11: robots/2-1-0.pl, test_cost: 0, train_cost: 0, time: 0.019627707, length: 72, iterations: 1411"}
{"test_case": 12, "data": "MetropolisHasting 12: robots/2-1-1.pl, test_cost: 0, train_cost: 0, time: 0.01247852, length: 12, iterations: 1135"}
{"test_case": 13, "data": "MetropolisHasting 13: robots/2-1-2.pl, test_cost: 0, train_cost: 0, time: 0.018259164999999994, length: 28, iterations: 1518"}
{"test_case": 14, "data": "MetropolisHasting 14: robots/2-1-3.pl, test_cost: 0, train_cost: 0, time: 0.00022564400000001095, length: 7, iterations: 18"}
{"test_case": 15, "data": "MetropolisHasting 15: robots/2-1-4.pl, test_cost: 0, train_cost: 0, time: 0.00013368199999999608, length: 0, iterations: 9"}
{"test_case": 16, "data": "MetropolisHasting 16: robots/2-1-5.pl, test_cost: 0, train_cost: 0, time: 0.00010535700000000037, length: 3, iterations: 8"}
{"test_case": 17, "data": "MetropolisHasting 17: robots/2-1-6.pl, test_cost: 0, train_cost: 0, time: 0.0024838320000000053, length: 28, iterations: 195"}
{"test_case": 18, "data": "MetropolisHasting 18: robots/2-1-7.pl, test_cost: 0, train_cost: 0, time: 0.0001097129999999974, length: 1, iterations: 9"}
{"test_case": 19, "data": "MetropolisHasting 19: robots/2-1-8.pl, test_cost: 0, train_cost: 0, time: 0.015005261999999991, length: 33, iterations: 1223"}
{"test_case": 20, "data": "MetropolisHasting 20: robots/2-1-9.pl, test_cost: 0, train_cost: 0, time: 0.00022693699999999997, length: 4, iterations: 3"}
{"test_case": 21, "data": "MetropolisHasting 21: robots/2-1-10.pl, test_cost: 0, train_cost: 0, time: 0.01070067, length: 22, iterations: 948"}
{"test_case": 22, "data": "MetropolisHasting 22: robots/2-2-0.pl, test_cost: 0, train_cost: 0, time: 0.005743125000000002, length: 19, iterations: 464"}
{"test_case": 23, "data": "MetropolisHasting 23: robots/2-2-1.pl, test_cost: 0, train_cost: 0, time: 0.0055958480000000005, length: 46, iterations: 413"}
{"test_case": 24, "data": "MetropolisHasting 24: robots/2-2-2.pl, test_cost: 0, train_cost: 0, time: 0.006920922999999999, length: 6, iterations: 599"}
{"test_case": 25, "data": "MetropolisHasting 25: robots/2-2-3.pl, test_cost: 0, train_cost: 0, time: 0.015900681, length: 29, iterations: 1362"}
{"test_case": 26, "data": "MetropolisHasting 26: robots/2-2-4.pl, test_cost: 0, train_cost: 0, time: 0.0004018419999999995, length: 14, iterations: 32"}
{"test_case": 27, "data": "MetropolisHasting 27: robots/2-2-5.pl, test_cost: 0, train_cost: 0, time: 0.007981521999999998, length: 21, iterations: 715"}
{"test_case": 28, "data": "MetropolisHasting 28: robots/2-2-6.pl, test_cost: 0, train_cost: 0, time: 0.0011196490000000003, length: 29, iterations: 87"}
{"test_case": 29, "data": "MetropolisHasting 29: robots/2-2-7.pl, test_cost: 0, train_cost: 0, time: 0.01691852800000001, length: 56, iterations: 1258"}
{"test_case": 30, "data": "MetropolisHasting 30: robots/2-2-8.pl, test_cost: 0, train_cost: 0, time: 0.00030953799999999983, length: 6, iterations: 7"}
{"test_case": 31, "data": "MetropolisHasting 31: robots/2-2-9.pl, test_cost: 0, train_cost: 0, time: 0.0001124339999999998, length: 3, iterations: 8"}
{"test_case": 32, "data": "MetropolisHasting 32: robots/2-2-10.pl, test_cost: 0, train_cost: 0, time: 0.0067014990000000005, length: 32, iterations: 543"}
{"test_case": 33, "data": "MetropolisHasting 33: robots/2-3-0.pl, test_cost: 0, train_cost: 0, time: 0.0034119960000000005, length: 9, iterations: 334"}
{"test_case": 34, "data": "MetropolisHasting 34: robots/2-3-1.pl, test_cost: 0, train_cost: 0, time: 0.0018803090000000001, length: 25, iterations: 161"}
{"test_case": 35, "data": "MetropolisHasting 35: robots/2-3-2.pl, test_cost: 0, train_cost: 0, time: 0.0066007800000000005, length: 34, iterations: 531"}
{"test_case": 36, "data": "MetropolisHasting 36: robots/2-3-3.pl, test_cost: 0, train_cost: 0, time: 0.007752389000000002, length: 29, iterations: 600"}
{"test_case": 37, "data": "MetropolisHasting 37: robots/2-3-4.pl, test_cost: 0, train_cost: 0, time: 0.0056946199999999975, length: 19, iterations: 507"}
{"test_case": 38, "data": "MetropolisHasting 38: robots/2-3-5.pl, test_cost: 0, train_cost: 0, time: 0.025563340000000004, length: 77, iterations: 1361"}
{"test_case": 39, "data": "MetropolisHasting 39: robots/2-3-6.pl, test_cost: 0, train_cost: 0, time: 0.012581131999999995, length: 33, iterations: 992"}
{"test_case": 40, "data": "MetropolisHasting 40: robots/2-3-7.pl, test_cost: 0, train_cost: 0, time: 0.017532574, length: 11, iterations: 1612"}
{"test_case": 41, "data": "MetropolisHasting 41: robots/2-3-8.pl, test_cost: 0, train_cost: 0, time: 0.00022645400000000093, length: 5, iterations: 18"}
{"test_case": 42, "data": "MetropolisHasting 42: robots/2-3-9.pl, test_cost: 0, train_cost: 0, time: 0.008489713, length: 26, iterations: 677"}
{"test_case": 43, "data": "MetropolisHasting 43: robots/2-3-10.pl, test_cost: 0, train_cost: 0, time: 0.025228939, length: 38, iterations: 1803"}
{"test_case": 44, "data": "MetropolisHasting 44: robots/2-4-0.pl, test_cost: 0, train_cost: 0, time: 0.0015675740000000021, length: 5, iterations: 146"}
{"test_case": 45, "data": "MetropolisHasting 45: robots/2-4-1.pl, test_cost: 0, train_cost: 0, time: 0.0009842229999999993, length: 14, iterations: 89"}
{"test_case": 46, "data": "MetropolisHasting 46: robots/2-4-2.pl, test_cost: 0, train_cost: 0, time: 0.003417102000000005, length: 11, iterations: 302"}
{"test_case": 47, "data": "MetropolisHasting 47: robots/2-4-3.pl, test_cost: 0, train_cost: 0, time: 0.00022716700000000034, length: 5, iterations: 20"}
{"test_case": 48, "data": "MetropolisHasting 48: robots/2-4-4.pl, test_cost: 0, train_cost: 0, time: 0.014874651999999988, length: 38, iterations: 1111"}
{"test_case": 49, "data": "MetropolisHasting 49: robots/2-4-5.pl, test_cost: 0, train_cost: 0, time: 0.004281911999999999, length: 41, iterations: 319"}
{"test_case": 50, "data": "MetropolisHasting 50: robots/2-4-6.pl, test_cost: 0, train_cost: 0, time: 0.00021517600000000008, length: 0, iterations: 2"}
{"test_case": 51, "data": "MetropolisHasting 51: robots/2-4-7.pl, test_cost: 0, train_cost: 0, time: 0.0002728800000000005, length: 6, iterations: 18"}
{"test_case": 52, "data": "MetropolisHasting 52: robots/2-4-8.pl, test_cost: 0, train_cost: 0, time: 0.012844725000000001, length: 33, iterations: 1000"}
{"test_case": 53, "data": "MetropolisHasting 53: robots/2-4-9.pl, test_cost: 0, train_cost: 0, time: 0.003509753000000001, length: 7, iterations: 336"}
{"test_case": 54, "data": "MetropolisHasting 54: robots/2-4-10.pl, test_cost: 0, train_cost: 0, time: 0.009877036999999998, length: 33, iterations: 802"}
{"test_case": 55, "data": "MetropolisHasting 55: robots/2-5-0.pl, test_cost: 0, train_cost: 0, time: 0.0010505420000000015, length: 5, iterations: 82"}
{"test_case": 56, "data": "MetropolisHasting 56: robots/2-5-1.pl, test_cost: 0, train_cost: 0, time: 0.003170990999999998, length: 6, iterations: 268"}
{"test_case": 57, "data": "MetropolisHasting 57: robots/2-5-2.pl, test_cost: 0, train_cost: 0, time: 0.009374970000000003, length: 51, iterations: 705"}
{"test_case": 58, "data": "MetropolisHasting 58: robots/2-5-3.pl, test_cost: 0, train_cost: 0, time: 0.0017478460000000043, length: 13, iterations: 156"}
{"test_case": 59, "data": "MetropolisHasting 59: robots/2-5-4.pl, test_cost: 0, train_cost: 0, time: 0.006719163, length: 23, iterations: 571"}
{"test_case": 60, "data": "MetropolisHasting 60: robots/2-5-5.pl, test_cost: 0, train_cost: 0, time: 0.007552210000000001, length: 9, iterations: 695"}
{"test_case": 61, "data": "MetropolisHasting 61: robots/2-5-6.pl, test_cost: 0, train_cost: 0, time: 2.941100000000002e-05, length: 0, iterations: 1"}
{"test_case": 62, "data": "MetropolisHasting 62: robots/2-5-7.pl, test_cost: 0, train_cost: 0, time: 0.017743211000000002, length: 27, iterations: 1364"}
{"test_case": 63, "data": "MetropolisHasting 63: robots/2-5-8.pl, test_cost: 0, train_cost: 0, time: 0.002460170000000001, length: 16, iterations: 216"}
{"test_case": 64, "data": "MetropolisHasting 64: robots/2-5-9.pl, test_cost: 0, train_cost: 0, time: 0.003880887999999999, length: 18, iterations: 349"}
{"test_case": 65, "data": "MetropolisHasting 65: robots/2-5-10.pl, test_cost: 0, train_cost: 0, time: 0.003628015999999998, length: 15, iterations: 333"}
{"test_case": 66, "data": "MetropolisHasting 66: robots/2-6-0.pl, test_cost: 0, train_cost: 0, time: 0.005369756999999996, length: 25, iterations: 477"}
{"test_case": 67, "data": "MetropolisHasting 67: robots/2-6-1.pl, test_cost: 0, train_cost: 0, time: 0.0030062580000000047, length: 35, iterations: 232"}
{"test_case": 68, "data": "MetropolisHasting 68: robots/2-6-2.pl, test_cost: 0, train_cost: 0, time: 0.0012168119999999977, length: 12, iterations: 113"}
{"test_case": 69, "data": "MetropolisHasting 69: robots/2-6-3.pl, test_cost: 0, train_cost: 0, time: 0.019323046999999996, length: 26, iterations: 1466"}
{"test_case": 70, "data": "MetropolisHasting 70: robots/2-6-4.pl, test_cost: 0, train_cost: 0, time: 0.035987297, length: 54, iterations: 2656"}
{"test_case": 71, "data": "MetropolisHasting 71: robots/2-6-5.pl, test_cost: 0, train_cost: 0, time: 0.004575644999999996, length: 12, iterations: 393"}
{"test_case": 72, "data": "MetropolisHasting 72: robots/2-6-6.pl, test_cost: 0, train_cost: 0, time: 0.006032079000000003, length: 11, iterations: 554"}
{"test_case": 73, "data": "MetropolisHasting 73: robots/2-6-7.pl, test_cost: 0, train_cost: 0, time: 0.0016466449999999952, length: 4, iterations: 145"}
{"test_case": 74, "data": "MetropolisHasting 74: robots/2-6-8.pl, test_cost: 0, train_cost: 0, time: 0.005245501999999999, length: 41, iterations: 408"}
{"test_case": 75, "data": "MetropolisHasting 75: robots/2-6-9.pl, test_cost: 0, train_cost: 0, time: 0.013251008000000002, length: 90, iterations: 921"}
{"test_case": 76, "data": "MetropolisHasting 76: robots/2-6-10.pl, test_cost: 0, train_cost: 0, time: 0.00023646900000000304, length: 12, iterations: 19"}
{"test_case": 77, "data": "MetropolisHasting 77: robots/2-7-0.pl, test_cost: 0, train_cost: 0, time: 0.010532243999999996, length: 47, iterations: 846"}
{"test_case": 78, "data": "MetropolisHasting 78: robots/2-7-1.pl, test_cost: 0, train_cost: 0, time: 0.010414081999999991, length: 21, iterations: 929"}
{"test_case": 79, "data": "MetropolisHasting 79: robots/2-7-2.pl, test_cost: 0, train_cost: 0, time: 0.0013516030000000068, length: 5, iterations: 126"}
{"test_case": 80, "data": "MetropolisHasting 80: robots/2-7-3.pl, test_cost: 0, train_cost: 0, time: 0.0037056669999999993, length: 22, iterations: 311"}
{"test_case": 81, "data": "MetropolisHasting 81: robots/2-7-4.pl, test_cost: 0, train_cost: 0, time: 9.782799999999946e-05, length: 2, iterations: 7"}
{"test_case": 82, "data": "MetropolisHasting 82: robots/2-7-5.pl, test_cost: 0, train_cost: 0, time: 0.0026132029999999997, length: 9, iterations: 240"}
{"test_case": 83, "data": "MetropolisHasting 83: robots/2-7-6.pl, test_cost: 0, train_cost: 0, time: 4.2181999999999983e-05, length: 2, iterations: 2"}
{"test_case": 84, "data": "MetropolisHasting 84: robots/2-7-7.pl, test_cost: 0, train_cost: 0, time: 0.010866181999999999, length: 31, iterations: 917"}
{"test_case": 85, "data": "MetropolisHasting 85: robots/2-7-8.pl, test_cost: 0, train_cost: 0, time: 0.027626820000000003, length: 26, iterations: 1996"}
{"test_case": 86, "data": "MetropolisHasting 86: robots/2-7-9.pl, test_cost: 0, train_cost: 0, time: 8.847000000000022e-05, length: 0, iterations: 7"}
{"test_case": 87, "data": "MetropolisHasting 87: robots/2-7-10.pl, test_cost: 0, train_cost: 0, time: 0.0004565319999999956, length: 3, iterations: 44"}
{"test_case": 88, "data": "MetropolisHasting 88: robots/2-8-0.pl, test_cost: 0, train_cost: 0, time: 0.0017466260000000011, length: 13, iterations: 154"}
{"test_case": 89, "data": "MetropolisHasting 89: robots/2-8-1.pl, test_cost: 0, train_cost: 0, time: 0.0071512300000000015, length: 18, iterations: 535"}
{"test_case": 90, "data": "MetropolisHasting 90: robots/2-8-2.pl, test_cost: 0, train_cost: 0, time: 0.0036715279999999994, length: 21, iterations: 285"}
{"test_case": 91, "data": "MetropolisHasting 91: robots/2-8-3.pl, test_cost: 0, train_cost: 0, time: 0.015524266, length: 64, iterations: 1151"}
{"test_case": 92, "data": "MetropolisHasting 92: robots/2-8-4.pl, test_cost: 0, train_cost: 0, time: 0.00024341699999999925, length: 4, iterations: 20"}
{"test_case": 93, "data": "MetropolisHasting 93: robots/2-8-5.pl, test_cost: 0, train_cost: 0, time: 0.034845796, length: 15, iterations: 3121"}
{"test_case": 94, "data": "MetropolisHasting 94: robots/2-8-6.pl, test_cost: 0, train_cost: 0, time: 0.0005879529999999952, length: 14, iterations: 50"}
{"test_case": 95, "data": "MetropolisHasting 95: robots/2-8-7.pl, test_cost: 0, train_cost: 0, time: 0.0002557730000000008, length: 9, iterations: 22"}
{"test_case": 96, "data": "MetropolisHasting 96: robots/2-8-8.pl, test_cost: 0, train_cost: 0, time: 0.0006390750000000028, length: 10, iterations: 60"}
{"test_case": 97, "data": "MetropolisHasting 97: robots/2-8-9.pl, test_cost: 0, train_cost: 0, time: 0.008401659999999998, length: 34, iterations: 651"}
{"test_case": 98, "data": "MetropolisHasting 98: robots/2-8-10.pl, test_cost: 0, train_cost: 0, time: 0.006544818999999993, length: 42, iterations: 546"}
{"test_case": 99, "data": "MetropolisHasting 99: robots/2-9-0.pl, test_cost: 0, train_cost: 0, time: 0.023661331000000008, length: 22, iterations: 2125"}
{"test_case": 100, "data": "MetropolisHasting 100: robots/2-9-1.pl, test_cost: 0, train_cost: 0, time: 0.006030638999999999, length: 9, iterations: 435"}
{"test_case": 101, "data": "MetropolisHasting 101: robots/2-9-2.pl, test_cost: 0, train_cost: 0, time: 0.0007812130000000011, length: 10, iterations: 66"}
{"test_case": 102, "data": "MetropolisHasting 102: robots/2-9-3.pl, test_cost: 0, train_cost: 0, time: 0.00235692, length: 4, iterations: 214"}
{"test_case": 103, "data": "MetropolisHasting 103: robots/2-9-4.pl, test_cost: 0, train_cost: 0, time: 0.0010801409999999997, length: 11, iterations: 97"}
{"test_case": 104, "data": "MetropolisHasting 104: robots/2-9-5.pl, test_cost: 0, train_cost: 0, time: 0.004327488000000001, length: 27, iterations: 355"}
{"test_case": 105, "data": "MetropolisHasting 105: robots/2-9-6.pl, test_cost: 0, train_cost: 0, time: 0.0036934409999999987, length: 17, iterations: 349"}
{"test_case": 106, "data": "MetropolisHasting 106: robots/2-9-7.pl, test_cost: 0, train_cost: 0, time: 2.9372999999999205e-05, length: 2, iterations: 1"}
{"test_case": 107, "data": "MetropolisHasting 107: robots/2-9-8.pl, test_cost: 0, train_cost: 0, time: 0.013795374999999999, length: 13, iterations: 1367"}
{"test_case": 108, "data": "MetropolisHasting 108: robots/2-9-9.pl, test_cost: 0, train_cost: 0, time: 0.0007977490000000004, length: 8, iterations: 70"}
{"test_case": 109, "data": "MetropolisHasting 109: robots/2-9-10.pl, test_cost: 0, train_cost: 0, time: 0.005950454000000001, length: 18, iterations: 529"}
{"test_case": 110, "data": "MetropolisHasting 110: robots/4-0-0.pl, test_cost: 0, train_cost: 0, time: 0.037799841, length: 49, iterations: 2138"}
{"test_case": 111, "data": "MetropolisHasting 111: robots/4-0-1.pl, test_cost: 0, train_cost: 0, time: 0.017674673999999994, length: 111, iterations: 914"}
{"test_case": 112, "data": "MetropolisHasting 112: robots/4-0-2.pl, test_cost: 0, train_cost: 0, time: 0.11310899100000002, length: 285, iterations: 3371"}
{"test_case": 113, "data": "MetropolisHasting 113: robots/4-0-3.pl, test_cost: 0, train_cost: 0, time: 0.132784969, length: 416, iterations: 3480"}
{"test_case": 114, "data": "MetropolisHasting 114: robots/4-0-4.pl, test_cost: 0, train_cost: 0, time: 0.00027343499999998855, length: 11, iterations: 21"}
{"test_case": 115, "data": "MetropolisHasting 115: robots/4-0-5.pl, test_cost: 0, train_cost: 0, time: 0.04438861500000002, length: 195, iterations: 1800"}
{"test_case": 116, "data": "MetropolisHasting 116: robots/4-0-6.pl, test_cost: 0, train_cost: 0, time: 0.12211772699999995, length: 310, iterations: 3917"}
{"test_case": 117, "data": "MetropolisHasting 117: robots/4-0-7.pl, test_cost: 0, train_cost: 0, time: 0.006627352000000031, length: 43, iterations: 437"}
{"test_case": 118, "data": "MetropolisHasting 118: robots/4-0-8.pl, test_cost: 0, train_cost: 0, time: 0.02037168699999997, length: 21, iterations: 1692"}
{"test_case": 119, "data": "MetropolisHasting 119: robots/4-0-9.pl, test_cost: 0, train_cost: 0, time: 0.0054390550000000815, length: 30, iterations: 420"}
{"test_case": 120, "data": "MetropolisHasting 120: robots/4-0-10.pl, test_cost: 0, train_cost: 0, time: 0.04453846, length: 84, iterations: 2955"}
{"test_case": 121, "data": "MetropolisHasting 121: robots/4-1-0.pl, test_cost: 0, train_cost: 0, time: 0.6203209040000001, length: 687, iterations: 14813"}
{"test_case": 122, "data": "MetropolisHasting 122: robots/4-1-1.pl, test_cost: 0, train_cost: 0, time: 0.014465611999999961, length: 30, iterations: 1143"}
{"test_case": 123, "data": "MetropolisHasting 123: robots/4-1-2.pl, test_cost: 0, train_cost: 0, time: 0.018858598999999976, length: 47, iterations: 1266"}
{"test_case": 124, "data": "MetropolisHasting 124: robots/4-1-3.pl, test_cost: 0, train_cost: 0, time: 0.018859044000000047, length: 45, iterations: 1544"}
{"test_case": 125, "data": "MetropolisHasting 125: robots/4-1-4.pl, test_cost: 0, train_cost: 0, time: 0.052931835999999954, length: 64, iterations: 3247"}
{"test_case": 126, "data": "MetropolisHasting 126: robots/4-1-5.pl, test_cost: 0, train_cost: 0, time: 0.003530292999999962, length: 50, iterations: 266"}
{"test_case": 127, "data": "MetropolisHasting 127: robots/4-1-6.pl, test_cost: 0, train_cost: 0, time: 0.007811272999999952, length: 22, iterations: 709"}
{"test_case": 128, "data": "MetropolisHasting 128: robots/4-1-7.pl, test_cost: 0, train_cost: 0, time: 0.007493842000000028, length: 21, iterations: 581"}
{"test_case": 129, "data": "MetropolisHasting 129: robots/4-1-8.pl, test_cost: 0, train_cost: 0, time: 0.008284346000000054, length: 59, iterations: 620"}
{"test_case": 130, "data": "MetropolisHasting 130: robots/4-1-9.pl, test_cost: 0, train_cost: 0, time: 0.018008793999999998, length: 58, iterations: 1314"}
{"test_case": 131, "data": "MetropolisHasting 131: robots/4-1-10.pl, test_cost: 0, train_cost: 0, time: 0.005421368999999999, length: 74, iterations: 306"}
{"test_case": 132, "data": "MetropolisHasting 132: robots/4-2-0.pl, test_cost: 0, train_cost: 0, time: 0.009619053000000002, length: 49, iterations: 701"}
{"test_case": 133, "data": "MetropolisHasting 133: robots/4-2-1.pl, test_cost: 0, train_cost: 0, time: 0.010091717, length: 46, iterations: 751"}
{"test_case": 134, "data": "MetropolisHasting 134: robots/4-2-2.pl, test_cost: 0, train_cost: 0, time: 0.06302854299999999, length: 282, iterations: 1873"}
{"test_case": 135, "data": "MetropolisHasting 135: robots/4-2-3.pl, test_cost: 0, train_cost: 0, time: 0.010849251000000004, length: 66, iterations: 761"}
{"test_case": 136, "data": "MetropolisHasting 136: robots/4-2-4.pl, test_cost: 0, train_cost: 0, time: 0.005325500999999996, length: 32, iterations: 453"}
{"test_case": 137, "data": "MetropolisHasting 137: robots/4-2-5.pl, test_cost: 0, train_cost: 0, time: 0.02494286200000001, length: 54, iterations: 1768"}
{"test_case": 138, "data": "MetropolisHasting 138: robots/4-2-6.pl, test_cost: 0, train_cost: 0, time: 0.039242938000000005, length: 91, iterations: 2511"}
{"test_case": 139, "data": "MetropolisHasting 139: robots/4-2-7.pl, test_cost: 0, train_cost: 0, time: 0.04187079099999999, length: 104, iterations: 2244"}
{"test_case": 140, "data": "MetropolisHasting 140: robots/4-2-8.pl, test_cost: 0, train_cost: 0, time: 0.0032930599999999996, length: 23, iterations: 243"}
{"test_case": 141, "data": "MetropolisHasting 141: robots/4-2-9.pl, test_cost: 0, train_cost: 0, time: 0.203096679, length: 285, iterations: 6361"}
{"test_case": 142, "data": "MetropolisHasting 142: robots/4-2-10.pl, test_cost: 0, train_cost: 0, time: 0.012591359999999996, length: 24, iterations: 988"}
{"test_case": 143, "data": "MetropolisHasting 143: robots/4-3-0.pl, test_cost: 0, train_cost: 0, time: 0.10328981599999998, length: 275, iterations: 3661"}
{"test_case": 144, "data": "MetropolisHasting 144: robots/4-3-1.pl, test_cost: 0, train_cost: 0, time: 0.016710751999999995, length: 31, iterations: 1398"}
{"test_case": 145, "data": "MetropolisHasting 145: robots/4-3-2.pl, test_cost: 0, train_cost: 0, time: 0.01310325200000001, length: 37, iterations: 831"}
{"test_case": 146, "data": "MetropolisHasting 146: robots/4-3-3.pl, test_cost: 0, train_cost: 0, time: 0.005161439999999962, length: 42, iterations: 391"}
{"test_case": 147, "data": "MetropolisHasting 147: robots/4-3-4.pl, test_cost: 0, train_cost: 0, time: 0.07834191099999999, length: 92, iterations: 3414"}
{"test_case": 148, "data": "MetropolisHasting 148: robots/4-3-5.pl, test_cost: 0, train_cost: 0, time: 0.009100197000000032, length: 25, iterations: 725"}
{"test_case": 149, "data": "MetropolisHasting 149: robots/4-3-6.pl, test_cost: 0, train_cost: 0, time: 0.029364214, length: 60, iterations: 2199"}
{"test_case": 150, "data": "MetropolisHasting 150: robots/4-3-7.pl, test_cost: 0, train_cost: 0, time: 0.07790902499999999, length: 240, iterations: 3213"}
{"test_case": 151, "data": "MetropolisHasting 151: robots/4-3-8.pl, test_cost: 0, train_cost: 0, time: 0.30154214, length: 449, iterations: 8949"}
{"test_case": 152, "data": "MetropolisHasting 152: robots/4-3-9.pl, test_cost: 0, train_cost: 0, time: 0.01249839199999997, length: 63, iterations: 948"}
{"test_case": 153, "data": "MetropolisHasting 153: robots/4-3-10.pl, test_cost: 0, train_cost: 0, time: 0.009113227999999973, length: 94, iterations: 506"}
{"test_case": 154, "data": "MetropolisHasting 154: robots/4-4-0.pl, test_cost: 0, train_cost: 0, time: 0.005620686999999958, length: 49, iterations: 436"}
{"test_case": 155, "data": "MetropolisHasting 155: robots/4-4-1.pl, test_cost: 0, train_cost: 0, time: 0.03833772499999999, length: 98, iterations: 2383"}
{"test_case": 156, "data": "MetropolisHasting 156: robots/4-4-2.pl, test_cost: 0, train_cost: 0, time: 0.00012807800000003144, length: 5, iterations: 8"}
{"test_case": 157, "data": "MetropolisHasting 157: robots/4-4-3.pl, test_cost: 0, train_cost: 0, time: 0.04693033899999999, length: 46, iterations: 2886"}
{"test_case": 158, "data": "MetropolisHasting 158: robots/4-4-4.pl, test_cost: 0, train_cost: 0, time: 0.009240316999999942, length: 53, iterations: 569"}
{"test_case": 159, "data": "MetropolisHasting 159: robots/4-4-5.pl, test_cost: 0, train_cost: 0, time: 0.014353512000000013, length: 57, iterations: 1137"}
{"test_case": 160, "data": "MetropolisHasting 160: robots/4-4-6.pl, test_cost: 0, train_cost: 0, time: 0.306667083, length: 118, iterations: 7638"}
{"test_case": 161, "data": "MetropolisHasting 161: robots/4-4-7.pl, test_cost: 0, train_cost: 0, time: 0.24187629400000005, length: 385, iterations: 6158"}
{"test_case": 162, "data": "MetropolisHasting 162: robots/4-4-8.pl, test_cost: 0, train_cost: 0, time: 0.014979240999999921, length: 22, iterations: 1208"}
{"test_case": 163, "data": "MetropolisHasting 163: robots/4-4-9.pl, test_cost: 0, train_cost: 0, time: 0.09522443800000002, length: 210, iterations: 3852"}
{"test_case": 164, "data": "MetropolisHasting 164: robots/4-4-10.pl, test_cost: 0, train_cost: 0, time: 0.05377712400000001, length: 249, iterations: 2115"}
{"test_case": 165, "data": "MetropolisHasting 165: robots/4-5-0.pl, test_cost: 0, train_cost: 0, time: 0.008018952999999995, length: 26, iterations: 612"}
{"test_case": 166, "data": "MetropolisHasting 166: robots/4-5-1.pl, test_cost: 0, train_cost: 0, time: 0.002188148000000001, length: 14, iterations: 191"}
{"test_case": 167, "data": "MetropolisHasting 167: robots/4-5-2.pl, test_cost: 0, train_cost: 0, time: 0.0007216239999999763, length: 11, iterations: 61"}
{"test_case": 168, "data": "MetropolisHasting 168: robots/4-5-3.pl, test_cost: 0, train_cost: 0, time: 0.09726282799999997, length: 246, iterations: 3254"}
{"test_case": 169, "data": "MetropolisHasting 169: robots/4-5-4.pl, test_cost: 0, train_cost: 0, time: 0.004781558999999991, length: 54, iterations: 318"}
{"test_case": 170, "data": "MetropolisHasting 170: robots/4-5-5.pl, test_cost: 0, train_cost: 0, time: 0.912208113, length: 927, iterations: 11546"}
{"test_case": 171, "data": "MetropolisHasting 171: robots/4-5-6.pl, test_cost: 0, train_cost: 0, time: 0.018803192999999996, length: 32, iterations: 1442"}
{"test_case": 172, "data": "MetropolisHasting 172: robots/4-5-7.pl, test_cost: 0, train_cost: 0, time: 0.11997417799999999, length: 100, iterations: 4379"}
{"test_case": 173, "data": "MetropolisHasting 173: robots/4-5-8.pl, test_cost: 0, train_cost: 0, time: 0.310929169, length: 518, iterations: 6625"}
{"test_case": 174, "data": "MetropolisHasting 174: robots/4-5-9.pl, test_cost: 0, train_cost: 0, time: 0.24503494999999997, length: 511, iterations: 5775"}
{"test_case": 175, "data": "MetropolisHasting 175: robots/4-5-10.pl, test_cost: 0, train_cost: 0, time: 0.008170683000000123, length: 55, iterations: 602"}
{"test_case": 176, "data": "MetropolisHasting 176: robots/4-6-0.pl, test_cost: 0, train_cost: 0, time: 0.07411692099999989, length: 41, iterations: 5130"}
{"test_case": 177, "data": "MetropolisHasting 177: robots/4-6-1.pl, test_cost: 0, train_cost: 0, time: 0.0004362759999998467, length: 13, iterations: 36"}
{"test_case": 178, "data": "MetropolisHasting 178: robots/4-6-2.pl, test_cost: 0, train_cost: 0, time: 0.03206464100000006, length: 19, iterations: 2529"}
{"test_case": 179, "data": "MetropolisHasting 179: robots/4-6-3.pl, test_cost: 0, train_cost: 0, time: 0.0002048479999998687, length: 3, iterations: 17"}
{"test_case": 180, "data": "MetropolisHasting 180: robots/4-6-4.pl, test_cost: 0, train_cost: 0, time: 0.019444815, length: 21, iterations: 1473"}
{"test_case": 181, "data": "MetropolisHasting 181: robots/4-6-5.pl, test_cost: 0, train_cost: 0, time: 0.08962361399999999, length: 100, iterations: 3673"}
{"test_case": 182, "data": "MetropolisHasting 182: robots/4-6-6.pl, test_cost: 0, train_cost: 0, time: 0.05527123399999999, length: 88, iterations: 2940"}
{"test_case": 183, "data": "MetropolisHasting 183: robots/4-6-7.pl, test_cost: 0, train_cost: 0, time: 0.030085794, length: 97, iterations: 1898"}
{"test_case": 184, "data": "MetropolisHasting 184: robots/4-6-8.pl, test_cost: 0, train_cost: 0, time: 0.256232531, length: 425, iterations: 5680"}
{"test_case": 185, "data": "MetropolisHasting 185: robots/4-6-9.pl, test_cost: 0, train_cost: 0, time: 0.005404826000000029, length: 60, iterations: 347"}
{"test_case": 186, "data": "MetropolisHasting 186: robots/4-6-10.pl, test_cost: 0, train_cost: 0, time: 0.059526794999999966, length: 248, iterations: 2088"}
{"test_case": 187, "data": "MetropolisHasting 187: robots/4-7-0.pl, test_cost: 0, train_cost: 0, time: 0.0003411930000000174, length: 3, iterations: 31"}
{"test_case": 188, "data": "MetropolisHasting 188: robots/4-7-1.pl, test_cost: 0, train_cost: 0, time: 0.326744955, length: 583, iterations: 6543"}
{"test_case": 189, "data": "MetropolisHasting 189: robots/4-7-2.pl, test_cost: 0, train_cost: 0, time: 0.02220140599999998, length: 130, iterations: 1069"}
{"test_case": 190, "data": "MetropolisHasting 190: robots/4-7-3.pl, test_cost: 0, train_cost: 0, time: 0.008724274, length: 80, iterations: 485"}
{"test_case": 191, "data": "MetropolisHasting 191: robots/4-7-4.pl, test_cost: 0, train_cost: 0, time: 0.021712785, length: 90, iterations: 1265"}
{"test_case": 192, "data": "MetropolisHasting 192: robots/4-7-5.pl, test_cost: 0, train_cost: 0, time: 0.029850699, length: 122, iterations: 1268"}
{"test_case": 193, "data": "MetropolisHasting 193: robots/4-7-6.pl, test_cost: 0, train_cost: 0, time: 0.002755974999999994, length: 29, iterations: 221"}
{"test_case": 194, "data": "MetropolisHasting 194: robots/4-7-7.pl, test_cost: 0, train_cost: 0, time: 0.00590064500000001, length: 5, iterations: 533"}
{"test_case": 195, "data": "MetropolisHasting 195: robots/4-7-8.pl, test_cost: 0, train_cost: 0, time: 0.031005227999999996, length: 145, iterations: 1505"}
{"test_case": 196, "data": "MetropolisHasting 196: robots/4-7-9.pl, test_cost: 0, train_cost: 0, time: 0.11624140300000001, length: 253, iterations: 4335"}
{"test_case": 197, "data": "MetropolisHasting 197: robots/4-7-10.pl, test_cost: 0, train_cost: 0, time: 0.0023608690000000154, length: 13, iterations: 197"}
{"test_case": 198, "data": "MetropolisHasting 198: robots/4-8-0.pl, test_cost: 0, train_cost: 0, time: 0.01837683100000001, length: 81, iterations: 1058"}
{"test_case": 199, "data": "MetropolisHasting 199: robots/4-8-1.pl, test_cost: 0, train_cost: 0, time: 0.006105176999999989, length: 31, iterations: 434"}
{"test_case": 200, "data": "MetropolisHasting 200: robots/4-8-2.pl, test_cost: 0, train_cost: 0, time: 0.07138123599999999, length: 257, iterations: 2855"}
{"test_case": 201, "data": "MetropolisHasting 201: robots/4-8-3.pl, test_cost: 0, train_cost: 0, time: 0.020547492, length: 27, iterations: 1543"}
{"test_case": 202, "data": "MetropolisHasting 202: robots/4-8-4.pl, test_cost: 0, train_cost: 0, time: 0.002335133000000003, length: 37, iterations: 184"}
{"test_case": 203, "data": "MetropolisHasting 203: robots/4-8-5.pl, test_cost: 0, train_cost: 0, time: 0.010347667000000005, length: 63, iterations: 710"}
{"test_case": 204, "data": "MetropolisHasting 204: robots/4-8-6.pl, test_cost: 0, train_cost: 0, time: 0.005889609000000004, length: 31, iterations: 460"}
{"test_case": 205, "data": "MetropolisHasting 205: robots/4-8-7.pl, test_cost: 0, train_cost: 0, time: 0.016435427000000002, length: 73, iterations: 1148"}
{"test_case": 206, "data": "MetropolisHasting 206: robots/4-8-8.pl, test_cost: 0, train_cost: 0, time: 0.03674941100000001, length: 42, iterations: 2927"}
{"test_case": 207, "data": "MetropolisHasting 207: robots/4-8-9.pl, test_cost: 0, train_cost: 0, time: 0.06572940299999999, length: 245, iterations: 2333"}
{"test_case": 208, "data": "MetropolisHasting 208: robots/4-8-10.pl, test_cost: 0, train_cost: 0, time: 0.019332413999999992, length: 54, iterations: 1405"}
{"test_case": 209, "data": "MetropolisHasting 209: robots/4-9-0.pl, test_cost: 0, train_cost: 0, time: 0.03972484000000004, length: 142, iterations: 2209"}
{"test_case": 210, "data": "MetropolisHasting 210: robots/4-9-1.pl, test_cost: 0, train_cost: 0, time: 0.0023137620000000005, length: 29, iterations: 154"}
{"test_case": 211, "data": "MetropolisHasting 211: robots/4-9-2.pl, test_cost: 0, train_cost: 0, time: 0.023537497999999997, length: 68, iterations: 1366"}
{"test_case": 212, "data": "MetropolisHasting 212: robots/4-9-3.pl, test_cost: 0, train_cost: 0, time: 0.011880009, length: 27, iterations: 827"}
{"test_case": 213, "data": "MetropolisHasting 213: robots/4-9-4.pl, test_cost: 0, train_cost: 0, time: 0.060618276000000006, length: 151, iterations: 2806"}
{"test_case": 214, "data": "MetropolisHasting 214: robots/4-9-5.pl, test_cost: 0, train_cost: 0, time: 0.081033079, length: 319, iterations: 3072"}
{"test_case": 215, "data": "MetropolisHasting 215: robots/4-9-6.pl, test_cost: 0, train_cost: 0, time: 0.0030660290000000257, length: 30, iterations: 225"}
{"test_case": 216, "data": "MetropolisHasting 216: robots/4-9-7.pl, test_cost: 0, train_cost: 0, time: 0.029136739000000023, length: 151, iterations: 1150"}
{"test_case": 217, "data": "MetropolisHasting 217: robots/4-9-8.pl, test_cost: 0, train_cost: 0, time: 0.041312393, length: 152, iterations: 2304"}
{"test_case": 218, "data": "MetropolisHasting 218: robots/4-9-9.pl, test_cost: 0, train_cost: 0, time: 0.017049024000000024, length: 34, iterations: 1253"}
{"test_case": 219, "data": "MetropolisHasting 219: robots/4-9-10.pl, test_cost: 0, train_cost: 0, time: 0.019271314999999956, length: 73, iterations: 1108"}
{"test_case": 220, "data": "MetropolisHasting 220: robots/6-0-0.pl, test_cost: 0, train_cost: 0, time: 0.023544585, length: 115, iterations: 1057"}
{"test_case": 221, "data": "MetropolisHasting 221: robots/6-0-1.pl, test_cost: 0, train_cost: 0, time: 0.016396335, length: 126, iterations: 829"}
{"test_case": 222, "data": "MetropolisHasting 222: robots/6-0-2.pl, test_cost: 0, train_cost: 0, time: 0.251653747, length: 591, iterations: 4728"}
{"test_case": 223, "data": "MetropolisHasting 223: robots/6-0-3.pl, test_cost: 0, train_cost: 0, time: 0.0071270940000000005, length: 45, iterations: 549"}
{"test_case": 224, "data": "MetropolisHasting 224: robots/6-0-4.pl, test_cost: 0, train_cost: 0, time: 0.009856068999999967, length: 72, iterations: 643"}
{"test_case": 225, "data": "MetropolisHasting 225: robots/6-0-5.pl, test_cost: 0, train_cost: 0, time: 0.00729646500000003, length: 98, iterations: 386"}
{"test_case": 226, "data": "MetropolisHasting 226: robots/6-0-6.pl, test_cost: 0, train_cost: 0, time: 0.013111160999999982, length: 109, iterations: 610"}
{"test_case": 227, "data": "MetropolisHasting 227: robots/6-0-7.pl, test_cost: 0, train_cost: 0, time: 1.423428075, length: 1230, iterations: 13574"}
{"test_case": 228, "data": "MetropolisHasting 228: robots/6-0-8.pl, test_cost: 0, train_cost: 0, time: 1.3704521820000002, length: 52, iterations: 12667"}
{"test_case": 229, "data": "MetropolisHasting 229: robots/6-0-9.pl, test_cost: 0, train_cost: 0, time: 0.0004448660000000437, length: 23, iterations: 34"}
{"test_case": 230, "data": "MetropolisHasting 230: robots/6-0-10.pl, test_cost: 0, train_cost: 0, time: 0.012534931999999999, length: 103, iterations: 688"}
{"test_case": 231, "data": "MetropolisHasting 231: robots/6-1-0.pl, test_cost: 0, train_cost: 0, time: 0.056085448999999996, length: 47, iterations: 3638"}
{"test_case": 232, "data": "MetropolisHasting 232: robots/6-1-1.pl, test_cost: 0, train_cost: 0, time: 0.046864289, length: 166, iterations: 2857"}
{"test_case": 233, "data": "MetropolisHasting 233: robots/6-1-2.pl, test_cost: 0, train_cost: 0, time: 0.009952837999999992, length: 41, iterations: 765"}
{"test_case": 234, "data": "MetropolisHasting 234: robots/6-1-3.pl, test_cost: 0, train_cost: 0, time: 0.759305153, length: 1060, iterations: 9579"}
{"test_case": 235, "data": "MetropolisHasting 235: robots/6-1-4.pl, test_cost: 0, train_cost: 0, time: 0.05466095999999998, length: 170, iterations: 2642"}
{"test_case": 236, "data": "MetropolisHasting 236: robots/6-1-5.pl, test_cost: 0, train_cost: 0, time: 0.05149085599999992, length: 70, iterations: 3020"}
{"test_case": 237, "data": "MetropolisHasting 237: robots/6-1-6.pl, test_cost: 0, train_cost: 0, time: 0.03202593199999981, length: 28, iterations: 2650"}
{"test_case": 238, "data": "MetropolisHasting 238: robots/6-1-7.pl, test_cost: 0, train_cost: 0, time: 0.32141543000000006, length: 698, iterations: 5187"}
{"test_case": 239, "data": "MetropolisHasting 239: robots/6-1-8.pl, test_cost: 0, train_cost: 0, time: 0.0071703050000000434, length: 12, iterations: 607"}
{"test_case": 240, "data": "MetropolisHasting 240: robots/6-1-9.pl, test_cost: 0, train_cost: 0, time: 0.06944589799999999, length: 300, iterations: 2014"}
{"test_case": 241, "data": "MetropolisHasting 241: robots/6-1-10.pl, test_cost: 0, train_cost: 0, time: 0.192443584, length: 509, iterations: 4052"}
{"test_case": 242, "data": "MetropolisHasting 242: robots/6-2-0.pl, test_cost: 0, train_cost: 0, time: 12.552600446, length: 4322, iterations: 41788"}
{"test_case": 243, "data": "MetropolisHasting 243: robots/6-2-1.pl, test_cost: 0, train_cost: 0, time: 0.08846708499999956, length: 214, iterations: 3354"}
{"test_case": 244, "data": "MetropolisHasting 244: robots/6-2-2.pl, test_cost: 0, train_cost: 0, time: 0.44065247099999993, length: 914, iterations: 7384"}
{"test_case": 245, "data": "MetropolisHasting 245: robots/6-2-3.pl, test_cost: 0, train_cost: 0, time: 0.013866296999999861, length: 102, iterations: 879"}
{"test_case": 246, "data": "MetropolisHasting 246: robots/6-2-4.pl, test_cost: 0, train_cost: 0, time: 0.2756899999999991, length: 603, iterations: 4883"}
{"test_case": 247, "data": "MetropolisHasting 247: robots/6-2-5.pl, test_cost: 0, train_cost: 0, time: 0.06737067899999971, length: 147, iterations: 3697"}
{"test_case": 248, "data": "MetropolisHasting 248: robots/6-2-6.pl, test_cost: 0, train_cost: 0, time: 0.008327081999999209, length: 74, iterations: 562"}
{"test_case": 249, "data": "MetropolisHasting 249: robots/6-2-7.pl, test_cost: 0, train_cost: 0, time: 0.07766405699999979, length: 224, iterations: 2737"}
{"test_case": 250, "data": "MetropolisHasting 250: robots/6-2-8.pl, test_cost: 0, train_cost: 0, time: 0.012507759, length: 97, iterations: 614"}
{"test_case": 251, "data": "MetropolisHasting 251: robots/6-2-9.pl, test_cost: 0, train_cost: 0, time: 12.000692551, length: 4161, iterations: 41394"}
{"test_case": 252, "data": "MetropolisHasting 252: robots/6-2-10.pl, test_cost: 0, train_cost: 0, time: 0.0023960560000002573, length: 17, iterations: 201"}
{"test_case": 253, "data": "MetropolisHasting 253: robots/6-3-0.pl, test_cost: 0, train_cost: 0, time: 0.04923073900000041, length: 126, iterations: 2491"}
{"test_case": 254, "data": "MetropolisHasting 254: robots/6-3-1.pl, test_cost: 0, train_cost: 0, time: 0.30444448299999927, length: 563, iterations: 6163"}
{"test_case": 255, "data": "MetropolisHasting 255: robots/6-3-2.pl, test_cost: 0, train_cost: 0, time: 0.0020910509999989557, length: 37, iterations: 159"}
{"test_case": 256, "data": "MetropolisHasting 256: robots/6-3-3.pl, test_cost: 0, train_cost: 0, time: 0.02448040500000026, length: 109, iterations: 1527"}
{"test_case": 257, "data": "MetropolisHasting 257: robots/6-3-4.pl, test_cost: 0, train_cost: 0, time: 0.03587055800000094, length: 178, iterations: 1796"}
{"test_case": 258, "data": "MetropolisHasting 258: robots/6-3-5.pl, test_cost: 0, train_cost: 0, time: 0.6285939359999997, length: 1008, iterations: 7924"}
{"test_case": 259, "data": "MetropolisHasting 259: robots/6-3-6.pl, test_cost: 0, train_cost: 0, time: 0.020903640000000223, length: 112, iterations: 1058"}
{"test_case": 260, "data": "MetropolisHasting 260: robots/6-3-7.pl, test_cost: 0, train_cost: 0, time: 0.049495748, length: 202, iterations: 2348"}
{"test_case": 261, "data": "MetropolisHasting 261: robots/6-3-8.pl, test_cost: 0, train_cost: 0, time: 0.05910895199999999, length: 257, iterations: 1831"}
{"test_case": 262, "data": "MetropolisHasting 262: robots/6-3-9.pl, test_cost: 0, train_cost: 0, time: 0.011137245000000004, length: 60, iterations: 890"}
{"test_case": 263, "data": "MetropolisHasting 263: robots/6-3-10.pl, test_cost: 0, train_cost: 0, time: 0.436805222, length: 552, iterations: 9999"}
{"test_case": 264, "data": "MetropolisHasting 264: robots/6-4-0.pl, test_cost: 0, train_cost: 0, time: 0.11082043100000005, length: 281, iterations: 4168"}
{"test_case": 265, "data": "MetropolisHasting 265: robots/6-4-1.pl, test_cost: 0, train_cost: 0, time: 0.02902418700000009, length: 160, iterations: 1456"}
{"test_case": 266, "data": "MetropolisHasting 266: robots/6-4-2.pl, test_cost: 0, train_cost: 0, time: 0.24970250900000002, length: 424, iterations: 5559"}
{"test_case": 267, "data": "MetropolisHasting 267: robots/6-4-3.pl, test_cost: 0, train_cost: 0, time: 0.3366793720000001, length: 668, iterations: 6044"}
{"test_case": 268, "data": "MetropolisHasting 268: robots/6-4-4.pl, test_cost: 0, train_cost: 0, time: 0.06932497900000012, length: 54, iterations: 3490"}
{"test_case": 269, "data": "MetropolisHasting 269: robots/6-4-5.pl, test_cost: 0, train_cost: 0, time: 0.01761735600000014, length: 73, iterations: 1436"}
{"test_case": 270, "data": "MetropolisHasting 270: robots/6-4-6.pl, test_cost: 0, train_cost: 0, time: 0.07469762399999999, length: 138, iterations: 4250"}
{"test_case": 271, "data": "MetropolisHasting 271: robots/6-4-7.pl, test_cost: 0, train_cost: 0, time: 0.08754659800000002, length: 242, iterations: 2866"}
{"test_case": 272, "data": "MetropolisHasting 272: robots/6-4-8.pl, test_cost: 0, train_cost: 0, time: 0.683970615, length: 649, iterations: 12512"}
{"test_case": 273, "data": "MetropolisHasting 273: robots/6-4-9.pl, test_cost: 0, train_cost: 0, time: 0.07604160100000001, length: 106, iterations: 3447"}
{"test_case": 274, "data": "MetropolisHasting 274: robots/6-4-10.pl, test_cost: 0, train_cost: 0, time: 0.03038686199999996, length: 174, iterations: 1456"}
{"test_case": 275, "data": "MetropolisHasting 275: robots/6-5-0.pl, test_cost: 0, train_cost: 0, time: 0.011333287999999997, length: 73, iterations: 818"}
{"test_case": 276, "data": "MetropolisHasting 276: robots/6-5-1.pl, test_cost: 0, train_cost: 0, time: 0.002885142000000007, length: 36, iterations: 241"}
{"test_case": 277, "data": "MetropolisHasting 277: robots/6-5-2.pl, test_cost: 0, train_cost: 0, time: 0.005321289999999923, length: 40, iterations: 382"}
{"test_case": 278, "data": "MetropolisHasting 278: robots/6-5-3.pl, test_cost: 0, train_cost: 0, time: 1.4742426760000003, length: 446, iterations: 18517"}
{"test_case": 279, "data": "MetropolisHasting 279: robots/6-5-4.pl, test_cost: 0, train_cost: 0, time: 0.03632598600000003, length: 111, iterations: 2055"}
{"test_case": 280, "data": "MetropolisHasting 280: robots/6-5-5.pl, test_cost: 0, train_cost: 0, time: 0.086989879, length: 324, iterations: 2681"}
{"test_case": 281, "data": "MetropolisHasting 281: robots/6-5-6.pl, test_cost: 0, train_cost: 0, time: 6.30475327, length: 123, iterations: 37038"}
{"test_case": 282, "data": "MetropolisHasting 282: robots/6-5-7.pl, test_cost: 0, train_cost: 0, time: 0.022491330999999448, length: 144, iterations: 1195"}
{"test_case": 283, "data": "MetropolisHasting 283: robots/6-5-8.pl, test_cost: 0, train_cost: 0, time: 0.029740078999999753, length: 184, iterations: 1187"}
{"test_case": 284, "data": "MetropolisHasting 284: robots/6-5-9.pl, test_cost: 0, train_cost: 0, time: 0.10120187199999986, length: 198, iterations: 3696"}
{"test_case": 285, "data": "MetropolisHasting 285: robots/6-5-10.pl, test_cost: 0, train_cost: 0, time: 3.2725544179999995, length: 2070, iterations: 22474"}
{"test_case": 286, "data": "MetropolisHasting 286: robots/6-6-0.pl, test_cost: 0, train_cost: 0, time: 4.132833754, length: 143, iterations: 25144"}
{"test_case": 287, "data": "MetropolisHasting 287: robots/6-6-1.pl, test_cost: 0, train_cost: 0, time: 0.04014404100000135, length: 123, iterations: 2749"}
{"test_case": 288, "data": "MetropolisHasting 288: robots/6-6-2.pl, test_cost: 0, train_cost: 0, time: 0.15507305700000096, length: 256, iterations: 6763"}
{"test_case": 289, "data": "MetropolisHasting 289: robots/6-6-3.pl, test_cost: 0, train_cost: 0, time: 0.014822540999999134, length: 83, iterations: 984"}
{"test_case": 290, "data": "MetropolisHasting 290: robots/6-6-4.pl, test_cost: 0, train_cost: 0, time: 0.015063007000000002, length: 73, iterations: 1032"}
{"test_case": 291, "data": "MetropolisHasting 291: robots/6-6-5.pl, test_cost: 0, train_cost: 0, time: 0.8299524030000001, length: 62, iterations: 10791"}
{"test_case": 292, "data": "MetropolisHasting 292: robots/6-6-6.pl, test_cost: 0, train_cost: 0, time: 0.214611016, length: 439, iterations: 4552"}
{"test_case": 293, "data": "MetropolisHasting 293: robots/6-6-7.pl, test_cost: 0, train_cost: 0, time: 0.21805880099999997, length: 442, iterations: 4587"}
{"test_case": 294, "data": "MetropolisHasting 294: robots/6-6-8.pl, test_cost: 0, train_cost: 0, time: 0.871255978, length: 1151, iterations: 8408"}
{"test_case": 295, "data": "MetropolisHasting 295: robots/6-6-9.pl, test_cost: 0, train_cost: 0, time: 0.024195838999999886, length: 71, iterations: 1359"}
{"test_case": 296, "data": "MetropolisHasting 296: robots/6-6-10.pl, test_cost: 0, train_cost: 0, time: 0.12229801400000007, length: 288, iterations: 3200"}
{"test_case": 297, "data": "MetropolisHasting 297: robots/6-7-0.pl, test_cost: 0, train_cost: 0, time: 0.042326646000000245, length: 139, iterations: 1983"}
{"test_case": 298, "data": "MetropolisHasting 298: robots/6-7-1.pl, test_cost: 0, train_cost: 0, time: 0.1327648589999999, length: 360, iterations: 3517"}
{"test_case": 299, "data": "MetropolisHasting 299: robots/6-7-2.pl, test_cost: 0, train_cost: 0, time: 4.534480944, length: 2703, iterations: 25510"}
{"test_case": 300, "data": "MetropolisHasting 300: robots/6-7-3.pl, test_cost: 0, train_cost: 0, time: 0.131744098, length: 421, iterations: 2785"}
{"test_case": 301, "data": "MetropolisHasting 301: robots/6-7-4.pl, test_cost: 0, train_cost: 0, time: 0.10496348999999999, length: 385, iterations: 2894"}
{"test_case": 302, "data": "MetropolisHasting 302: robots/6-7-5.pl, test_cost: 0, train_cost: 0, time: 0.05139637699999999, length: 294, iterations: 1523"}
{"test_case": 303, "data": "MetropolisHasting 303: robots/6-7-6.pl, test_cost: 0, train_cost: 0, time: 0.697934351, length: 1068, iterations: 6909"}
{"test_case": 304, "data": "MetropolisHasting 304: robots/6-7-7.pl, test_cost: 0, train_cost: 0, time: 0.015401488999999935, length: 62, iterations: 1223"}
{"test_case": 305, "data": "MetropolisHasting 305: robots/6-7-8.pl, test_cost: 0, train_cost: 0, time: 0.006929888000000162, length: 81, iterations: 402"}
{"test_case": 306, "data": "MetropolisHasting 306: robots/6-7-9.pl, test_cost: 0, train_cost: 0, time: 0.09187003400000004, length: 346, iterations: 2296"}
{"test_case": 307, "data": "MetropolisHasting 307: robots/6-7-10.pl, test_cost: 0, train_cost: 0, time: 0.24984294299999998, length: 530, iterations: 6209"}
{"test_case": 308, "data": "MetropolisHasting 308: robots/6-8-0.pl, test_cost: 0, train_cost: 0, time: 0.028873244999999992, length: 165, iterations: 1203"}
{"test_case": 309, "data": "MetropolisHasting 309: robots/6-8-1.pl, test_cost: 0, train_cost: 0, time: 0.029810365000000116, length: 33, iterations: 2140"}
{"test_case": 310, "data": "MetropolisHasting 310: robots/6-8-2.pl, test_cost: 0, train_cost: 0, time: 0.257776414, length: 540, iterations: 4787"}
{"test_case": 311, "data": "MetropolisHasting 311: robots/6-8-3.pl, test_cost: 0, train_cost: 0, time: 0.04604059599999999, length: 242, iterations: 1793"}
{"test_case": 312, "data": "MetropolisHasting 312: robots/6-8-4.pl, test_cost: 0, train_cost: 0, time: 3.343583926, length: 2302, iterations: 21123"}
{"test_case": 313, "data": "MetropolisHasting 313: robots/6-8-5.pl, test_cost: 0, train_cost: 0, time: 0.018003696999999708, length: 42, iterations: 1196"}
{"test_case": 314, "data": "MetropolisHasting 314: robots/6-8-6.pl, test_cost: 0, train_cost: 0, time: 0.442800933, length: 683, iterations: 6718"}
{"test_case": 315, "data": "MetropolisHasting 315: robots/6-8-7.pl, test_cost: 0, train_cost: 0, time: 0.0048506779999994976, length: 53, iterations: 333"}
{"test_case": 316, "data": "MetropolisHasting 316: robots/6-8-8.pl, test_cost: 0, train_cost: 0, time: 0.14473553099999936, length: 387, iterations: 3737"}
{"test_case": 317, "data": "MetropolisHasting 317: robots/6-8-9.pl, test_cost: 0, train_cost: 0, time: 0.03151301199999956, length: 136, iterations: 1686"}
{"test_case": 318, "data": "MetropolisHasting 318: robots/6-8-10.pl, test_cost: 0, train_cost: 0, time: 0.34217272699999945, length: 819, iterations: 4965"}
{"test_case": 319, "data": "MetropolisHasting 319: robots/6-9-0.pl, test_cost: 0, train_cost: 0, time: 0.28880253300000014, length: 512, iterations: 4941"}
{"test_case": 320, "data": "MetropolisHasting 320: robots/6-9-1.pl, test_cost: 0, train_cost: 0, time: 0.028125677, length: 17, iterations: 2014"}
{"test_case": 321, "data": "MetropolisHasting 321: robots/6-9-2.pl, test_cost: 0, train_cost: 0, time: 0.005643077000000003, length: 55, iterations: 385"}
{"test_case": 322, "data": "MetropolisHasting 322: robots/6-9-3.pl, test_cost: 0, train_cost: 0, time: 0.034844204999999996, length: 73, iterations: 2442"}
{"test_case": 323, "data": "MetropolisHasting 323: robots/6-9-4.pl, test_cost: 0, train_cost: 0, time: 2.811767108, length: 2082, iterations: 18198"}
{"test_case": 324, "data": "MetropolisHasting 324: robots/6-9-5.pl, test_cost: 0, train_cost: 0, time: 0.0305014990000001, length: 120, iterations: 1444"}
{"test_case": 325, "data": "MetropolisHasting 325: robots/6-9-6.pl, test_cost: 0, train_cost: 0, time: 0.026202560999999847, length: 165, iterations: 1061"}
{"test_case": 326, "data": "MetropolisHasting 326: robots/6-9-7.pl, test_cost: 0, train_cost: 0, time: 0.12362905900000021, length: 336, iterations: 3910"}
{"test_case": 327, "data": "MetropolisHasting 327: robots/6-9-8.pl, test_cost: 0, train_cost: 0, time: 0.017587650999999926, length: 66, iterations: 1219"}
{"test_case": 328, "data": "MetropolisHasting 328: robots/6-9-9.pl, test_cost: 0, train_cost: 0, time: 0.07163735100000013, length: 240, iterations: 2486"}
{"test_case": 329, "data": "MetropolisHasting 329: robots/6-9-10.pl, test_cost: 0, train_cost: 0, time: 0.04328209599999999, length: 182, iterations: 1642"}
{"test_case": 330, "data": "MetropolisHasting 330: robots/8-0-0.pl, test_cost: 0, train_cost: 0, time: 0.240384124, length: 551, iterations: 4689"}
{"test_case": 331, "data": "MetropolisHasting 331: robots/8-0-1.pl, test_cost: 0, train_cost: 0, time: 0.01246878500000001, length: 92, iterations: 615"}
{"test_case": 332, "data": "MetropolisHasting 332: robots/8-0-2.pl, test_cost: 0, train_cost: 0, time: 0.340582816, length: 671, iterations: 5585"}
{"test_case": 333, "data": "MetropolisHasting 333: robots/8-0-3.pl, test_cost: 0, train_cost: 0, time: 0.029711659999999918, length: 149, iterations: 1329"}
{"test_case": 334, "data": "MetropolisHasting 334: robots/8-0-4.pl, test_cost: 0, train_cost: 0, time: 1.826675758, length: 1590, iterations: 14243"}
{"test_case": 335, "data": "MetropolisHasting 335: robots/8-0-5.pl, test_cost: 0, train_cost: 0, time: 0.06277422399999999, length: 311, iterations: 1872"}
{"test_case": 336, "data": "MetropolisHasting 336: robots/8-0-6.pl, test_cost: 8, train_cost: 8, time: 60.001442446, length: 10418, iterations: 83825"}
{"test_case": 337, "data": "MetropolisHasting 337: robots/8-0-7.pl, test_cost: 0, train_cost: 0, time: 0.662674980999995, length: 1202, iterations: 7247"}
{"test_case": 338, "data": "MetropolisHasting 338: robots/8-0-8.pl, test_cost: 0, train_cost: 0, time: 0.060767863999998895, length: 210, iterations: 2307"}
{"test_case": 339, "data": "MetropolisHasting 339: robots/8-0-9.pl, test_cost: 0, train_cost: 0, time: 0.16065730700000103, length: 503, iterations: 3495"}
{"test_case": 340, "data": "MetropolisHasting 340: robots/8-0-10.pl, test_cost: 0, train_cost: 0, time: 0.05206081, length: 211, iterations: 1763"}
{"test_case": 341, "data": "MetropolisHasting 341: robots/8-1-0.pl, test_cost: 0, train_cost: 0, time: 0.088654558, length: 218, iterations: 4236"}
{"test_case": 342, "data": "MetropolisHasting 342: robots/8-1-1.pl, test_cost: 0, train_cost: 0, time: 0.10227908, length: 286, iterations: 3623"}
{"test_case": 343, "data": "MetropolisHasting 343: robots/8-1-2.pl, test_cost: 0, train_cost: 0, time: 0.20091032299999997, length: 444, iterations: 5083"}
{"test_case": 344, "data": "MetropolisHasting 344: robots/8-1-3.pl, test_cost: 0, train_cost: 0, time: 0.06997245400000002, length: 287, iterations: 1906"}
{"test_case": 345, "data": "MetropolisHasting 345: robots/8-1-4.pl, test_cost: 0, train_cost: 0, time: 0.12350781899999996, length: 299, iterations: 3801"}
{"test_case": 346, "data": "MetropolisHasting 346: robots/8-1-5.pl, test_cost: 0, train_cost: 0, time: 0.9489707039999999, length: 1157, iterations: 9819"}
{"test_case": 347, "data": "MetropolisHasting 347: robots/8-1-6.pl, test_cost: 0, train_cost: 0, time: 0.554021316, length: 735, iterations: 7550"}
{"test_case": 348, "data": "MetropolisHasting 348: robots/8-1-7.pl, test_cost: 5, train_cost: 5, time: 60.000490197999994, length: 10732, iterations: 78677"}
{"test_case": 349, "data": "MetropolisHasting 349: robots/8-1-8.pl, test_cost: 0, train_cost: 0, time: 0.023417704000003425, length: 77, iterations: 1303"}
{"test_case": 350, "data": "MetropolisHasting 350: robots/8-1-9.pl, test_cost: 0, train_cost: 0, time: 0.369181243, length: 566, iterations: 5640"}
{"test_case": 351, "data": "MetropolisHasting 351: robots/8-1-10.pl, test_cost: 0, train_cost: 0, time: 0.16561912199999995, length: 379, iterations: 3937"}
{"test_case": 352, "data": "MetropolisHasting 352: robots/8-2-0.pl, test_cost: 0, train_cost: 0, time: 0.06845670199999998, length: 278, iterations: 2579"}
{"test_case": 353, "data": "MetropolisHasting 353: robots/8-2-1.pl, test_cost: 0, train_cost: 0, time: 2.439277401, length: 2127, iterations: 16150"}
{"test_case": 354, "data": "MetropolisHasting 354: robots/8-2-2.pl, test_cost: 0, train_cost: 0, time: 0.07511801600000023, length: 336, iterations: 2273"}
{"test_case": 355, "data": "MetropolisHasting 355: robots/8-2-3.pl, test_cost: 0, train_cost: 0, time: 2.570067865, length: 2095, iterations: 14736"}
{"test_case": 356, "data": "MetropolisHasting 356: robots/8-2-4.pl, test_cost: 0, train_cost: 0, time: 0.051026975000000085, length: 231, iterations: 1791"}
{"test_case": 357, "data": "MetropolisHasting 357: robots/8-2-5.pl, test_cost: 0, train_cost: 0, time: 0.2720237560000003, length: 714, iterations: 4710"}
{"test_case": 358, "data": "MetropolisHasting 358: robots/8-2-6.pl, test_cost: 0, train_cost: 0, time: 0.016793886999999508, length: 92, iterations: 1003"}
{"test_case": 359, "data": "MetropolisHasting 359: robots/8-2-7.pl, test_cost: 0, train_cost: 0, time: 0.16816789400000065, length: 583, iterations: 3161"}
{"test_case": 360, "data": "MetropolisHasting 360: robots/8-2-8.pl, test_cost: 0, train_cost: 0, time: 0.030775592, length: 163, iterations: 1247"}
{"test_case": 361, "data": "MetropolisHasting 361: robots/8-2-9.pl, test_cost: 0, train_cost: 0, time: 0.103163752, length: 313, iterations: 2299"}
{"test_case": 362, "data": "MetropolisHasting 362: robots/8-2-10.pl, test_cost: 0, train_cost: 0, time: 0.02188934099999998, length: 206, iterations: 819"}
{"test_case": 363, "data": "MetropolisHasting 363: robots/8-3-0.pl, test_cost: 0, train_cost: 0, time: 3.855889921, length: 2769, iterations: 16781"}
{"test_case": 364, "data": "MetropolisHasting 364: robots/8-3-1.pl, test_cost: 0, train_cost: 0, time: 1.6767292750000005, length: 1849, iterations: 13107"}
{"test_case": 365, "data": "MetropolisHasting 365: robots/8-3-2.pl, test_cost: 0, train_cost: 0, time: 4.82724784, length: 3159, iterations: 19535"}
{"test_case": 366, "data": "MetropolisHasting 366: robots/8-3-3.pl, test_cost: 0, train_cost: 0, time: 0.2278729160000008, length: 624, iterations: 4408"}
{"test_case": 367, "data": "MetropolisHasting 367: robots/8-3-4.pl, test_cost: 10, train_cost: 10, time: 60.001334531, length: 10934, iterations: 77703"}
{"test_case": 368, "data": "MetropolisHasting 368: robots/8-3-5.pl, test_cost: 0, train_cost: 0, time: 2.5006296520000006, length: 2103, iterations: 17604"}
{"test_case": 369, "data": "MetropolisHasting 369: robots/8-3-6.pl, test_cost: 0, train_cost: 0, time: 5.065113391000011, length: 3063, iterations: 20667"}
{"test_case": 370, "data": "MetropolisHasting 370: robots/8-3-7.pl, test_cost: 0, train_cost: 0, time: 0.060100688000000006, length: 137, iterations: 2660"}
{"test_case": 371, "data": "MetropolisHasting 371: robots/8-3-8.pl, test_cost: 0, train_cost: 0, time: 0.022269746000000007, length: 79, iterations: 1463"}
{"test_case": 372, "data": "MetropolisHasting 372: robots/8-3-9.pl, test_cost: 0, train_cost: 0, time: 2.647628131, length: 2473, iterations: 14142"}
{"test_case": 373, "data": "MetropolisHasting 373: robots/8-3-10.pl, test_cost: 0, train_cost: 0, time: 0.12309246799999984, length: 357, iterations: 3554"}
{"test_case": 374, "data": "MetropolisHasting 374: robots/8-4-0.pl, test_cost: 0, train_cost: 0, time: 0.4153583160000003, length: 654, iterations: 6691"}
{"test_case": 375, "data": "MetropolisHasting 375: robots/8-4-1.pl, test_cost: 0, train_cost: 0, time: 0.0707235380000002, length: 257, iterations: 2233"}
{"test_case": 376, "data": "MetropolisHasting 376: robots/8-4-2.pl, test_cost: 0, train_cost: 0, time: 0.42987781199999997, length: 712, iterations: 7147"}
{"test_case": 377, "data": "MetropolisHasting 377: robots/8-4-3.pl, test_cost: 0, train_cost: 0, time: 0.36683141100000016, length: 664, iterations: 5175"}
{"test_case": 378, "data": "MetropolisHasting 378: robots/8-4-4.pl, test_cost: 0, train_cost: 0, time: 0.1070280970000006, length: 305, iterations: 3139"}
{"test_case": 379, "data": "MetropolisHasting 379: robots/8-4-5.pl, test_cost: 0, train_cost: 0, time: 0.02557154799999939, length: 102, iterations: 1646"}
{"test_case": 380, "data": "MetropolisHasting 380: robots/8-4-6.pl, test_cost: 0, train_cost: 0, time: 0.25351834700000003, length: 361, iterations: 5924"}
{"test_case": 381, "data": "MetropolisHasting 381: robots/8-4-7.pl, test_cost: 11, train_cost: 11, time: 60.001864555, length: 11421, iterations: 77506"}
{"test_case": 382, "data": "MetropolisHasting 382: robots/8-4-8.pl, test_cost: 0, train_cost: 0, time: 3.4456249050000025, length: 2560, iterations: 18751"}
{"test_case": 383, "data": "MetropolisHasting 383: robots/8-4-9.pl, test_cost: 0, train_cost: 0, time: 0.08581529499999618, length: 353, iterations: 2216"}
{"test_case": 384, "data": "MetropolisHasting 384: robots/8-4-10.pl, test_cost: 0, train_cost: 0, time: 0.17359148000000602, length: 532, iterations: 3504"}
{"test_case": 385, "data": "MetropolisHasting 385: robots/8-5-0.pl, test_cost: 0, train_cost: 0, time: 0.08462704799999443, length: 147, iterations: 4523"}
{"test_case": 386, "data": "MetropolisHasting 386: robots/8-5-1.pl, test_cost: 0, train_cost: 0, time: 1.2520224209999924, length: 1476, iterations: 12488"}
{"test_case": 387, "data": "MetropolisHasting 387: robots/8-5-2.pl, test_cost: 0, train_cost: 0, time: 0.014635124999998084, length: 92, iterations: 782"}
{"test_case": 388, "data": "MetropolisHasting 388: robots/8-5-3.pl, test_cost: 0, train_cost: 0, time: 0.006765233999999509, length: 69, iterations: 409"}
{"test_case": 389, "data": "MetropolisHasting 389: robots/8-5-4.pl, test_cost: 0, train_cost: 0, time: 0.015426202000000444, length: 117, iterations: 843"}
{"test_case": 390, "data": "MetropolisHasting 390: robots/8-5-5.pl, test_cost: 0, train_cost: 0, time: 0.0034014040000000002, length: 29, iterations: 259"}
{"test_case": 391, "data": "MetropolisHasting 391: robots/8-5-6.pl, test_cost: 0, train_cost: 0, time: 2.266800271, length: 71, iterations: 15263"}
{"test_case": 392, "data": "MetropolisHasting 392: robots/8-5-7.pl, test_cost: 0, train_cost: 0, time: 0.018105405999999657, length: 130, iterations: 788"}
{"test_case": 393, "data": "MetropolisHasting 393: robots/8-5-8.pl, test_cost: 0, train_cost: 0, time: 0.03295230000000027, length: 154, iterations: 1762"}
{"test_case": 394, "data": "MetropolisHasting 394: robots/8-5-9.pl, test_cost: 0, train_cost: 0, time: 0.052819068999999885, length: 57, iterations: 2549"}
{"test_case": 395, "data": "MetropolisHasting 395: robots/8-5-10.pl, test_cost: 0, train_cost: 0, time: 25.910789219, length: 7140, iterations: 49823"}
{"test_case": 396, "data": "MetropolisHasting 396: robots/8-6-0.pl, test_cost: 0, train_cost: 0, time: 1.0816503389999994, length: 1401, iterations: 10566"}
{"test_case": 397, "data": "MetropolisHasting 397: robots/8-6-1.pl, test_cost: 0, train_cost: 0, time: 0.22803767199999925, length: 620, iterations: 4057"}
{"test_case": 398, "data": "MetropolisHasting 398: robots/8-6-2.pl, test_cost: 0, train_cost: 0, time: 0.7967277089999989, length: 323, iterations: 15061"}
{"test_case": 399, "data": "MetropolisHasting 399: robots/8-6-3.pl, test_cost: 0, train_cost: 0, time: 0.37476551800000024, length: 663, iterations: 6479"}
{"test_case": 400, "data": "MetropolisHasting 400: robots/8-6-4.pl, test_cost: 0, train_cost: 0, time: 0.034555878, length: 147, iterations: 1392"}
{"test_case": 401, "data": "MetropolisHasting 401: robots/8-6-5.pl, test_cost: 0, train_cost: 0, time: 0.5638932019999999, length: 941, iterations: 6945"}
{"test_case": 402, "data": "MetropolisHasting 402: robots/8-6-6.pl, test_cost: 0, train_cost: 0, time: 2.859803728, length: 112, iterations: 21698"}
{"test_case": 403, "data": "MetropolisHasting 403: robots/8-6-7.pl, test_cost: 6, train_cost: 6, time: 60.001428287, length: 11409, iterations: 74371"}
{"test_case": 404, "data": "MetropolisHasting 404: robots/8-6-8.pl, test_cost: 6, train_cost: 6, time: 60.000001471000004, length: 11220, iterations: 78189"}
{"test_case": 405, "data": "MetropolisHasting 405: robots/8-6-9.pl, test_cost: 0, train_cost: 0, time: 0.017321096000003422, length: 98, iterations: 953"}
{"test_case": 406, "data": "MetropolisHasting 406: robots/8-6-10.pl, test_cost: 0, train_cost: 0, time: 0.02078365200000576, length: 143, iterations: 1066"}
{"test_case": 407, "data": "MetropolisHasting 407: robots/8-7-0.pl, test_cost: 0, train_cost: 0, time: 0.08530715500000952, length: 284, iterations: 2709"}
{"test_case": 408, "data": "MetropolisHasting 408: robots/8-7-1.pl, test_cost: 0, train_cost: 0, time: 0.08030612999999676, length: 270, iterations: 2412"}
{"test_case": 409, "data": "MetropolisHasting 409: robots/8-7-2.pl, test_cost: 0, train_cost: 0, time: 0.03314986799999531, length: 201, iterations: 1089"}
{"test_case": 410, "data": "MetropolisHasting 410: robots/8-7-3.pl, test_cost: 0, train_cost: 0, time: 0.131782513, length: 264, iterations: 5062"}
{"test_case": 411, "data": "MetropolisHasting 411: robots/8-7-4.pl, test_cost: 0, train_cost: 0, time: 2.500446959, length: 2495, iterations: 15012"}
{"test_case": 412, "data": "MetropolisHasting 412: robots/8-7-5.pl, test_cost: 0, train_cost: 0, time: 2.735224074, length: 1983, iterations: 17101"}
{"test_case": 413, "data": "MetropolisHasting 413: robots/8-7-6.pl, test_cost: 0, train_cost: 0, time: 0.08050202799999973, length: 411, iterations: 1864"}
{"test_case": 414, "data": "MetropolisHasting 414: robots/8-7-7.pl, test_cost: 0, train_cost: 0, time: 0.012750812999999361, length: 26, iterations: 1002"}
{"test_case": 415, "data": "MetropolisHasting 415: robots/8-7-8.pl, test_cost: 0, train_cost: 0, time: 13.380927284, length: 5316, iterations: 37696"}
{"test_case": 416, "data": "MetropolisHasting 416: robots/8-7-9.pl, test_cost: 0, train_cost: 0, time: 0.27820075800000055, length: 445, iterations: 5220"}
{"test_case": 417, "data": "MetropolisHasting 417: robots/8-7-10.pl, test_cost: 0, train_cost: 0, time: 0.5978600390000004, length: 145, iterations: 8781"}
{"test_case": 418, "data": "MetropolisHasting 418: robots/8-8-0.pl, test_cost: 0, train_cost: 0, time: 49.06764725, length: 9578, iterations: 68790"}
{"test_case": 419, "data": "MetropolisHasting 419: robots/8-8-1.pl, test_cost: 0, train_cost: 0, time: 0.03602550600000143, length: 158, iterations: 1482"}
{"test_case": 420, "data": "MetropolisHasting 420: robots/8-8-2.pl, test_cost: 0, train_cost: 0, time: 0.40961099100000004, length: 777, iterations: 6825"}
{"test_case": 421, "data": "MetropolisHasting 421: robots/8-8-3.pl, test_cost: 4, train_cost: 4, time: 60.0007746, length: 11481, iterations: 79775"}
{"test_case": 422, "data": "MetropolisHasting 422: robots/8-8-4.pl, test_cost: 0, train_cost: 0, time: 0.06670429700000113, length: 268, iterations: 2291"}
{"test_case": 423, "data": "MetropolisHasting 423: robots/8-8-5.pl, test_cost: 0, train_cost: 0, time: 0.05883027200000157, length: 179, iterations: 2265"}
{"test_case": 424, "data": "MetropolisHasting 424: robots/8-8-6.pl, test_cost: 0, train_cost: 0, time: 0.34252666799999787, length: 602, iterations: 6126"}
{"test_case": 425, "data": "MetropolisHasting 425: robots/8-8-7.pl, test_cost: 0, train_cost: 0, time: 0.6537965200000002, length: 930, iterations: 8129"}
{"test_case": 426, "data": "MetropolisHasting 426: robots/8-8-8.pl, test_cost: 0, train_cost: 0, time: 1.3055365329999944, length: 1586, iterations: 10132"}
{"test_case": 427, "data": "MetropolisHasting 427: robots/8-8-9.pl, test_cost: 0, train_cost: 0, time: 0.03161198099999751, length: 177, iterations: 1293"}
{"test_case": 428, "data": "MetropolisHasting 428: robots/8-8-10.pl, test_cost: 0, train_cost: 0, time: 0.040252559999998994, length: 112, iterations: 2307"}
{"test_case": 429, "data": "MetropolisHasting 429: robots/8-9-0.pl, test_cost: 0, train_cost: 0, time: 0.757619112999997, length: 1092, iterations: 9014"}
{"test_case": 430, "data": "MetropolisHasting 430: robots/8-9-1.pl, test_cost: 0, train_cost: 0, time: 0.02220878200000001, length: 145, iterations: 735"}
{"test_case": 431, "data": "MetropolisHasting 431: robots/8-9-2.pl, test_cost: 0, train_cost: 0, time: 0.09007645599999997, length: 318, iterations: 2528"}
{"test_case": 432, "data": "MetropolisHasting 432: robots/8-9-3.pl, test_cost: 0, train_cost: 0, time: 0.15766877499999998, length: 440, iterations: 3198"}
{"test_case": 433, "data": "MetropolisHasting 433: robots/8-9-4.pl, test_cost: 0, train_cost: 0, time: 0.010369832000000079, length: 88, iterations: 644"}
{"test_case": 434, "data": "MetropolisHasting 434: robots/8-9-5.pl, test_cost: 0, train_cost: 0, time: 0.006585559000000019, length: 82, iterations: 409"}
{"test_case": 435, "data": "MetropolisHasting 435: robots/8-9-6.pl, test_cost: 0, train_cost: 0, time: 0.7806741300000001, length: 342, iterations: 8994"}
{"test_case": 436, "data": "MetropolisHasting 436: robots/8-9-7.pl, test_cost: 0, train_cost: 0, time: 2.8785204260000006, length: 2359, iterations: 14948"}
{"test_case": 437, "data": "MetropolisHasting 437: robots/8-9-8.pl, test_cost: 0, train_cost: 0, time: 0.44853252700000024, length: 697, iterations: 7882"}
{"test_case": 438, "data": "MetropolisHasting 438: robots/8-9-9.pl, test_cost: 0, train_cost: 0, time: 37.049093350999996, length: 9343, iterations: 59384"}
{"test_case": 439, "data": "MetropolisHasting 439: robots/8-9-10.pl, test_cost: 0, train_cost: 0, time: 6.031857827000003, length: 3230, iterations: 25176"}
{"test_case": 440, "data": "MetropolisHasting 440: robots/10-0-0.pl, test_cost: 0, train_cost: 0, time: 0.034979747, length: 14, iterations: 2774"}
{"test_case": 441, "data": "MetropolisHasting 441: robots/10-0-1.pl, test_cost: 12, train_cost: 12, time: 60.001899895, length: 12319, iterations: 69065"}
{"test_case": 442, "data": "MetropolisHasting 442: robots/10-0-2.pl, test_cost: 0, train_cost: 0, time: 0.03564114100000637, length: 166, iterations: 1458"}
{"test_case": 443, "data": "MetropolisHasting 443: robots/10-0-3.pl, test_cost: 0, train_cost: 0, time: 0.11067296000000226, length: 345, iterations: 3976"}
{"test_case": 444, "data": "MetropolisHasting 444: robots/10-0-4.pl, test_cost: 0, train_cost: 0, time: 0.017724284000003365, length: 82, iterations: 898"}
{"test_case": 445, "data": "MetropolisHasting 445: robots/10-0-5.pl, test_cost: 0, train_cost: 0, time: 2.0099757730000007, length: 126, iterations: 11733"}
{"test_case": 446, "data": "MetropolisHasting 446: robots/10-0-6.pl, test_cost: 0, train_cost: 0, time: 0.3843823150000034, length: 881, iterations: 5627"}
{"test_case": 447, "data": "MetropolisHasting 447: robots/10-0-7.pl, test_cost: 0, train_cost: 0, time: 0.02852257199999997, length: 183, iterations: 1222"}
{"test_case": 448, "data": "MetropolisHasting 448: robots/10-0-8.pl, test_cost: 0, train_cost: 0, time: 6.367781664000006, length: 3531, iterations: 27839"}
{"test_case": 449, "data": "MetropolisHasting 449: robots/10-0-9.pl, test_cost: 9, train_cost: 9, time: 60.001122034000005, length: 12313, iterations: 71432"}
{"test_case": 450, "data": "MetropolisHasting 450: robots/10-0-10.pl, test_cost: 0, train_cost: 0, time: 1.959245749, length: 702, iterations: 14116"}
{"test_case": 451, "data": "MetropolisHasting 451: robots/10-1-0.pl, test_cost: 0, train_cost: 0, time: 1.0825123930000002, length: 416, iterations: 14599"}
{"test_case": 452, "data": "MetropolisHasting 452: robots/10-1-1.pl, test_cost: 0, train_cost: 0, time: 0.003928178000000226, length: 39, iterations: 228"}
{"test_case": 453, "data": "MetropolisHasting 453: robots/10-1-2.pl, test_cost: 0, train_cost: 0, time: 0.013488619999999951, length: 107, iterations: 779"}
{"test_case": 454, "data": "MetropolisHasting 454: robots/10-1-3.pl, test_cost: 0, train_cost: 0, time: 0.17952695399999996, length: 318, iterations: 4988"}
{"test_case": 455, "data": "MetropolisHasting 455: robots/10-1-4.pl, test_cost: 0, train_cost: 0, time: 0.08207075000000019, length: 183, iterations: 2870"}
{"test_case": 456, "data": "MetropolisHasting 456: robots/10-1-5.pl, test_cost: 0, train_cost: 0, time: 0.477943926, length: 584, iterations: 7869"}
{"test_case": 457, "data": "MetropolisHasting 457: robots/10-1-6.pl, test_cost: 0, train_cost: 0, time: 0.017153603999999767, length: 76, iterations: 878"}
{"test_case": 458, "data": "MetropolisHasting 458: robots/10-1-7.pl, test_cost: 0, train_cost: 0, time: 0.08384537500000011, length: 384, iterations: 2019"}
{"test_case": 459, "data": "MetropolisHasting 459: robots/10-1-8.pl, test_cost: 0, train_cost: 0, time: 0.03352326299999975, length: 67, iterations: 2052"}
{"test_case": 460, "data": "MetropolisHasting 460: robots/10-1-9.pl, test_cost: 0, train_cost: 0, time: 0.13817328999999998, length: 507, iterations: 2649"}
{"test_case": 461, "data": "MetropolisHasting 461: robots/10-1-10.pl, test_cost: 0, train_cost: 0, time: 0.04310024800000001, length: 236, iterations: 1766"}
{"test_case": 462, "data": "MetropolisHasting 462: robots/10-2-0.pl, test_cost: 0, train_cost: 0, time: 14.077620436, length: 4499, iterations: 47814"}
{"test_case": 463, "data": "MetropolisHasting 463: robots/10-2-1.pl, test_cost: 0, train_cost: 0, time: 0.08015771100000002, length: 229, iterations: 2447"}
{"test_case": 464, "data": "MetropolisHasting 464: robots/10-2-2.pl, test_cost: 0, train_cost: 0, time: 0.27934104799999915, length: 523, iterations: 6330"}
{"test_case": 465, "data": "MetropolisHasting 465: robots/10-2-3.pl, test_cost: 0, train_cost: 0, time: 0.0551562660000009, length: 212, iterations: 2446"}
{"test_case": 466, "data": "MetropolisHasting 466: robots/10-2-4.pl, test_cost: 0, train_cost: 0, time: 6.587244670999999, length: 3841, iterations: 24898"}
{"test_case": 467, "data": "MetropolisHasting 467: robots/10-2-5.pl, test_cost: 1, train_cost: 1, time: 60.001664511, length: 11662, iterations: 70675"}
{"test_case": 468, "data": "MetropolisHasting 468: robots/10-2-6.pl, test_cost: 9, train_cost: 9, time: 60.002197294, length: 12802, iterations: 62488"}
{"test_case": 469, "data": "MetropolisHasting 469: robots/10-2-7.pl, test_cost: 0, train_cost: 0, time: 0.022219626999998354, length: 116, iterations: 1103"}
{"test_case": 470, "data": "MetropolisHasting 470: robots/10-2-8.pl, test_cost: 0, train_cost: 0, time: 0.057589171, length: 339, iterations: 1582"}
{"test_case": 471, "data": "MetropolisHasting 471: robots/10-2-9.pl, test_cost: 0, train_cost: 0, time: 0.06925273900000001, length: 374, iterations: 1753"}
{"test_case": 472, "data": "MetropolisHasting 472: robots/10-2-10.pl, test_cost: 0, train_cost: 0, time: 0.03214136200000001, length: 200, iterations: 1540"}
{"test_case": 473, "data": "MetropolisHasting 473: robots/10-3-0.pl, test_cost: 0, train_cost: 0, time: 0.10384558299999999, length: 38, iterations: 6381"}
{"test_case": 474, "data": "MetropolisHasting 474: robots/10-3-1.pl, test_cost: 0, train_cost: 0, time: 8.272990988999998, length: 4200, iterations: 30284"}
{"test_case": 475, "data": "MetropolisHasting 475: robots/10-3-2.pl, test_cost: 0, train_cost: 0, time: 0.07967395500000052, length: 235, iterations: 2542"}
{"test_case": 476, "data": "MetropolisHasting 476: robots/10-3-3.pl, test_cost: 0, train_cost: 0, time: 0.7121447500000002, length: 1184, iterations: 7083"}
{"test_case": 477, "data": "MetropolisHasting 477: robots/10-3-4.pl, test_cost: 0, train_cost: 0, time: 0.08212113999999993, length: 216, iterations: 2561"}
{"test_case": 478, "data": "MetropolisHasting 478: robots/10-3-5.pl, test_cost: 0, train_cost: 0, time: 0.23319230000000069, length: 488, iterations: 5245"}
{"test_case": 479, "data": "MetropolisHasting 479: robots/10-3-6.pl, test_cost: 13, train_cost: 13, time: 60.000559607, length: 12463, iterations: 71100"}
{"test_case": 480, "data": "MetropolisHasting 480: robots/10-3-7.pl, test_cost: 0, train_cost: 0, time: 0.049095832, length: 169, iterations: 1549"}
{"test_case": 481, "data": "MetropolisHasting 481: robots/10-3-8.pl, test_cost: 0, train_cost: 0, time: 0.035130379, length: 159, iterations: 1382"}
{"test_case": 482, "data": "MetropolisHasting 482: robots/10-3-9.pl, test_cost: 0, train_cost: 0, time: 0.14269270799999997, length: 175, iterations: 5146"}
{"test_case": 483, "data": "MetropolisHasting 483: robots/10-3-10.pl, test_cost: 0, train_cost: 0, time: 1.8546647470000002, length: 1730, iterations: 14967"}
{"test_case": 484, "data": "MetropolisHasting 484: robots/10-4-0.pl, test_cost: 0, train_cost: 0, time: 0.03848099099999969, length: 172, iterations: 1511"}
{"test_case": 485, "data": "MetropolisHasting 485: robots/10-4-1.pl, test_cost: 0, train_cost: 0, time: 0.41827931399999985, length: 925, iterations: 5461"}
{"test_case": 486, "data": "MetropolisHasting 486: robots/10-4-2.pl, test_cost: 0, train_cost: 0, time: 0.009459554999999842, length: 103, iterations: 613"}
{"test_case": 487, "data": "MetropolisHasting 487: robots/10-4-3.pl, test_cost: 0, train_cost: 0, time: 0.19163829499999974, length: 239, iterations: 4881"}
{"test_case": 488, "data": "MetropolisHasting 488: robots/10-4-4.pl, test_cost: 0, train_cost: 0, time: 0.12946083200000036, length: 202, iterations: 4292"}
{"test_case": 489, "data": "MetropolisHasting 489: robots/10-4-5.pl, test_cost: 0, train_cost: 0, time: 0.21825096600000027, length: 606, iterations: 4235"}
{"test_case": 490, "data": "MetropolisHasting 490: robots/10-4-6.pl, test_cost: 0, train_cost: 0, time: 0.021039903000000002, length: 148, iterations: 775"}
{"test_case": 491, "data": "MetropolisHasting 491: robots/10-4-7.pl, test_cost: 0, train_cost: 0, time: 0.080319286, length: 263, iterations: 2263"}
{"test_case": 492, "data": "MetropolisHasting 492: robots/10-4-8.pl, test_cost: 0, train_cost: 0, time: 2.807297732, length: 1766, iterations: 20785"}
{"test_case": 493, "data": "MetropolisHasting 493: robots/10-4-9.pl, test_cost: 0, train_cost: 0, time: 16.337479831, length: 6083, iterations: 37899"}
{"test_case": 494, "data": "MetropolisHasting 494: robots/10-4-10.pl, test_cost: 0, train_cost: 0, time: 0.06591992199999908, length: 313, iterations: 1874"}
{"test_case": 495, "data": "MetropolisHasting 495: robots/10-5-0.pl, test_cost: 0, train_cost: 0, time: 0.08722786399999904, length: 237, iterations: 2692"}
{"test_case": 496, "data": "MetropolisHasting 496: robots/10-5-1.pl, test_cost: 0, train_cost: 0, time: 0.04019354500000105, length: 134, iterations: 2071"}
{"test_case": 497, "data": "MetropolisHasting 497: robots/10-5-2.pl, test_cost: 0, train_cost: 0, time: 1.2630076400000014, length: 1815, iterations: 9857"}
{"test_case": 498, "data": "MetropolisHasting 498: robots/10-5-3.pl, test_cost: 0, train_cost: 0, time: 1.3319327459999997, length: 94, iterations: 13216"}
{"test_case": 499, "data": "MetropolisHasting 499: robots/10-5-4.pl, test_cost: 0, train_cost: 0, time: 0.03253719900000007, length: 184, iterations: 1296"}
{"test_case": 500, "data": "MetropolisHasting 500: robots/10-5-5.pl, test_cost: 0, train_cost: 0, time: 0.349480182, length: 956, iterations: 4338"}
{"test_case": 501, "data": "MetropolisHasting 501: robots/10-5-6.pl, test_cost: 0, train_cost: 0, time: 0.40064015, length: 384, iterations: 7434"}
{"test_case": 502, "data": "MetropolisHasting 502: robots/10-5-7.pl, test_cost: 15, train_cost: 15, time: 60.000661112, length: 11060, iterations: 74585"}
{"test_case": 503, "data": "MetropolisHasting 503: robots/10-5-8.pl, test_cost: 0, train_cost: 0, time: 0.06456817499999801, length: 192, iterations: 2525"}
{"test_case": 504, "data": "MetropolisHasting 504: robots/10-5-9.pl, test_cost: 2, train_cost: 2, time: 60.000010079, length: 13154, iterations: 64748"}
{"test_case": 505, "data": "MetropolisHasting 505: robots/10-5-10.pl, test_cost: 0, train_cost: 0, time: 3.009512691000012, length: 2600, iterations: 17578"}
{"test_case": 506, "data": "MetropolisHasting 506: robots/10-6-0.pl, test_cost: 0, train_cost: 0, time: 0.14208987700000364, length: 477, iterations: 2824"}
{"test_case": 507, "data": "MetropolisHasting 507: robots/10-6-1.pl, test_cost: 0, train_cost: 0, time: 0.009231466999992222, length: 32, iterations: 832"}
{"test_case": 508, "data": "MetropolisHasting 508: robots/10-6-2.pl, test_cost: 0, train_cost: 0, time: 0.033022860999992076, length: 120, iterations: 2014"}
{"test_case": 509, "data": "MetropolisHasting 509: robots/10-6-3.pl, test_cost: 0, train_cost: 0, time: 0.022286378999993417, length: 179, iterations: 961"}
{"test_case": 510, "data": "MetropolisHasting 510: robots/10-6-4.pl, test_cost: 0, train_cost: 0, time: 5.067673119, length: 2867, iterations: 24839"}
{"test_case": 511, "data": "MetropolisHasting 511: robots/10-6-5.pl, test_cost: 0, train_cost: 0, time: 0.050787341000000374, length: 327, iterations: 1530"}
{"test_case": 512, "data": "MetropolisHasting 512: robots/10-6-6.pl, test_cost: 0, train_cost: 0, time: 2.9551740760000005, length: 2701, iterations: 15486"}
{"test_case": 513, "data": "MetropolisHasting 513: robots/10-6-7.pl, test_cost: 0, train_cost: 0, time: 0.043109971999999885, length: 168, iterations: 1550"}
{"test_case": 514, "data": "MetropolisHasting 514: robots/10-6-8.pl, test_cost: 0, train_cost: 0, time: 1.0440437399999993, length: 1301, iterations: 9125"}
{"test_case": 515, "data": "MetropolisHasting 515: robots/10-6-9.pl, test_cost: 0, train_cost: 0, time: 0.49022765100000143, length: 555, iterations: 9370"}
{"test_case": 516, "data": "MetropolisHasting 516: robots/10-6-10.pl, test_cost: 0, train_cost: 0, time: 0.10782529599999968, length: 305, iterations: 3125"}
{"test_case": 517, "data": "MetropolisHasting 517: robots/10-7-0.pl, test_cost: 0, train_cost: 0, time: 0.03000892399999877, length: 157, iterations: 1461"}
{"test_case": 518, "data": "MetropolisHasting 518: robots/10-7-1.pl, test_cost: 0, train_cost: 0, time: 0.03996756400000123, length: 84, iterations: 2470"}
{"test_case": 519, "data": "MetropolisHasting 519: robots/10-7-2.pl, test_cost: 0, train_cost: 0, time: 1.2344953019999991, length: 1672, iterations: 9281"}
{"test_case": 520, "data": "MetropolisHasting 520: robots/10-7-3.pl, test_cost: 0, train_cost: 0, time: 3.421907236, length: 1952, iterations: 20076"}
{"test_case": 521, "data": "MetropolisHasting 521: robots/10-7-4.pl, test_cost: 4, train_cost: 4, time: 60.000978605, length: 12222, iterations: 72390"}
{"test_case": 522, "data": "MetropolisHasting 522: robots/10-7-5.pl, test_cost: 0, train_cost: 0, time: 0.19879679900000014, length: 640, iterations: 3327"}
{"test_case": 523, "data": "MetropolisHasting 523: robots/10-7-6.pl, test_cost: 0, train_cost: 0, time: 0.2544116519999946, length: 482, iterations: 5018"}
{"test_case": 524, "data": "MetropolisHasting 524: robots/10-7-7.pl, test_cost: 0, train_cost: 0, time: 0.027074083000002247, length: 179, iterations: 1060"}
{"test_case": 525, "data": "MetropolisHasting 525: robots/10-7-8.pl, test_cost: 0, train_cost: 0, time: 0.013218638000005, length: 122, iterations: 597"}
{"test_case": 526, "data": "MetropolisHasting 526: robots/10-7-9.pl, test_cost: 0, train_cost: 0, time: 5.588017031999996, length: 3407, iterations: 24658"}
{"test_case": 527, "data": "MetropolisHasting 527: robots/10-7-10.pl, test_cost: 0, train_cost: 0, time: 10.261576841000007, length: 4824, iterations: 31398"}
{"test_case": 528, "data": "MetropolisHasting 528: robots/10-8-0.pl, test_cost: 0, train_cost: 0, time: 0.10200360199999636, length: 433, iterations: 2379"}
{"test_case": 529, "data": "MetropolisHasting 529: robots/10-8-1.pl, test_cost: 0, train_cost: 0, time: 0.04485614000000737, length: 203, iterations: 1741"}
{"test_case": 530, "data": "MetropolisHasting 530: robots/10-8-2.pl, test_cost: 0, train_cost: 0, time: 0.09012140199999999, length: 248, iterations: 3034"}
{"test_case": 531, "data": "MetropolisHasting 531: robots/10-8-3.pl, test_cost: 0, train_cost: 0, time: 0.014466297000000017, length: 130, iterations: 558"}
{"test_case": 532, "data": "MetropolisHasting 532: robots/10-8-4.pl, test_cost: 0, train_cost: 0, time: 0.09524843499999999, length: 271, iterations: 2896"}
{"test_case": 533, "data": "MetropolisHasting 533: robots/10-8-5.pl, test_cost: 0, train_cost: 0, time: 4.615846392, length: 3114, iterations: 18427"}
{"test_case": 534, "data": "MetropolisHasting 534: robots/10-8-6.pl, test_cost: 0, train_cost: 0, time: 0.1794597850000006, length: 444, iterations: 4079"}
{"test_case": 535, "data": "MetropolisHasting 535: robots/10-8-7.pl, test_cost: 0, train_cost: 0, time: 19.550907064, length: 6962, iterations: 41255"}
{"test_case": 536, "data": "MetropolisHasting 536: robots/10-8-8.pl, test_cost: 0, train_cost: 0, time: 1.7509009490000018, length: 2018, iterations: 12332"}
{"test_case": 537, "data": "MetropolisHasting 537: robots/10-8-9.pl, test_cost: 0, train_cost: 0, time: 0.08464034100000006, length: 337, iterations: 2383"}
{"test_case": 538, "data": "MetropolisHasting 538: robots/10-8-10.pl, test_cost: 0, train_cost: 0, time: 0.16086307599999827, length: 341, iterations: 4280"}
{"test_case": 539, "data": "MetropolisHasting 539: robots/10-9-0.pl, test_cost: 0, train_cost: 0, time: 0.20120854800000032, length: 405, iterations: 4612"}
{"test_case": 540, "data": "MetropolisHasting 540: robots/10-9-1.pl, test_cost: 10, train_cost: 10, time: 60.000094206, length: 11233, iterations: 73369"}
{"test_case": 541, "data": "MetropolisHasting 541: robots/10-9-2.pl, test_cost: 0, train_cost: 0, time: 0.02178726599999692, length: 146, iterations: 970"}
{"test_case": 542, "data": "MetropolisHasting 542: robots/10-9-3.pl, test_cost: 0, train_cost: 0, time: 0.47587138000000095, length: 557, iterations: 6962"}
{"test_case": 543, "data": "MetropolisHasting 543: robots/10-9-4.pl, test_cost: 0, train_cost: 0, time: 0.04001807999999585, length: 180, iterations: 1932"}
{"test_case": 544, "data": "MetropolisHasting 544: robots/10-9-5.pl, test_cost: 0, train_cost: 0, time: 0.19786947100000418, length: 578, iterations: 3686"}
{"test_case": 545, "data": "MetropolisHasting 545: robots/10-9-6.pl, test_cost: 0, train_cost: 0, time: 0.2665883270000009, length: 571, iterations: 5514"}
{"test_case": 546, "data": "MetropolisHasting 546: robots/10-9-7.pl, test_cost: 0, train_cost: 0, time: 0.01108014399999746, length: 104, iterations: 601"}
{"test_case": 547, "data": "MetropolisHasting 547: robots/10-9-8.pl, test_cost: 0, train_cost: 0, time: 0.007207022000002894, length: 87, iterations: 394"}
{"test_case": 548, "data": "MetropolisHasting 548: robots/10-9-9.pl, test_cost: 0, train_cost: 0, time: 1.9038178680000044, length: 1540, iterations: 16409"}
{"test_case": 549, "data": "MetropolisHasting 549: robots/10-9-10.pl, test_cost: 0, train_cost: 0, time: 7.42099636999999, length: 4104, iterations: 24778"}
{"domain": "robot", "params": {"type": "metropolis", "alpha": 1, "add_token_end": 0, "add_token_random": 30, "remove_token_end": 0, "remove_token_random": 30, "add_loop_end": 0, "add_loop_random": 30, "add_if_statement_end": 0, "add_if_statement_random": 30, "start_over": 8}, "files": "([2, 4, 6, 8, 10], range(0, 10), range(0, 11))", "cases_solved": "534 / 550 (97.1%)", "average": {"test_cost": 0.22727272727272727, "train_cost": 0.22727272727272727, "execution_time": 2.4882891046727256, "program_length": 794.5872727272721, "number_of_explored_programs": 6542.096363636367, "number_of_iterations": 6542.096363636367}, "average_correct": {"test_cost": 0.0, "train_cost": 0.0, "execution_time": 0.7650608317209739, "program_length": 468.5018726591759, "number_of_explored_programs": 4528.567415730336, "number_of_iterations": 4528.567415730336}, "average_failed": {"test_cost": 7.8125, "train_cost": 7.8125, "execution_time": 60.0010327144375, "program_length": 11677.6875, "number_of_explored_programs": 73743.625, "number_of_iterations": 73743.625}, "variance": {"test_cost": 2.1686537506209644, "train_cost": 2.1686537506209644, "execution_time": 110.64360865798704, "program_length": 4656792.042460673, "number_of_explored_programs": 197761089.24934924, "number_of_iterations": 197761089.24934924}, "variance_correct": {"test_cost": 0.0, "train_cost": 0.0, "execution_time": 11.696376983192652, "program_length": 1117366.4605968618, "number_of_explored_programs": 63194838.77124397, "number_of_iterations": 63194838.77124397}, "variance_failed": {"test_cost": 16.1625, "train_cost": 16.1625, "execution_time": 4.892426987338221e-07, "program_length": 611430.4958333333, "number_of_explored_programs": 31084409.583333332, "number_of_iterations": 31084409.583333332}, "best_results": {"file": "robots/10-9-10.pl", "test_cost": 0, "train_cost": 0, "execution_time": 7.42099636999999, "program_length": 4104, "number_of_explored_programs": 24778, "program": "Program([MoveUp, If(AtRight [Grab] [MoveLeft]), LoopWhile(AtBottom [Grab]), LoopWhile(NotAtTop [MoveLeft]), LoopWhile(AtRight [Drop]), MoveRight, LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [Grab]), If(NotAtTop [MoveLeft] [MoveRight]), If(NotAtTop [Drop] [MoveDown]), LoopWhile(AtLeft [MoveUp]), MoveDown, If(AtLeft [Grab] [MoveLeft]), LoopWhile(AtBottom [MoveUp]), MoveUp, LoopWhile(AtLeft [MoveLeft]), If(NotAtTop [MoveRight] [MoveDown]), LoopWhile(AtBottom [MoveUp]), MoveLeft, If(NotAtBottom [MoveRight] [MoveLeft]), MoveLeft, MoveLeft, MoveDown, If(AtBottom [Grab] [MoveLeft]), LoopWhile(AtTop [Drop]), MoveUp, LoopWhile(AtRight [MoveDown]), MoveDown, LoopWhile(AtLeft [MoveUp]), If(AtTop [Grab] [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtTop [MoveUp]), MoveLeft, If(NotAtBottom [MoveRight] [MoveLeft]), LoopWhile(AtTop [Drop]), MoveDown, LoopWhile(AtBottom [MoveDown]), If(NotAtRight [MoveUp] [MoveRight]), If(AtLeft [Grab] [MoveDown]), If(AtRight [MoveLeft] [MoveLeft]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [Drop]), If(NotAtTop [MoveLeft] [Drop]), If(AtBottom [MoveUp] [MoveLeft]), LoopWhile(AtTop [MoveUp]), If(AtRight [MoveRight] [MoveRight]), LoopWhile(AtRight [MoveLeft]), MoveRight, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtTop [MoveDown]), MoveRight, LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [Drop]), If(AtTop [MoveRight] [MoveUp]), MoveRight, MoveUp, LoopWhile(AtTop [Grab]), If(AtTop [MoveRight] [MoveDown]), MoveLeft, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [Drop]), MoveUp, If(AtTop [Grab] [MoveRight]), If(AtTop [MoveDown] [MoveLeft]), If(NotAtLeft [MoveRight] [Grab]), LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [MoveLeft]), MoveDown, MoveRight, LoopWhile(AtLeft [MoveRight]), If(AtBottom [MoveUp] [MoveUp]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveRight]), MoveLeft, MoveLeft, LoopWhile(AtTop [MoveLeft]), If(NotAtRight [MoveUp] [MoveLeft]), If(AtTop [MoveLeft] [MoveUp]), MoveLeft, MoveRight, MoveDown, LoopWhile(AtLeft [MoveLeft]), MoveRight, MoveRight, LoopWhile(AtTop [Grab]), MoveRight, MoveLeft, If(NotAtTop [MoveRight] [Grab]), If(AtTop [Drop] [MoveLeft]), LoopWhile(AtTop [Drop]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtTop [Grab]), If(NotAtBottom [MoveDown] [MoveDown]), If(AtBottom [MoveUp] [MoveRight]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [MoveLeft]), MoveRight, MoveLeft, MoveLeft, MoveDown, If(NotAtLeft [MoveUp] [MoveRight]), LoopWhile(AtTop [MoveLeft]), MoveDown, If(NotAtRight [MoveLeft] [MoveDown]), LoopWhile(AtTop [Grab]), MoveDown, MoveLeft, If(AtRight [MoveDown] [MoveUp]), LoopWhile(AtBottom [MoveDown]), MoveRight, MoveUp, LoopWhile(AtRight [MoveRight]), MoveUp, If(NotAtRight [MoveRight] [MoveLeft]), MoveDown, MoveDown, MoveLeft, LoopWhile(AtRight [MoveDown]), MoveLeft, MoveDown, MoveRight, LoopWhile(AtLeft [Drop]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtLeft [MoveUp]), MoveLeft, If(NotAtRight [MoveRight] [Grab]), LoopWhile(AtRight [MoveLeft]), If(AtTop [Drop] [MoveLeft]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtLeft [Drop]), MoveLeft, If(NotAtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), MoveRight, LoopWhile(AtBottom [MoveLeft]), If(AtLeft [MoveRight] [MoveRight]), If(NotAtLeft [MoveLeft] [MoveLeft]), MoveUp, If(NotAtBottom [MoveDown] [MoveDown]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [MoveLeft]), MoveRight, MoveRight, If(AtTop [Grab] [MoveRight]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [MoveDown]), MoveRight, MoveDown, MoveDown, LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [Grab]), MoveLeft, LoopWhile(AtRight [MoveRight]), LoopWhile(AtBottom [MoveDown]), If(NotAtLeft [MoveLeft] [MoveLeft]), MoveUp, MoveDown, LoopWhile(AtBottom [MoveDown]), MoveRight, MoveLeft, MoveRight, If(NotAtBottom [MoveRight] [MoveLeft]), If(AtBottom [MoveRight] [MoveUp]), MoveDown, If(NotAtTop [MoveLeft] [MoveDown]), If(NotAtTop [MoveLeft] [MoveRight]), If(NotAtBottom [MoveDown] [Drop]), If(NotAtBottom [MoveLeft] [MoveRight]), MoveRight, LoopWhile(AtTop [Grab]), LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [Drop]), MoveLeft, MoveRight, MoveLeft, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [MoveRight]), MoveUp, MoveLeft, LoopWhile(AtLeft [MoveLeft]), MoveRight, If(NotAtRight [MoveDown] [MoveRight]), If(AtTop [MoveLeft] [MoveUp]), MoveDown, LoopWhile(AtBottom [MoveDown]), MoveUp, MoveUp, If(AtLeft [Grab] [MoveRight]), If(AtLeft [MoveUp] [MoveLeft]), MoveLeft, If(NotAtBottom [MoveUp] [MoveDown]), LoopWhile(AtRight [MoveLeft]), MoveLeft, LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [MoveLeft]), If(NotAtTop [MoveRight] [MoveDown]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [MoveRight]), MoveRight, If(NotAtLeft [MoveDown] [MoveRight]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [Grab]), LoopWhile(AtTop [MoveRight]), MoveDown, LoopWhile(AtLeft [MoveDown]), If(NotAtTop [MoveRight] [MoveUp]), MoveDown, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveUp]), If(AtBottom [Drop] [MoveDown]), LoopWhile(AtLeft [MoveDown]), If(AtLeft [MoveRight] [MoveUp]), MoveRight, If(AtLeft [MoveDown] [MoveLeft]), If(AtTop [MoveDown] [MoveLeft]), MoveRight, LoopWhile(AtTop [MoveRight]), MoveLeft, If(NotAtTop [MoveRight] [Grab]), If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtBottom [MoveLeft]), MoveDown, If(AtRight [MoveUp] [MoveRight]), If(AtBottom [MoveLeft] [MoveUp]), MoveUp, LoopWhile(AtBottom [MoveUp]), LoopWhile(AtTop [MoveUp]), If(NotAtBottom [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtLeft [MoveLeft]), MoveRight, LoopWhile(AtLeft [MoveUp]), LoopWhile(AtBottom [Drop]), If(NotAtLeft [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveUp]), MoveDown, LoopWhile(AtLeft [MoveUp]), If(AtBottom [MoveRight] [MoveUp]), MoveLeft, MoveLeft, LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [Drop]), If(AtTop [MoveUp] [MoveLeft]), MoveUp, If(AtRight [Drop] [MoveLeft]), MoveDown, LoopWhile(AtBottom [MoveRight]), MoveUp, If(AtLeft [MoveLeft] [MoveRight]), If(NotAtLeft [MoveUp] [Grab]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtLeft [Drop]), If(NotAtBottom [MoveUp] [MoveRight]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [Drop]), LoopWhile(AtBottom [Drop]), If(NotAtRight [MoveRight] [MoveUp]), If(AtLeft [MoveLeft] [MoveLeft]), MoveLeft, If(NotAtTop [MoveDown] [MoveLeft]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtBottom [MoveLeft]), MoveRight, LoopWhile(AtBottom [MoveLeft]), MoveRight, LoopWhile(AtBottom [MoveLeft]), MoveLeft, LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [MoveDown]), MoveDown, MoveLeft, If(AtTop [MoveLeft] [MoveRight]), MoveRight, MoveLeft, MoveRight, LoopWhile(AtBottom [MoveDown]), If(NotAtRight [MoveRight] [MoveLeft]), If(AtLeft [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveDown]), If(NotAtTop [MoveDown] [MoveRight]), MoveUp, If(NotAtTop [MoveRight] [MoveLeft]), LoopWhile(AtLeft [Drop]), MoveDown, If(NotAtTop [MoveDown] [Grab]), If(AtRight [MoveLeft] [Drop]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [Drop]), MoveRight, MoveUp, LoopWhile(AtBottom [MoveUp]), MoveLeft, MoveDown, If(AtLeft [Drop] [MoveLeft]), LoopWhile(AtRight [MoveRight]), MoveRight, If(NotAtTop [MoveLeft] [Grab]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveLeft, LoopWhile(AtTop [MoveLeft]), If(NotAtTop [MoveLeft] [MoveDown]), If(NotAtLeft [MoveDown] [Grab]), If(NotAtRight [MoveLeft] [MoveRight]), MoveLeft, If(NotAtLeft [MoveUp] [MoveRight]), LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [Drop]), If(NotAtRight [MoveUp] [Grab]), If(NotAtRight [MoveDown] [MoveUp]), If(NotAtTop [MoveLeft] [Drop]), If(NotAtTop [MoveUp] [MoveUp]), If(AtBottom [MoveLeft] [MoveRight]), If(AtRight [MoveUp] [MoveLeft]), If(AtBottom [Grab] [MoveDown]), LoopWhile(AtRight [MoveDown]), MoveUp, If(AtRight [MoveRight] [MoveDown]), LoopWhile(AtTop [Drop]), If(NotAtRight [MoveRight] [MoveDown]), MoveUp, If(NotAtBottom [MoveRight] [Grab]), If(AtBottom [MoveLeft] [MoveLeft]), MoveRight, If(NotAtLeft [MoveUp] [MoveUp]), If(NotAtRight [MoveLeft] [MoveRight]), LoopWhile(AtBottom [Grab]), MoveDown, MoveRight, If(AtLeft [Grab] [MoveUp]), If(AtTop [MoveLeft] [MoveLeft]), LoopWhile(AtRight [MoveUp]), If(AtRight [MoveLeft] [MoveUp]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [Grab]), If(NotAtTop [MoveRight] [MoveUp]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [Drop]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtTop [Grab]), If(AtRight [Grab] [MoveUp]), If(AtBottom [Grab] [MoveDown]), LoopWhile(AtLeft [MoveRight]), MoveRight, LoopWhile(AtTop [MoveLeft]), If(NotAtRight [MoveDown] [Drop]), LoopWhile(AtLeft [MoveRight]), MoveLeft, MoveLeft, If(AtBottom [MoveRight] [MoveRight]), MoveRight, If(NotAtRight [MoveDown] [MoveRight]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [MoveUp]), If(NotAtRight [MoveRight] [MoveDown]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), MoveUp, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [Grab]), If(NotAtTop [MoveLeft] [MoveDown]), If(AtBottom [Drop] [MoveUp]), MoveLeft, If(NotAtRight [MoveUp] [MoveRight]), MoveLeft, LoopWhile(AtRight [MoveRight]), If(NotAtLeft [MoveDown] [Grab]), If(NotAtTop [MoveLeft] [MoveDown]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [MoveRight]), If(NotAtLeft [MoveRight] [MoveRight]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [MoveRight]), If(NotAtTop [MoveDown] [Drop]), If(AtRight [Drop] [MoveLeft]), If(NotAtRight [MoveDown] [MoveLeft]), If(NotAtRight [MoveRight] [Drop]), If(AtBottom [MoveUp] [MoveRight]), MoveRight, MoveLeft, LoopWhile(AtBottom [MoveDown]), If(NotAtLeft [MoveLeft] [MoveDown]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [Grab]), MoveLeft, If(AtBottom [MoveRight] [MoveUp]), LoopWhile(AtRight [MoveLeft]), If(NotAtTop [MoveLeft] [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [Grab]), LoopWhile(AtRight [MoveLeft]), MoveDown, MoveDown, LoopWhile(AtBottom [MoveDown]), MoveUp, MoveDown, LoopWhile(AtLeft [MoveLeft]), If(NotAtTop [MoveUp] [Grab]), MoveLeft, LoopWhile(NotAtLeft [MoveUp]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [Drop]), If(AtBottom [Grab] [MoveRight]), MoveRight, LoopWhile(AtBottom [MoveLeft]), If(NotAtRight [MoveDown] [MoveDown]), LoopWhile(AtRight [Drop]), If(AtLeft [MoveLeft] [MoveRight]), If(AtBottom [MoveLeft] [MoveLeft]), If(NotAtTop [MoveUp] [MoveDown]), If(NotAtBottom [MoveRight] [MoveRight]), LoopWhile(AtTop [MoveDown]), If(AtRight [MoveDown] [MoveRight]), If(AtBottom [MoveLeft] [MoveLeft]), LoopWhile(AtRight [MoveDown]), MoveLeft, If(AtTop [Drop] [MoveRight]), MoveRight, LoopWhile(AtBottom [MoveDown]), If(AtBottom [MoveUp] [MoveRight]), LoopWhile(AtBottom [MoveUp]), MoveUp, If(NotAtRight [MoveLeft] [MoveLeft]), If(NotAtLeft [MoveUp] [MoveUp]), If(AtTop [MoveLeft] [MoveRight]), MoveRight, MoveRight, LoopWhile(AtLeft [Drop]), If(AtBottom [MoveUp] [MoveRight]), If(AtBottom [MoveUp] [MoveLeft]), LoopWhile(AtBottom [MoveDown]), MoveDown, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [Drop]), MoveDown, If(NotAtTop [MoveLeft] [Grab]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtLeft [MoveRight]), MoveLeft, MoveLeft, If(NotAtTop [MoveUp] [MoveRight]), LoopWhile(AtBottom [Drop]), MoveDown, LoopWhile(AtLeft [MoveDown]), If(NotAtTop [MoveRight] [Drop]), If(AtTop [Drop] [MoveLeft]), LoopWhile(AtLeft [Drop]), LoopWhile(AtTop [Grab]), MoveLeft, If(NotAtRight [MoveRight] [MoveDown]), LoopWhile(AtLeft [Grab]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [MoveLeft]), If(NotAtBottom [MoveLeft] [MoveUp]), LoopWhile(AtLeft [Drop]), MoveDown, LoopWhile(AtRight [Drop]), If(NotAtRight [MoveRight] [MoveLeft]), If(NotAtRight [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveRight]), If(NotAtBottom [MoveUp] [MoveUp]), LoopWhile(NotAtLeft [MoveLeft]), MoveRight, MoveRight, If(AtLeft [MoveLeft] [MoveRight]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(NotAtLeft [MoveLeft]), LoopWhile(AtBottom [MoveRight]), MoveUp, LoopWhile(NotAtLeft [MoveRight]), LoopWhile(AtTop [MoveUp]), MoveRight, If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtLeft [Grab]), If(AtLeft [Grab] [MoveUp]), If(AtLeft [Grab] [MoveRight]), LoopWhile(AtLeft [Grab]), If(NotAtRight [MoveLeft] [MoveUp]), LoopWhile(AtBottom [Drop]), MoveRight, If(AtBottom [Grab] [MoveUp]), LoopWhile(AtTop [MoveDown]), MoveRight, MoveUp, MoveLeft, MoveUp, If(AtLeft [Grab] [MoveDown]), LoopWhile(AtTop [Grab]), MoveLeft, MoveLeft, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [MoveDown]), MoveLeft, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [MoveLeft]), If(AtRight [Grab] [MoveRight]), MoveDown, LoopWhile(AtRight [MoveLeft]), MoveRight, If(AtLeft [Grab] [MoveUp]), MoveRight, If(AtTop [MoveDown] [MoveLeft]), MoveDown, LoopWhile(AtLeft [MoveDown]), MoveLeft, MoveDown, LoopWhile(AtBottom [Drop]), MoveLeft, MoveDown, If(NotAtRight [MoveRight] [MoveRight]), If(NotAtTop [MoveRight] [MoveDown]), LoopWhile(AtTop [Drop]), LoopWhile(AtTop [Grab]), If(NotAtRight [MoveDown] [Grab]), LoopWhile(AtBottom [MoveUp]), MoveRight, If(AtRight [Drop] [MoveLeft]), LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [MoveRight]), If(AtRight [MoveLeft] [MoveLeft]), MoveRight, If(AtLeft [MoveUp] [MoveRight]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [Grab]), MoveLeft, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveDown]), MoveRight, LoopWhile(AtRight [MoveDown]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveLeft]), If(NotAtLeft [MoveLeft] [MoveUp]), MoveRight, LoopWhile(AtLeft [MoveDown]), MoveUp, LoopWhile(AtTop [MoveRight]), MoveUp, If(NotAtLeft [MoveUp] [Grab]), MoveDown, MoveDown, LoopWhile(AtLeft [MoveLeft]), If(AtBottom [MoveUp] [MoveRight]), MoveRight, MoveUp, LoopWhile(AtTop [Grab]), MoveRight, MoveLeft, LoopWhile(AtLeft [MoveUp]), MoveDown, MoveRight, MoveRight, LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [MoveLeft]), MoveUp, LoopWhile(AtTop [Drop]), MoveLeft, LoopWhile(AtRight [Grab]), If(NotAtBottom [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtTop [MoveLeft]), If(NotAtBottom [MoveLeft] [Grab]), If(NotAtLeft [MoveUp] [Drop]), If(NotAtTop [MoveUp] [MoveLeft]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [MoveRight]), MoveLeft, LoopWhile(AtBottom [MoveDown]), MoveDown, If(AtBottom [Grab] [MoveRight]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [Grab]), If(AtBottom [MoveRight] [MoveLeft]), LoopWhile(AtTop [MoveDown]), MoveRight, MoveLeft, LoopWhile(AtTop [Grab]), If(AtLeft [MoveUp] [MoveRight]), If(AtLeft [MoveRight] [MoveRight]), MoveUp, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), If(AtBottom [MoveLeft] [MoveDown]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [MoveDown]), MoveRight, MoveDown, LoopWhile(NotAtRight [MoveRight]), MoveUp, MoveDown, LoopWhile(AtBottom [Grab]), LoopWhile(NotAtRight [Grab]), LoopWhile(AtBottom [MoveUp]), MoveUp, MoveLeft, LoopWhile(AtTop [MoveRight]), If(NotAtLeft [MoveDown] [MoveRight]), MoveDown, LoopWhile(AtTop [MoveRight]), LoopWhile(AtLeft [Drop]), MoveLeft, If(AtBottom [Drop] [MoveDown]), MoveLeft, If(NotAtLeft [MoveRight] [MoveLeft]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [Grab]), If(NotAtRight [MoveLeft] [MoveUp]), LoopWhile(AtBottom [MoveDown]), If(NotAtBottom [MoveDown] [MoveLeft]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtRight [MoveRight]), MoveDown, If(NotAtTop [MoveLeft] [MoveDown]), MoveLeft, If(NotAtRight [MoveRight] [MoveRight]), If(AtBottom [Grab] [MoveUp]), LoopWhile(AtRight [MoveLeft]), If(NotAtTop [MoveUp] [MoveDown]), If(AtLeft [MoveLeft] [MoveRight]), LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [Drop]), If(AtRight [MoveUp] [MoveRight]), MoveLeft, If(NotAtLeft [MoveDown] [MoveDown]), MoveDown, LoopWhile(AtBottom [MoveLeft]), If(NotAtRight [MoveRight] [MoveUp]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtRight [Grab]), MoveLeft, LoopWhile(AtBottom [Drop]), If(AtRight [MoveDown] [MoveRight]), MoveRight, MoveUp, MoveLeft, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [MoveUp]), MoveLeft, MoveDown, If(NotAtTop [MoveUp] [MoveRight]), If(AtRight [MoveLeft] [MoveLeft]), MoveLeft, MoveRight, MoveUp, LoopWhile(AtBottom [Drop]), LoopWhile(AtTop [Drop]), If(AtRight [Drop] [MoveUp]), If(NotAtBottom [MoveUp] [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtRight [MoveDown]), MoveDown, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveDown]), MoveUp, LoopWhile(AtLeft [MoveDown]), MoveDown, If(NotAtRight [MoveRight] [Grab]), LoopWhile(AtBottom [MoveRight]), MoveLeft, If(AtLeft [Grab] [MoveUp]), LoopWhile(AtLeft [MoveDown]), MoveDown, MoveUp, MoveUp, LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtBottom [MoveDown]), MoveRight, MoveRight, LoopWhile(AtTop [Grab]), MoveDown, LoopWhile(AtTop [Grab]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [MoveLeft]), MoveUp, LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [MoveRight]), MoveRight, LoopWhile(AtRight [Grab]), If(AtRight [Grab] [MoveRight]), LoopWhile(AtRight [MoveLeft]), If(NotAtTop [MoveDown] [Drop]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [Grab]), MoveDown, MoveRight, If(AtRight [MoveDown] [MoveDown]), If(AtLeft [MoveLeft] [MoveDown]), MoveLeft, LoopWhile(AtRight [Grab]), MoveDown, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [Drop]), If(AtBottom [MoveUp] [MoveLeft]), If(AtTop [MoveRight] [MoveUp]), If(NotAtBottom [MoveUp] [MoveUp]), MoveUp, LoopWhile(AtBottom [MoveDown]), MoveLeft, If(AtBottom [MoveLeft] [MoveUp]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [MoveLeft]), MoveLeft, LoopWhile(AtBottom [MoveRight]), MoveRight, LoopWhile(AtBottom [Drop]), MoveUp, LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [Grab]), MoveDown, LoopWhile(AtTop [Grab]), MoveRight, MoveDown, If(AtLeft [MoveRight] [MoveDown]), If(NotAtLeft [MoveLeft] [Drop]), MoveRight, LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [MoveLeft]), MoveUp, If(AtTop [MoveDown] [MoveRight]), LoopWhile(AtBottom [Grab]), If(AtBottom [Grab] [MoveUp]), MoveUp, If(AtTop [MoveLeft] [MoveRight]), LoopWhile(NotAtRight [MoveUp]), If(NotAtBottom [MoveLeft] [MoveDown]), LoopWhile(AtTop [MoveRight]), If(AtBottom [MoveDown] [MoveDown]), MoveDown, LoopWhile(AtTop [Drop]), LoopWhile(AtTop [MoveUp]), MoveDown, MoveDown, LoopWhile(AtBottom [MoveDown]), If(NotAtBottom [MoveUp] [MoveRight]), MoveDown, LoopWhile(AtTop [MoveUp]), MoveLeft, LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [MoveRight]), If(NotAtTop [MoveUp] [MoveUp]), LoopWhile(AtTop [MoveLeft]), If(NotAtLeft [MoveUp] [Drop]), If(AtTop [MoveLeft] [MoveDown]), LoopWhile(AtRight [Drop]), MoveUp, LoopWhile(AtBottom [MoveLeft]), MoveUp, If(NotAtRight [MoveDown] [MoveDown]), MoveUp, If(NotAtBottom [MoveUp] [MoveLeft]), LoopWhile(AtBottom [Grab]), MoveLeft, LoopWhile(AtTop [MoveRight]), MoveDown, LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveLeft]), MoveLeft, LoopWhile(AtLeft [MoveDown]), If(AtBottom [MoveDown] [MoveUp]), LoopWhile(AtRight [MoveUp]), If(AtTop [Grab] [MoveRight]), MoveDown, LoopWhile(AtTop [MoveDown]), MoveUp, MoveRight, LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [Drop]), MoveLeft, MoveUp, LoopWhile(AtBottom [MoveDown]), MoveUp, If(NotAtBottom [MoveLeft] [Drop]), MoveLeft, If(AtTop [MoveLeft] [MoveLeft]), If(AtTop [Grab] [MoveDown]), If(NotAtTop [MoveDown] [MoveRight]), MoveDown, LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [Grab]), MoveLeft, LoopWhile(AtLeft [Drop]), MoveDown, If(NotAtBottom [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [Drop]), LoopWhile(AtBottom [Grab]), If(AtLeft [MoveUp] [MoveDown]), If(AtLeft [Grab] [MoveUp]), If(AtTop [MoveRight] [MoveUp]), If(NotAtBottom [MoveRight] [MoveDown]), MoveLeft, If(NotAtBottom [MoveRight] [Grab]), LoopWhile(AtTop [Grab]), MoveUp, If(NotAtBottom [MoveUp] [Grab]), If(NotAtBottom [MoveLeft] [Drop]), MoveLeft, LoopWhile(AtRight [MoveLeft]), MoveDown, LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [MoveRight]), LoopWhile(NotAtLeft [MoveDown]), If(NotAtTop [MoveDown] [MoveDown]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtBottom [Grab]), MoveUp, If(NotAtTop [MoveRight] [MoveLeft]), If(AtRight [MoveLeft] [MoveDown]), MoveLeft, MoveDown, If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtBottom [Grab]), If(AtTop [MoveUp] [MoveDown]), MoveUp, MoveRight, If(NotAtLeft [MoveDown] [MoveLeft]), LoopWhile(AtLeft [Grab]), If(NotAtRight [MoveDown] [MoveDown]), If(NotAtLeft [MoveRight] [MoveDown]), MoveRight, If(NotAtLeft [MoveLeft] [Grab]), MoveRight, LoopWhile(AtLeft [MoveLeft]), MoveUp, MoveRight, MoveLeft, MoveRight, MoveDown, MoveLeft, LoopWhile(AtTop [MoveUp]), MoveLeft, MoveRight, LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [Drop]), If(AtRight [MoveLeft] [MoveDown]), LoopWhile(AtLeft [MoveRight]), If(AtTop [MoveRight] [MoveUp]), If(AtRight [Grab] [MoveLeft]), MoveUp, MoveUp, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [MoveRight]), If(AtRight [Grab] [MoveLeft]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [Grab]), MoveLeft, MoveRight, If(NotAtLeft [MoveRight] [MoveDown]), LoopWhile(AtBottom [MoveLeft]), If(AtBottom [Drop] [MoveRight]), LoopWhile(AtLeft [Drop]), MoveRight, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [MoveUp]), MoveLeft, If(AtRight [MoveUp] [MoveRight]), MoveDown, If(NotAtLeft [MoveDown] [MoveLeft]), MoveRight, MoveDown, If(NotAtRight [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveLeft]), If(NotAtBottom [MoveRight] [MoveLeft]), LoopWhile(AtBottom [MoveUp]), MoveUp, If(AtRight [MoveDown] [MoveDown]), If(AtRight [MoveUp] [MoveRight]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [MoveUp]), If(AtRight [MoveLeft] [MoveRight]), MoveUp, If(NotAtBottom [MoveDown] [MoveRight]), If(AtLeft [Drop] [MoveUp]), MoveLeft, MoveUp, MoveDown, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtLeft [MoveUp]), If(NotAtBottom [MoveUp] [Drop]), If(AtLeft [MoveLeft] [MoveLeft]), MoveDown, LoopWhile(AtRight [MoveLeft]), If(AtBottom [MoveLeft] [MoveLeft]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [MoveLeft]), If(NotAtRight [MoveDown] [MoveDown]), LoopWhile(AtTop [MoveDown]), If(NotAtBottom [MoveDown] [MoveDown]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [MoveRight]), MoveDown, MoveUp, MoveUp, If(NotAtBottom [MoveUp] [MoveRight]), LoopWhile(AtTop [MoveRight]), If(NotAtBottom [MoveRight] [Grab]), LoopWhile(AtBottom [Drop]), MoveUp, If(NotAtBottom [MoveDown] [Grab]), If(AtTop [Grab] [MoveDown]), MoveDown, LoopWhile(AtTop [MoveRight]), MoveDown, LoopWhile(AtTop [Drop]), LoopWhile(AtLeft [MoveRight]), If(NotAtLeft [MoveUp] [MoveRight]), If(NotAtLeft [MoveDown] [MoveDown]), MoveUp, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtTop [MoveLeft]), If(NotAtBottom [MoveUp] [Grab]), If(AtRight [MoveRight] [MoveRight]), If(AtTop [MoveDown] [MoveLeft]), MoveUp, MoveUp, If(NotAtTop [MoveDown] [MoveRight]), If(NotAtLeft [MoveUp] [MoveRight]), If(NotAtBottom [MoveDown] [Grab]), MoveLeft, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [MoveDown]), MoveDown, LoopWhile(AtRight [MoveDown]), MoveRight, LoopWhile(AtLeft [Grab]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [MoveUp]), If(AtBottom [Drop] [MoveDown]), If(NotAtTop [MoveUp] [MoveRight]), If(NotAtTop [MoveDown] [MoveDown]), MoveUp, LoopWhile(AtRight [MoveUp]), If(AtLeft [MoveRight] [MoveDown]), LoopWhile(AtLeft [Drop]), MoveDown, If(NotAtRight [MoveUp] [MoveUp]), If(NotAtLeft [MoveLeft] [Grab]), MoveUp, LoopWhile(AtTop [MoveLeft]), MoveUp, LoopWhile(AtRight [Drop]), If(NotAtTop [MoveUp] [MoveRight]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtBottom [MoveDown]), MoveLeft, If(AtTop [MoveDown] [MoveDown]), LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [MoveUp]), MoveUp, MoveUp, LoopWhile(AtRight [MoveDown]), MoveRight, If(AtTop [MoveRight] [MoveDown]), LoopWhile(AtLeft [MoveDown]), MoveRight, LoopWhile(AtLeft [Drop]), If(AtRight [MoveRight] [MoveDown]), If(AtBottom [MoveRight] [MoveUp]), If(AtBottom [MoveRight] [MoveUp]), MoveDown, If(AtLeft [Grab] [MoveDown]), MoveDown, MoveLeft, If(NotAtLeft [MoveDown] [MoveUp]), If(AtBottom [Grab] [MoveUp]), If(AtBottom [MoveDown] [MoveUp]), If(AtBottom [Grab] [MoveRight]), If(AtBottom [MoveUp] [MoveLeft]), MoveDown, LoopWhile(AtLeft [MoveRight]), If(NotAtBottom [MoveDown] [MoveLeft]), MoveUp, LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [Drop]), LoopWhile(AtTop [MoveDown]), If(AtTop [Drop] [MoveDown]), MoveLeft, MoveUp, If(NotAtTop [MoveUp] [Grab]), LoopWhile(AtBottom [MoveRight]), MoveLeft, MoveUp, MoveUp, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [MoveRight]), If(AtBottom [MoveDown] [MoveRight]), LoopWhile(AtTop [Drop]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [MoveLeft]), If(AtTop [Grab] [MoveRight]), MoveRight, MoveUp, MoveDown, If(AtTop [Grab] [MoveDown]), LoopWhile(AtRight [MoveDown]), If(AtTop [MoveRight] [MoveUp]), MoveRight, LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [MoveRight]), MoveRight, MoveUp, MoveDown, LoopWhile(AtBottom [Drop]), MoveDown, MoveLeft, LoopWhile(AtRight [MoveUp]), MoveDown, LoopWhile(AtLeft [MoveDown]), If(AtLeft [MoveDown] [MoveUp]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [MoveLeft]), MoveLeft, MoveLeft, LoopWhile(AtTop [MoveRight]), MoveUp, MoveDown, MoveLeft, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtTop [Grab]), LoopWhile(AtTop [MoveUp]), MoveUp, MoveUp, If(AtBottom [MoveUp] [MoveUp]), LoopWhile(AtLeft [MoveUp]), MoveLeft, If(NotAtRight [MoveDown] [Drop]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [MoveLeft]), If(NotAtTop [MoveDown] [MoveUp]), MoveUp, MoveUp, If(AtRight [MoveUp] [MoveDown]), MoveDown, MoveDown, LoopWhile(AtBottom [Drop]), If(AtTop [Grab] [MoveUp]), LoopWhile(AtTop [Grab]), MoveDown, If(NotAtRight [MoveRight] [MoveDown]), MoveRight, LoopWhile(AtTop [MoveRight]), MoveDown, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(NotAtTop [MoveUp]), If(AtRight [MoveRight] [MoveDown]), MoveLeft, If(AtLeft [MoveUp] [MoveUp]), LoopWhile(NotAtTop [MoveUp]), If(NotAtTop [MoveDown] [MoveDown]), If(NotAtTop [MoveDown] [MoveLeft]), MoveRight, If(NotAtBottom [MoveRight] [Grab]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [Grab]), MoveDown, LoopWhile(AtLeft [Grab]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtRight [MoveDown]), MoveDown, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [MoveRight]), If(AtRight [Drop] [MoveUp]), MoveUp, LoopWhile(AtBottom [Grab]), If(AtTop [MoveLeft] [MoveDown]), LoopWhile(NotAtTop [MoveUp]), MoveLeft, If(AtRight [Drop] [MoveLeft]), LoopWhile(AtLeft [MoveRight]), If(NotAtLeft [MoveLeft] [MoveUp]), LoopWhile(AtRight [MoveUp]), If(NotAtBottom [MoveRight] [MoveUp]), LoopWhile(AtBottom [Grab]), MoveRight, LoopWhile(AtRight [MoveDown]), If(NotAtTop [MoveDown] [MoveLeft]), If(AtRight [Grab] [MoveRight]), If(AtLeft [Grab] [MoveLeft]), LoopWhile(NotAtTop [MoveLeft]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [Grab]), LoopWhile(AtRight [Grab]), If(NotAtLeft [MoveLeft] [MoveRight]), If(NotAtBottom [MoveLeft] [Drop]), LoopWhile(AtRight [MoveLeft]), If(NotAtRight [MoveDown] [MoveLeft]), MoveDown, MoveRight, LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtLeft [MoveRight]), If(AtLeft [MoveRight] [MoveDown]), If(NotAtBottom [MoveLeft] [Drop]), LoopWhile(AtLeft [Drop]), LoopWhile(AtTop [Grab]), LoopWhile(AtLeft [MoveUp]), MoveLeft, If(NotAtLeft [MoveDown] [MoveLeft]), MoveUp, LoopWhile(AtTop [Drop]), LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [Grab]), If(AtBottom [MoveLeft] [MoveLeft]), MoveDown, MoveUp, If(NotAtLeft [MoveUp] [MoveDown]), LoopWhile(AtBottom [MoveUp]), MoveDown, MoveDown, MoveDown, MoveUp, LoopWhile(NotAtLeft [Grab]), MoveRight, If(AtLeft [MoveRight] [MoveRight]), MoveDown, If(AtRight [Grab] [MoveUp]), MoveUp, MoveDown, MoveRight, MoveLeft, If(NotAtRight [MoveUp] [MoveRight]), LoopWhile(AtRight [Drop]), If(AtLeft [Grab] [MoveDown]), MoveRight, If(NotAtTop [MoveDown] [MoveDown]), MoveRight, If(NotAtLeft [MoveDown] [MoveUp]), MoveUp, LoopWhile(AtTop [Drop]), If(NotAtRight [MoveUp] [Drop]), MoveLeft, LoopWhile(AtTop [MoveDown]), If(NotAtBottom [MoveUp] [Grab]), If(NotAtRight [MoveDown] [MoveUp]), If(NotAtBottom [MoveDown] [MoveLeft]), If(AtTop [MoveRight] [MoveDown]), MoveRight, If(NotAtRight [MoveDown] [Drop]), MoveUp, LoopWhile(AtRight [MoveLeft]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveUp]), If(AtBottom [Drop] [MoveRight]), If(AtTop [MoveLeft] [MoveUp]), LoopWhile(AtTop [Drop]), If(AtRight [Drop] [MoveUp]), LoopWhile(AtBottom [MoveDown]), MoveLeft, LoopWhile(AtRight [MoveRight]), MoveUp, If(AtBottom [MoveDown] [MoveLeft]), MoveUp, MoveDown, LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [MoveLeft]), If(AtBottom [MoveDown] [MoveUp]), If(AtLeft [Grab] [MoveLeft]), MoveLeft, If(NotAtRight [MoveDown] [MoveRight]), LoopWhile(AtRight [Drop]), MoveUp, If(NotAtRight [MoveDown] [MoveRight]), MoveLeft, LoopWhile(AtTop [MoveUp]), MoveDown, If(NotAtTop [MoveRight] [Drop]), LoopWhile(AtTop [MoveDown]), MoveDown, LoopWhile(AtRight [MoveRight]), If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtLeft [MoveDown]), If(AtRight [MoveUp] [MoveDown]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtBottom [MoveDown]), If(AtRight [MoveLeft] [MoveRight]), MoveLeft, If(NotAtLeft [MoveUp] [MoveDown]), LoopWhile(AtTop [MoveUp]), If(NotAtRight [MoveRight] [Drop]), MoveUp, MoveUp, If(NotAtRight [MoveRight] [Grab]), If(AtBottom [Grab] [MoveUp]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [MoveRight]), MoveDown, If(NotAtLeft [MoveLeft] [MoveUp]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveDown]), If(NotAtRight [MoveDown] [MoveLeft]), If(NotAtRight [MoveDown] [Drop]), If(NotAtLeft [MoveUp] [Drop]), MoveLeft, If(NotAtRight [MoveLeft] [Grab]), LoopWhile(AtBottom [MoveUp]), If(NotAtTop [MoveRight] [MoveRight]), If(AtTop [Drop] [MoveLeft]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [MoveUp]), If(AtTop [MoveRight] [MoveUp]), MoveDown, LoopWhile(AtRight [MoveDown]), If(NotAtRight [MoveUp] [MoveRight]), LoopWhile(AtLeft [MoveUp]), If(NotAtLeft [MoveDown] [MoveLeft]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [Drop]), If(AtBottom [MoveDown] [MoveLeft]), If(NotAtLeft [MoveDown] [MoveDown]), LoopWhile(AtBottom [MoveRight]), If(NotAtRight [MoveRight] [Grab]), LoopWhile(AtTop [Grab]), LoopWhile(AtRight [MoveUp]), MoveRight, If(NotAtBottom [MoveRight] [MoveDown]), If(NotAtTop [MoveDown] [MoveRight]), If(AtTop [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtTop [MoveDown]), MoveRight, MoveDown, LoopWhile(AtLeft [MoveDown]), MoveUp, MoveDown, If(AtLeft [MoveRight] [MoveUp]), MoveRight, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtBottom [Drop]), If(AtRight [MoveRight] [MoveUp]), MoveDown, If(NotAtLeft [MoveRight] [MoveLeft]), If(AtBottom [Grab] [MoveLeft]), If(NotAtTop [MoveRight] [Grab]), LoopWhile(AtLeft [MoveUp]), MoveUp, MoveDown, MoveDown, MoveUp, LoopWhile(AtTop [MoveDown]), If(NotAtRight [MoveUp] [Grab]), If(AtTop [MoveDown] [MoveDown]), LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [Drop]), If(AtBottom [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveLeft]), MoveDown, MoveLeft, MoveUp, MoveUp, MoveRight, LoopWhile(AtLeft [MoveDown]), MoveLeft, LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [Drop]), LoopWhile(AtRight [MoveRight]), MoveRight, If(AtTop [Grab] [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), If(AtTop [Drop] [MoveDown]), LoopWhile(AtBottom [MoveRight]), If(NotAtRight [MoveLeft] [MoveLeft]), MoveRight, If(NotAtBottom [MoveDown] [MoveDown]), MoveRight, LoopWhile(AtRight [MoveRight]), If(AtRight [MoveUp] [MoveUp]), If(NotAtBottom [MoveDown] [Grab]), If(AtLeft [MoveDown] [MoveUp]), LoopWhile(AtBottom [MoveLeft]), If(AtTop [MoveRight] [MoveDown]), MoveUp, If(NotAtTop [MoveUp] [Drop]), MoveDown, MoveUp, MoveDown, If(NotAtBottom [MoveUp] [Drop]), MoveLeft, If(AtRight [MoveUp] [MoveLeft]), If(NotAtRight [MoveUp] [Drop]), If(AtRight [MoveLeft] [MoveUp]), MoveLeft, If(AtLeft [Drop] [MoveRight]), If(AtLeft [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveDown]), If(AtTop [MoveDown] [MoveRight]), MoveDown, MoveUp, MoveUp, If(NotAtLeft [MoveUp] [MoveDown]), MoveLeft, If(AtLeft [MoveLeft] [MoveRight]), If(AtTop [MoveLeft] [MoveDown]), MoveLeft, If(NotAtRight [MoveDown] [MoveDown]), If(NotAtBottom [MoveDown] [MoveLeft]), LoopWhile(AtRight [MoveRight]), If(NotAtBottom [MoveUp] [Drop]), LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [MoveDown]), MoveRight, MoveDown, If(NotAtBottom [MoveRight] [MoveDown]), LoopWhile(AtRight [Drop]), MoveDown, If(AtTop [MoveLeft] [MoveRight]), MoveUp, LoopWhile(AtTop [MoveLeft]), MoveDown, If(AtLeft [MoveLeft] [MoveUp]), If(AtBottom [MoveDown] [MoveLeft]), If(NotAtLeft [MoveDown] [Grab]), If(AtRight [MoveRight] [MoveUp]), LoopWhile(AtLeft [MoveRight]), If(NotAtLeft [MoveLeft] [MoveDown]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [MoveUp]), If(NotAtRight [MoveDown] [Grab]), If(NotAtBottom [MoveDown] [Grab]), LoopWhile(AtTop [MoveRight]), If(NotAtRight [MoveLeft] [Grab]), If(AtBottom [MoveLeft] [MoveDown]), MoveRight, LoopWhile(AtBottom [Grab]), LoopWhile(AtRight [MoveLeft]), If(AtLeft [MoveRight] [MoveRight]), If(AtTop [Grab] [MoveLeft]), MoveRight, If(NotAtBottom [MoveLeft] [Drop]), LoopWhile(AtBottom [MoveUp]), MoveUp, MoveDown, MoveDown, If(AtTop [Grab] [MoveLeft]), LoopWhile(AtRight [MoveRight]), If(NotAtBottom [MoveDown] [Drop]), MoveLeft, MoveDown, LoopWhile(AtTop [MoveUp]), MoveDown, MoveRight, LoopWhile(AtTop [MoveLeft]), If(AtRight [MoveLeft] [MoveRight]), LoopWhile(NotAtBottom [MoveDown]), LoopWhile(NotAtBottom [MoveDown]), LoopWhile(AtLeft [MoveLeft]), If(AtRight [MoveUp] [MoveUp]), If(AtBottom [MoveUp] [MoveRight]), MoveLeft, MoveLeft, MoveUp, LoopWhile(AtLeft [Drop]), If(AtRight [Drop] [MoveLeft]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [MoveUp]), MoveRight, LoopWhile(AtLeft [MoveUp]), LoopWhile(AtTop [MoveDown]), MoveUp, If(NotAtTop [MoveDown] [Grab]), LoopWhile(AtLeft [MoveDown]), MoveUp, LoopWhile(AtTop [Grab]), LoopWhile(AtRight [Grab]), If(NotAtBottom [MoveRight] [Grab]), MoveUp, LoopWhile(AtLeft [Drop]), If(NotAtRight [MoveDown] [MoveRight]), MoveDown, LoopWhile(AtTop [Grab]), MoveLeft, LoopWhile(AtLeft [Grab]), If(NotAtLeft [MoveLeft] [MoveLeft]), MoveUp, LoopWhile(AtBottom [Grab]), If(AtLeft [MoveUp] [MoveUp]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [Drop]), MoveUp, MoveDown, LoopWhile(AtLeft [Grab]), MoveDown, MoveLeft, If(NotAtRight [MoveDown] [Drop]), LoopWhile(AtTop [MoveUp]), MoveRight, If(NotAtTop [MoveRight] [Drop]), LoopWhile(NotAtBottom [MoveDown]), If(AtBottom [MoveRight] [Grab]), LoopWhile(NotAtBottom [MoveLeft]), MoveUp, LoopWhile(AtTop [Drop]), MoveLeft, MoveRight, If(NotAtBottom [MoveRight] [Drop]), MoveUp, MoveUp, MoveRight, LoopWhile(AtLeft [MoveLeft]), MoveUp, If(AtTop [MoveDown] [MoveLeft]), MoveLeft, MoveRight, LoopWhile(AtBottom [Grab]), If(NotAtBottom [MoveUp] [MoveUp]), LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [Grab]), MoveDown, If(NotAtLeft [MoveRight] [Drop]), MoveDown, MoveDown, MoveRight, If(AtBottom [Grab] [MoveRight]), MoveLeft, LoopWhile(AtLeft [Drop]), If(AtRight [MoveDown] [MoveLeft]), MoveUp, If(NotAtLeft [MoveRight] [Grab]), MoveRight, If(NotAtLeft [MoveLeft] [MoveDown]), LoopWhile(AtRight [MoveDown]), MoveUp, MoveRight, LoopWhile(AtBottom [MoveDown]), MoveDown, If(AtLeft [MoveRight] [MoveUp]), If(NotAtTop [MoveRight] [MoveDown]), MoveLeft, MoveLeft, If(AtRight [Drop] [MoveUp]), MoveUp, LoopWhile(AtRight [MoveDown]), If(AtTop [MoveUp] [MoveUp]), LoopWhile(AtBottom [MoveRight]), If(AtBottom [MoveDown] [MoveLeft]), MoveRight, If(NotAtTop [MoveDown] [Grab]), LoopWhile(AtRight [Drop]), LoopWhile(AtRight [Grab]), If(NotAtRight [MoveLeft] [MoveLeft]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [MoveRight]), If(NotAtLeft [MoveDown] [MoveUp]), If(NotAtBottom [MoveDown] [MoveDown]), If(NotAtRight [MoveLeft] [Drop]), LoopWhile(AtTop [MoveDown]), If(NotAtLeft [MoveRight] [MoveDown]), If(AtBottom [MoveUp] [MoveUp]), MoveLeft, LoopWhile(AtTop [MoveRight]), MoveLeft, If(NotAtRight [MoveRight] [MoveRight]), LoopWhile(AtTop [Grab]), If(AtLeft [MoveRight] [MoveLeft]), If(NotAtRight [MoveUp] [MoveUp]), If(NotAtTop [MoveRight] [MoveLeft]), LoopWhile(AtLeft [MoveDown]), If(NotAtBottom [MoveLeft] [MoveUp]), LoopWhile(NotAtBottom [MoveDown]), If(NotAtBottom [MoveRight] [MoveUp]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtBottom [Grab]), If(AtBottom [MoveDown] [MoveUp]), LoopWhile(NotAtRight [MoveRight]), MoveLeft, LoopWhile(AtBottom [Grab]), MoveUp, If(NotAtRight [MoveLeft] [MoveLeft]), If(AtTop [MoveDown] [MoveRight]), If(AtRight [Grab] [MoveLeft]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), If(NotAtTop [MoveDown] [MoveUp]), LoopWhile(AtBottom [Grab]), MoveRight, If(NotAtTop [MoveLeft] [Drop]), MoveLeft, MoveLeft, If(NotAtLeft [MoveUp] [MoveLeft]), MoveLeft, If(NotAtLeft [MoveLeft] [MoveUp]), LoopWhile(NotAtRight [MoveRight]), LoopWhile(AtBottom [Grab]), If(AtTop [MoveDown] [MoveLeft]), LoopWhile(AtLeft [Drop]), MoveUp, MoveDown, LoopWhile(AtTop [Drop]), If(AtLeft [MoveLeft] [MoveUp]), LoopWhile(AtTop [Drop]), If(NotAtBottom [MoveLeft] [Grab]), LoopWhile(AtLeft [MoveDown]), If(AtBottom [MoveDown] [MoveUp]), LoopWhile(AtRight [MoveUp]), MoveUp, If(AtTop [Grab] [MoveUp]), MoveUp, MoveLeft, LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveUp]), If(AtLeft [Drop] [MoveRight]), LoopWhile(AtTop [Drop]), MoveLeft, LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [MoveLeft]), If(NotAtBottom [MoveLeft] [MoveUp]), LoopWhile(AtRight [Drop]), LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [MoveLeft]), If(NotAtBottom [MoveUp] [MoveUp]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtLeft [Drop]), If(NotAtBottom [MoveDown] [Drop]), LoopWhile(AtTop [Grab]), If(AtTop [Drop] [MoveDown]), If(AtBottom [MoveDown] [MoveRight]), LoopWhile(AtRight [Drop]), MoveRight, MoveDown, If(NotAtBottom [MoveUp] [Drop]), MoveRight, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [Grab]), LoopWhile(AtRight [MoveDown]), MoveUp, If(NotAtRight [MoveRight] [MoveLeft]), MoveDown, LoopWhile(NotAtRight [MoveUp]), If(AtTop [Grab] [MoveLeft]), MoveDown, LoopWhile(AtBottom [MoveRight]), MoveLeft, LoopWhile(AtTop [Grab]), MoveRight, If(AtLeft [MoveRight] [MoveDown]), If(NotAtRight [MoveLeft] [MoveDown]), If(AtLeft [Drop] [MoveLeft]), If(NotAtRight [MoveLeft] [MoveUp]), If(AtBottom [Grab] [MoveRight]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtRight [MoveLeft]), If(NotAtTop [MoveRight] [MoveUp]), LoopWhile(AtBottom [Drop]), If(AtRight [MoveUp] [MoveLeft]), If(AtLeft [Drop] [MoveLeft]), MoveRight, MoveUp, If(NotAtBottom [MoveDown] [MoveUp]), MoveLeft, MoveLeft, LoopWhile(AtTop [MoveUp]), If(NotAtLeft [MoveLeft] [MoveUp]), If(NotAtLeft [MoveRight] [Drop]), MoveLeft, LoopWhile(AtLeft [MoveLeft]), MoveLeft, MoveRight, MoveRight, MoveRight, LoopWhile(AtBottom [Grab]), MoveLeft, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [MoveRight]), If(AtBottom [Drop] [MoveRight]), If(AtTop [MoveLeft] [MoveLeft]), MoveRight, If(NotAtBottom [MoveLeft] [MoveUp]), MoveLeft, If(AtRight [Grab] [MoveRight]), LoopWhile(AtBottom [MoveRight]), MoveLeft, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [Drop]), LoopWhile(AtBottom [Grab]), If(AtBottom [MoveDown] [MoveRight]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [MoveDown]), If(AtBottom [Grab] [MoveLeft]), MoveLeft, MoveRight, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [MoveLeft]), MoveLeft, MoveDown, MoveLeft, LoopWhile(AtTop [MoveUp]), MoveDown, If(AtLeft [MoveRight] [MoveRight]), LoopWhile(AtRight [MoveDown]), If(NotAtRight [MoveRight] [MoveDown]), If(AtTop [MoveLeft] [MoveDown]), MoveLeft, If(AtRight [MoveLeft] [MoveRight]), If(AtLeft [MoveUp] [MoveLeft]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [MoveDown]), MoveLeft, If(NotAtLeft [MoveDown] [MoveRight]), MoveRight, If(AtLeft [Drop] [MoveRight]), MoveUp, MoveLeft, If(NotAtBottom [MoveRight] [Drop]), If(AtLeft [Drop] [MoveUp]), If(AtLeft [MoveDown] [MoveLeft]), If(AtTop [Grab] [MoveUp]), MoveRight, If(NotAtRight [MoveLeft] [Drop]), LoopWhile(AtRight [MoveRight]), If(AtBottom [MoveUp] [MoveDown]), If(AtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtRight [Drop]), MoveLeft, LoopWhile(NotAtLeft [Drop]), MoveDown, If(AtLeft [MoveRight] [Drop]), LoopWhile(NotAtRight [MoveRight]), LoopWhile(AtTop [Grab]), LoopWhile(AtTop [MoveLeft]), If(AtRight [MoveUp] [MoveDown]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveLeft]), If(AtLeft [MoveLeft] [MoveLeft]), If(AtLeft [Drop] [MoveDown]), LoopWhile(AtBottom [Grab]), MoveRight, LoopWhile(AtTop [MoveLeft]), If(NotAtLeft [MoveLeft] [MoveDown]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [MoveRight]), MoveLeft, MoveRight, LoopWhile(AtLeft [MoveUp]), If(AtLeft [Grab] [MoveLeft]), MoveLeft, LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [Grab]), LoopWhile(AtTop [Grab]), LoopWhile(AtRight [Drop]), If(NotAtBottom [MoveRight] [MoveLeft]), If(NotAtLeft [MoveRight] [MoveLeft]), MoveLeft, MoveRight, If(AtTop [Drop] [MoveRight]), If(NotAtLeft [MoveLeft] [MoveUp]), LoopWhile(AtTop [Grab]), If(AtRight [MoveRight] [MoveLeft]), If(AtBottom [MoveRight] [MoveLeft]), LoopWhile(AtRight [MoveUp]), LoopWhile(NotAtRight [MoveRight]), LoopWhile(NotAtRight [MoveUp]), LoopWhile(AtBottom [MoveRight]), If(AtLeft [MoveUp] [MoveUp]), If(NotAtLeft [MoveLeft] [MoveRight]), LoopWhile(AtBottom [Drop]), If(AtRight [MoveDown] [MoveRight]), LoopWhile(AtBottom [MoveRight]), MoveDown, If(NotAtBottom [MoveUp] [MoveLeft]), LoopWhile(AtTop [Drop]), LoopWhile(NotAtRight [MoveRight]), LoopWhile(NotAtRight [MoveLeft]), MoveLeft, MoveRight, LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtBottom [Drop]), MoveLeft, If(NotAtBottom [MoveLeft] [MoveDown]), LoopWhile(AtRight [MoveUp]), If(AtRight [Drop] [MoveRight]), LoopWhile(AtRight [MoveDown]), MoveLeft, If(NotAtTop [MoveLeft] [MoveRight]), If(NotAtRight [MoveRight] [MoveUp]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [Grab]), MoveLeft, If(NotAtLeft [MoveLeft] [Drop]), If(NotAtTop [MoveRight] [MoveDown]), LoopWhile(AtRight [MoveUp]), MoveLeft, MoveDown, MoveUp, MoveDown, MoveLeft, MoveDown, If(NotAtBottom [MoveUp] [Drop]), If(NotAtLeft [MoveUp] [MoveLeft]), MoveRight, If(AtRight [MoveDown] [MoveUp]), If(AtLeft [MoveLeft] [MoveLeft]), MoveRight, LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [MoveUp]), If(AtBottom [MoveRight] [MoveRight]), LoopWhile(AtBottom [MoveRight]), MoveDown, If(NotAtTop [MoveUp] [MoveLeft]), LoopWhile(AtTop [MoveDown]), MoveLeft, LoopWhile(AtTop [MoveLeft]), MoveUp, If(NotAtLeft [MoveUp] [Drop]), If(AtLeft [MoveDown] [MoveLeft]), If(AtTop [Drop] [MoveUp]), LoopWhile(NotAtLeft [MoveLeft]), If(NotAtTop [MoveRight] [MoveDown]), MoveLeft, MoveRight, MoveDown, MoveLeft, LoopWhile(AtRight [Drop]), LoopWhile(NotAtLeft [MoveDown]), LoopWhile(NotAtLeft [MoveUp]), MoveRight, MoveRight, LoopWhile(AtLeft [MoveRight]), If(AtTop [MoveLeft] [MoveRight]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [Grab]), If(NotAtRight [MoveUp] [Grab]), MoveDown, LoopWhile(AtLeft [Grab]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [MoveDown]), If(NotAtLeft [MoveRight] [MoveDown]), LoopWhile(AtLeft [Grab]), MoveDown, MoveLeft, MoveRight, If(AtLeft [Drop] [MoveRight]), If(AtLeft [MoveRight] [MoveDown]), MoveRight, LoopWhile(AtRight [Drop]), LoopWhile(AtTop [MoveDown]), MoveLeft, MoveLeft, LoopWhile(AtLeft [MoveUp]), If(NotAtRight [MoveDown] [MoveUp]), MoveRight, LoopWhile(AtLeft [MoveRight]), MoveDown, If(AtRight [MoveUp] [MoveLeft]), MoveLeft, If(NotAtLeft [MoveUp] [Drop]), LoopWhile(AtLeft [MoveDown]), If(NotAtRight [MoveUp] [MoveLeft]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [Drop]), If(AtLeft [MoveRight] [MoveLeft]), LoopWhile(AtLeft [MoveUp]), If(NotAtLeft [MoveUp] [Drop]), MoveRight, MoveDown, If(NotAtBottom [MoveLeft] [MoveDown]), MoveUp, MoveDown, LoopWhile(AtBottom [MoveUp]), MoveDown, If(NotAtBottom [MoveRight] [MoveRight]), LoopWhile(AtRight [MoveDown]), If(NotAtBottom [MoveRight] [MoveUp]), If(AtLeft [MoveLeft] [MoveUp]), If(NotAtTop [MoveRight] [Drop]), If(NotAtBottom [MoveRight] [MoveUp]), MoveLeft, If(AtRight [MoveUp] [MoveDown]), LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [MoveLeft]), MoveLeft, LoopWhile(AtLeft [MoveDown]), If(NotAtTop [MoveLeft] [Grab]), LoopWhile(AtLeft [MoveUp]), MoveDown, MoveLeft, MoveDown, If(NotAtTop [MoveRight] [Drop]), LoopWhile(AtBottom [MoveUp]), If(NotAtLeft [MoveRight] [MoveLeft]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [Grab]), LoopWhile(AtTop [MoveLeft]), MoveRight, LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [Grab]), If(AtBottom [Drop] [MoveDown]), If(AtRight [Drop] [MoveRight]), LoopWhile(AtTop [Grab]), If(NotAtTop [MoveLeft] [Drop]), LoopWhile(NotAtBottom [MoveRight]), LoopWhile(AtTop [Grab]), MoveRight, LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [MoveUp]), MoveLeft, LoopWhile(NotAtBottom [MoveLeft]), If(NotAtBottom [MoveRight] [MoveLeft]), MoveLeft, If(AtBottom [MoveLeft] [Drop]), MoveLeft, MoveLeft, MoveUp, LoopWhile(AtRight [MoveLeft]), MoveUp, LoopWhile(NotAtLeft [Drop]), MoveRight, LoopWhile(AtRight [Grab]), LoopWhile(AtRight [Drop]), MoveDown, MoveRight, LoopWhile(AtRight [MoveUp]), MoveRight, If(AtTop [MoveRight] [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [Drop]), MoveUp, If(NotAtLeft [MoveUp] [MoveUp]), MoveLeft, If(AtLeft [Drop] [MoveLeft]), LoopWhile(AtBottom [MoveDown]), MoveDown, LoopWhile(NotAtLeft [Drop]), MoveUp, If(AtLeft [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), If(NotAtRight [MoveRight] [MoveRight]), If(AtLeft [Grab] [MoveDown]), If(NotAtLeft [MoveLeft] [Drop]), LoopWhile(AtTop [Grab]), If(NotAtBottom [MoveRight] [Drop]), If(AtLeft [MoveUp] [MoveRight]), If(AtBottom [MoveRight] [MoveDown]), If(NotAtLeft [MoveRight] [MoveRight]), MoveRight, LoopWhile(AtBottom [MoveDown]), MoveRight, LoopWhile(NotAtRight [MoveRight]), If(NotAtBottom [MoveLeft] [MoveDown]), LoopWhile(AtRight [MoveRight]), If(AtRight [MoveLeft] [MoveUp]), If(NotAtLeft [MoveDown] [MoveLeft]), MoveRight, LoopWhile(AtLeft [Grab]), MoveLeft, LoopWhile(AtBottom [MoveUp]), MoveRight, If(AtRight [MoveLeft] [Drop]), LoopWhile(AtTop [MoveRight]), If(AtTop [MoveDown] [MoveLeft]), If(NotAtLeft [MoveRight] [MoveLeft]), MoveLeft, LoopWhile(AtRight [MoveUp]), MoveRight, LoopWhile(AtTop [Grab]), MoveRight, MoveLeft, LoopWhile(AtLeft [Grab]), MoveLeft, LoopWhile(AtTop [MoveLeft]), MoveLeft, If(NotAtBottom [MoveLeft] [Drop]), If(NotAtRight [MoveRight] [Grab]), LoopWhile(AtRight [MoveDown]), MoveUp, MoveLeft, MoveLeft, LoopWhile(AtRight [MoveUp]), If(AtBottom [Grab] [MoveLeft]), MoveLeft, MoveDown, LoopWhile(AtRight [Grab]), LoopWhile(AtRight [MoveUp]), MoveRight, If(AtTop [MoveDown] [MoveRight]), If(AtTop [Drop] [MoveRight]), LoopWhile(AtRight [MoveLeft]), If(AtTop [MoveDown] [MoveLeft]), If(NotAtLeft [MoveLeft] [MoveRight]), LoopWhile(AtRight [MoveLeft]), If(NotAtTop [MoveLeft] [Grab]), MoveLeft, LoopWhile(NotAtRight [MoveRight]), MoveDown, LoopWhile(AtRight [MoveLeft]), MoveLeft, MoveLeft, If(NotAtTop [MoveLeft] [MoveRight]), MoveRight, LoopWhile(NotAtRight [MoveRight]), LoopWhile(NotAtBottom [Drop]), Grab, LoopWhile(NotAtRight [MoveDown]), MoveUp, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [MoveLeft]), LoopWhile(NotAtRight [Drop]), If(AtLeft [MoveRight] [MoveUp]), LoopWhile(NotAtRight [Grab]), If(AtRight [MoveDown] [MoveDown]), If(AtBottom [Grab] [MoveDown]), LoopWhile(NotAtRight [MoveRight]), MoveUp, LoopWhile(AtTop [Grab]), LoopWhile(NotAtRight [Grab]), LoopWhile(AtBottom [Grab]), MoveLeft, LoopWhile(AtBottom [MoveDown]), Drop, LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [MoveDown]), Grab, LoopWhile(AtTop [MoveUp]), MoveLeft, MoveDown, LoopWhile(NotAtBottom [MoveRight]), MoveUp, MoveRight, MoveDown, LoopWhile(AtRight [MoveUp]), If(AtRight [MoveUp] [MoveRight]), MoveUp, If(AtRight [MoveUp] [Drop]), LoopWhile(NotAtRight [MoveRight]), If(NotAtBottom [MoveUp] [Drop]), If(NotAtRight [Grab] [MoveDown]), If(AtBottom [MoveLeft] [MoveUp]), MoveDown, LoopWhile(AtTop [Grab]), LoopWhile(NotAtRight [MoveLeft]), LoopWhile(AtBottom [MoveUp]), LoopWhile(NotAtRight [MoveUp]), LoopWhile(NotAtRight [Drop]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [Grab]), If(AtTop [MoveDown] [MoveUp]), LoopWhile(AtBottom [Grab]), If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtTop [Drop]), MoveDown, If(AtRight [MoveLeft] [Grab]), MoveUp, LoopWhile(AtTop [Grab]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [Grab]), MoveRight, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [MoveRight]), If(NotAtBottom [MoveLeft] [MoveDown]), MoveLeft, If(AtLeft [MoveRight] [MoveUp]), If(AtBottom [MoveLeft] [MoveRight]), If(AtRight [MoveRight] [MoveLeft]), If(AtBottom [MoveDown] [MoveUp]), If(AtRight [MoveRight] [MoveLeft]), If(NotAtLeft [MoveLeft] [Drop]), LoopWhile(AtLeft [Drop]), If(NotAtRight [MoveDown] [MoveUp]), LoopWhile(AtRight [MoveUp]), MoveUp, LoopWhile(AtTop [MoveLeft]), MoveLeft, MoveLeft, If(AtBottom [MoveRight] [MoveUp]), If(AtRight [Drop] [MoveDown]), If(AtLeft [Drop] [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtTop [MoveLeft]), MoveRight, MoveUp, If(AtRight [Drop] [Drop]), MoveDown, LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [MoveUp]), MoveLeft, MoveDown, MoveLeft, If(NotAtLeft [MoveRight] [Drop]), MoveDown, If(AtRight [MoveRight] [MoveDown]), LoopWhile(AtRight [MoveUp]), MoveLeft, MoveUp, LoopWhile(AtLeft [MoveLeft])])", "cost_per_iteration": [[1, 27], [3, 28], [5, 27], [9, 26], [18, 27], [20, 26], [22, 27], [25, 28], [26, 27], [29, 26], [34, 25], [39, 24], [45, 23], [53, 22], [55, 23], [57, 22], [60, 21], [74, 20], [75, 21], [78, 22], [79, 21], [80, 22], [83, 21], [91, 22], [93, 21], [94, 20], [98, 21], [100, 22], [101, 23], [109, 22], [113, 23], [117, 22], [120, 23], [121, 22], [123, 21], [126, 20], [136, 19], [139, 17], [161, 19], [164, 20], [165, 19], [170, 17], [184, 19], [187, 17], [208, 19], [212, 17], [235, 19], [239, 17], [272, 19], [274, 17], [331, 19], [341, 17], [357, 19], [365, 17], [397, 19], [401, 20], [406, 19], [407, 20], [410, 19], [414, 17], [463, 19], [467, 17], [499, 19], [502, 20], [507, 19], [513, 17], [538, 19], [544, 17], [1544, 16], [1745, 15], [2091, 14], [2262, 13], [2345, 12], [2427, 13], [2482, 14], [2566, 13], [2619, 12], [2911, 11], [3016, 10], [3184, 11], [3280, 12], [3336, 11], [3349, 10], [3817, 11], [3829, 10], [3922, 11], [3976, 10], [4014, 11], [4129, 10], [4217, 11], [4281, 10], [4472, 11], [4504, 10], [4518, 11], [4825, 10], [5448, 9], [5467, 10], [5601, 11], [5677, 10], [5694, 9], [5827, 10], [5886, 11], [5927, 10], [5942, 9], [6042, 8], [6202, 9], [6400, 10], [6578, 9], [7414, 8], [7762, 9], [7844, 8], [7953, 9], [8580, 8], [8865, 9], [9081, 10], [9174, 11], [9275, 10], [9368, 9], [9761, 10], [9873, 11], [9938, 10], [10109, 12], [10179, 10], [10401, 9], [10490, 10], [10572, 11], [10811, 10], [10926, 9], [11014, 10], [11128, 9], [11321, 10], [11372, 9], [11442, 10], [11585, 9], [11623, 10], [11935, 9], [12131, 8], [12841, 7], [12943, 8], [12971, 7], [13038, 9], [13057, 7], [13218, 8], [13413, 9], [13426, 8], [13752, 7], [13858, 5], [14321, 7], [14337, 5], [14537, 7], [14816, 8], [14929, 9], [15014, 8], [15108, 7], [15192, 8], [15833, 7], [15921, 8], [16012, 9], [16130, 8], [16376, 9], [16474, 10], [16542, 9], [17013, 10], [17085, 9], [17096, 8], [17121, 7], [17276, 8], [17427, 7], [17827, 5], [18148, 4], [19191, 3], [19274, 4], [19708, 3], [20299, 4], [21533, 3], [21910, 4], [22253, 3], [22306, 2], [22367, 1], [22772, 2], [23938, 1], [24778, 0]], "number_of_iterations": 24778}}
