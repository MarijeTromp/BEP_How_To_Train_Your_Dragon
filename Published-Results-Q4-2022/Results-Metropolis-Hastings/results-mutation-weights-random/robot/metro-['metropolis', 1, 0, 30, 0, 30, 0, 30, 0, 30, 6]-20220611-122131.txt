{"test_case": 0, "data": "MetropolisHasting 0: robots/2-0-0.pl, test_cost: 0, train_cost: 0, time: 0.006779302000000001, length: 59, iterations: 442"}
{"test_case": 1, "data": "MetropolisHasting 1: robots/2-0-1.pl, test_cost: 0, train_cost: 0, time: 0.003273083999999999, length: 10, iterations: 299"}
{"test_case": 2, "data": "MetropolisHasting 2: robots/2-0-2.pl, test_cost: 0, train_cost: 0, time: 0.002970875999999999, length: 25, iterations: 252"}
{"test_case": 3, "data": "MetropolisHasting 3: robots/2-0-3.pl, test_cost: 0, train_cost: 0, time: 0.0008070179999999996, length: 3, iterations: 82"}
{"test_case": 4, "data": "MetropolisHasting 4: robots/2-0-4.pl, test_cost: 0, train_cost: 0, time: 0.0003103219999999983, length: 1, iterations: 29"}
{"test_case": 5, "data": "MetropolisHasting 5: robots/2-0-5.pl, test_cost: 0, train_cost: 0, time: 0.0025935679999999975, length: 2, iterations: 265"}
{"test_case": 6, "data": "MetropolisHasting 6: robots/2-0-6.pl, test_cost: 0, train_cost: 0, time: 0.0017748819999999985, length: 6, iterations: 158"}
{"test_case": 7, "data": "MetropolisHasting 7: robots/2-0-7.pl, test_cost: 0, train_cost: 0, time: 0.00021970299999999818, length: 3, iterations: 20"}
{"test_case": 8, "data": "MetropolisHasting 8: robots/2-0-8.pl, test_cost: 0, train_cost: 0, time: 0.020318953000000004, length: 34, iterations: 1749"}
{"test_case": 9, "data": "MetropolisHasting 9: robots/2-0-9.pl, test_cost: 0, train_cost: 0, time: 0.005060283999999998, length: 24, iterations: 392"}
{"test_case": 10, "data": "MetropolisHasting 10: robots/2-0-10.pl, test_cost: 0, train_cost: 0, time: 0.003381577000000001, length: 18, iterations: 280"}
{"test_case": 11, "data": "MetropolisHasting 11: robots/2-1-0.pl, test_cost: 0, train_cost: 0, time: 0.010266946999999998, length: 38, iterations: 692"}
{"test_case": 12, "data": "MetropolisHasting 12: robots/2-1-1.pl, test_cost: 0, train_cost: 0, time: 0.04132153400000001, length: 70, iterations: 3343"}
{"test_case": 13, "data": "MetropolisHasting 13: robots/2-1-2.pl, test_cost: 0, train_cost: 0, time: 0.0017822089999999999, length: 36, iterations: 141"}
{"test_case": 14, "data": "MetropolisHasting 14: robots/2-1-3.pl, test_cost: 0, train_cost: 0, time: 4.872200000000104e-05, length: 1, iterations: 3"}
{"test_case": 15, "data": "MetropolisHasting 15: robots/2-1-4.pl, test_cost: 0, train_cost: 0, time: 4.056100000000146e-05, length: 0, iterations: 2"}
{"test_case": 16, "data": "MetropolisHasting 16: robots/2-1-5.pl, test_cost: 0, train_cost: 0, time: 0.00023367399999999622, length: 6, iterations: 21"}
{"test_case": 17, "data": "MetropolisHasting 17: robots/2-1-6.pl, test_cost: 0, train_cost: 0, time: 0.0035177599999999948, length: 28, iterations: 320"}
{"test_case": 18, "data": "MetropolisHasting 18: robots/2-1-7.pl, test_cost: 0, train_cost: 0, time: 0.00012913100000000455, length: 3, iterations: 12"}
{"test_case": 19, "data": "MetropolisHasting 19: robots/2-1-8.pl, test_cost: 0, train_cost: 0, time: 0.013834355000000007, length: 33, iterations: 1249"}
{"test_case": 20, "data": "MetropolisHasting 20: robots/2-1-9.pl, test_cost: 0, train_cost: 0, time: 0.0017589189999999994, length: 20, iterations: 130"}
{"test_case": 21, "data": "MetropolisHasting 21: robots/2-1-10.pl, test_cost: 0, train_cost: 0, time: 0.007523044999999999, length: 26, iterations: 641"}
{"test_case": 22, "data": "MetropolisHasting 22: robots/2-2-0.pl, test_cost: 0, train_cost: 0, time: 0.019424655, length: 31, iterations: 1436"}
{"test_case": 23, "data": "MetropolisHasting 23: robots/2-2-1.pl, test_cost: 0, train_cost: 0, time: 0.002859753999999999, length: 18, iterations: 257"}
{"test_case": 24, "data": "MetropolisHasting 24: robots/2-2-2.pl, test_cost: 0, train_cost: 0, time: 0.0054320749999999945, length: 21, iterations: 407"}
{"test_case": 25, "data": "MetropolisHasting 25: robots/2-2-3.pl, test_cost: 0, train_cost: 0, time: 0.002245766000000003, length: 19, iterations: 201"}
{"test_case": 26, "data": "MetropolisHasting 26: robots/2-2-4.pl, test_cost: 0, train_cost: 0, time: 0.008619298000000004, length: 18, iterations: 727"}
{"test_case": 27, "data": "MetropolisHasting 27: robots/2-2-5.pl, test_cost: 0, train_cost: 0, time: 0.005108826999999996, length: 20, iterations: 443"}
{"test_case": 28, "data": "MetropolisHasting 28: robots/2-2-6.pl, test_cost: 0, train_cost: 0, time: 0.0027695390000000014, length: 23, iterations: 235"}
{"test_case": 29, "data": "MetropolisHasting 29: robots/2-2-7.pl, test_cost: 0, train_cost: 0, time: 0.0010268469999999974, length: 11, iterations: 86"}
{"test_case": 30, "data": "MetropolisHasting 30: robots/2-2-8.pl, test_cost: 0, train_cost: 0, time: 0.0007077180000000004, length: 10, iterations: 41"}
{"test_case": 31, "data": "MetropolisHasting 31: robots/2-2-9.pl, test_cost: 0, train_cost: 0, time: 6.478599999999984e-05, length: 1, iterations: 4"}
{"test_case": 32, "data": "MetropolisHasting 32: robots/2-2-10.pl, test_cost: 0, train_cost: 0, time: 0.0016097010000000007, length: 13, iterations: 135"}
{"test_case": 33, "data": "MetropolisHasting 33: robots/2-3-0.pl, test_cost: 0, train_cost: 0, time: 0.004878213, length: 13, iterations: 450"}
{"test_case": 34, "data": "MetropolisHasting 34: robots/2-3-1.pl, test_cost: 0, train_cost: 0, time: 0.0037505919999999988, length: 32, iterations: 302"}
{"test_case": 35, "data": "MetropolisHasting 35: robots/2-3-2.pl, test_cost: 0, train_cost: 0, time: 0.013610114999999999, length: 86, iterations: 755"}
{"test_case": 36, "data": "MetropolisHasting 36: robots/2-3-3.pl, test_cost: 0, train_cost: 0, time: 0.0028644549999999984, length: 28, iterations: 227"}
{"test_case": 37, "data": "MetropolisHasting 37: robots/2-3-4.pl, test_cost: 0, train_cost: 0, time: 0.0006848270000000059, length: 14, iterations: 56"}
{"test_case": 38, "data": "MetropolisHasting 38: robots/2-3-5.pl, test_cost: 0, train_cost: 0, time: 0.007946829999999995, length: 46, iterations: 610"}
{"test_case": 39, "data": "MetropolisHasting 39: robots/2-3-6.pl, test_cost: 0, train_cost: 0, time: 0.012596250000000003, length: 45, iterations: 922"}
{"test_case": 40, "data": "MetropolisHasting 40: robots/2-3-7.pl, test_cost: 0, train_cost: 0, time: 0.0019765869999999993, length: 13, iterations: 160"}
{"test_case": 41, "data": "MetropolisHasting 41: robots/2-3-8.pl, test_cost: 0, train_cost: 0, time: 0.000649335, length: 8, iterations: 55"}
{"test_case": 42, "data": "MetropolisHasting 42: robots/2-3-9.pl, test_cost: 0, train_cost: 0, time: 0.031840443, length: 80, iterations: 1850"}
{"test_case": 43, "data": "MetropolisHasting 43: robots/2-3-10.pl, test_cost: 0, train_cost: 0, time: 0.037227035, length: 36, iterations: 2967"}
{"test_case": 44, "data": "MetropolisHasting 44: robots/2-4-0.pl, test_cost: 0, train_cost: 0, time: 0.0001845559999999885, length: 6, iterations: 15"}
{"test_case": 45, "data": "MetropolisHasting 45: robots/2-4-1.pl, test_cost: 0, train_cost: 0, time: 0.03613707699999999, length: 11, iterations: 3352"}
{"test_case": 46, "data": "MetropolisHasting 46: robots/2-4-2.pl, test_cost: 0, train_cost: 0, time: 0.0016008809999999984, length: 33, iterations: 126"}
{"test_case": 47, "data": "MetropolisHasting 47: robots/2-4-3.pl, test_cost: 0, train_cost: 0, time: 0.0005978270000000091, length: 12, iterations: 58"}
{"test_case": 48, "data": "MetropolisHasting 48: robots/2-4-4.pl, test_cost: 0, train_cost: 0, time: 0.004231524, length: 43, iterations: 340"}
{"test_case": 49, "data": "MetropolisHasting 49: robots/2-4-5.pl, test_cost: 0, train_cost: 0, time: 0.029798916999999994, length: 26, iterations: 2300"}
{"test_case": 50, "data": "MetropolisHasting 50: robots/2-4-6.pl, test_cost: 0, train_cost: 0, time: 0.00018877000000000043, length: 0, iterations: 2"}
{"test_case": 51, "data": "MetropolisHasting 51: robots/2-4-7.pl, test_cost: 0, train_cost: 0, time: 0.00011945500000000008, length: 2, iterations: 5"}
{"test_case": 52, "data": "MetropolisHasting 52: robots/2-4-8.pl, test_cost: 0, train_cost: 0, time: 0.012391325, length: 80, iterations: 855"}
{"test_case": 53, "data": "MetropolisHasting 53: robots/2-4-9.pl, test_cost: 0, train_cost: 0, time: 0.0011459459999999984, length: 23, iterations: 93"}
{"test_case": 54, "data": "MetropolisHasting 54: robots/2-4-10.pl, test_cost: 0, train_cost: 0, time: 0.028754705, length: 51, iterations: 2117"}
{"test_case": 55, "data": "MetropolisHasting 55: robots/2-5-0.pl, test_cost: 0, train_cost: 0, time: 0.004599744000000003, length: 10, iterations: 424"}
{"test_case": 56, "data": "MetropolisHasting 56: robots/2-5-1.pl, test_cost: 0, train_cost: 0, time: 0.007404725000000001, length: 26, iterations: 643"}
{"test_case": 57, "data": "MetropolisHasting 57: robots/2-5-2.pl, test_cost: 0, train_cost: 0, time: 0.009250436999999993, length: 30, iterations: 806"}
{"test_case": 58, "data": "MetropolisHasting 58: robots/2-5-3.pl, test_cost: 0, train_cost: 0, time: 0.0004414050000000058, length: 13, iterations: 39"}
{"test_case": 59, "data": "MetropolisHasting 59: robots/2-5-4.pl, test_cost: 0, train_cost: 0, time: 0.005357458999999995, length: 21, iterations: 457"}
{"test_case": 60, "data": "MetropolisHasting 60: robots/2-5-5.pl, test_cost: 0, train_cost: 0, time: 0.0020121650000000007, length: 9, iterations: 166"}
{"test_case": 61, "data": "MetropolisHasting 61: robots/2-5-6.pl, test_cost: 0, train_cost: 0, time: 5.2563999999999736e-05, length: 0, iterations: 3"}
{"test_case": 62, "data": "MetropolisHasting 62: robots/2-5-7.pl, test_cost: 0, train_cost: 0, time: 0.015897308000000002, length: 29, iterations: 1344"}
{"test_case": 63, "data": "MetropolisHasting 63: robots/2-5-8.pl, test_cost: 0, train_cost: 0, time: 0.003691962, length: 19, iterations: 306"}
{"test_case": 64, "data": "MetropolisHasting 64: robots/2-5-9.pl, test_cost: 0, train_cost: 0, time: 0.0012371909999999986, length: 5, iterations: 108"}
{"test_case": 65, "data": "MetropolisHasting 65: robots/2-5-10.pl, test_cost: 0, train_cost: 0, time: 0.008398286000000001, length: 44, iterations: 586"}
{"test_case": 66, "data": "MetropolisHasting 66: robots/2-6-0.pl, test_cost: 0, train_cost: 0, time: 0.0028311440000000007, length: 10, iterations: 254"}
{"test_case": 67, "data": "MetropolisHasting 67: robots/2-6-1.pl, test_cost: 0, train_cost: 0, time: 0.0023708730000000025, length: 15, iterations: 208"}
{"test_case": 68, "data": "MetropolisHasting 68: robots/2-6-2.pl, test_cost: 0, train_cost: 0, time: 0.004160340999999998, length: 16, iterations: 382"}
{"test_case": 69, "data": "MetropolisHasting 69: robots/2-6-3.pl, test_cost: 0, train_cost: 0, time: 0.017865432, length: 35, iterations: 1301"}
{"test_case": 70, "data": "MetropolisHasting 70: robots/2-6-4.pl, test_cost: 0, train_cost: 0, time: 0.0064881140000000006, length: 32, iterations: 542"}
{"test_case": 71, "data": "MetropolisHasting 71: robots/2-6-5.pl, test_cost: 0, train_cost: 0, time: 0.008608136999999998, length: 13, iterations: 733"}
{"test_case": 72, "data": "MetropolisHasting 72: robots/2-6-6.pl, test_cost: 0, train_cost: 0, time: 0.009949763, length: 8, iterations: 838"}
{"test_case": 73, "data": "MetropolisHasting 73: robots/2-6-7.pl, test_cost: 0, train_cost: 0, time: 0.0006199739999999988, length: 7, iterations: 48"}
{"test_case": 74, "data": "MetropolisHasting 74: robots/2-6-8.pl, test_cost: 0, train_cost: 0, time: 0.004230839, length: 46, iterations: 303"}
{"test_case": 75, "data": "MetropolisHasting 75: robots/2-6-9.pl, test_cost: 0, train_cost: 0, time: 0.005663889999999998, length: 26, iterations: 496"}
{"test_case": 76, "data": "MetropolisHasting 76: robots/2-6-10.pl, test_cost: 0, train_cost: 0, time: 0.004924657999999998, length: 14, iterations: 446"}
{"test_case": 77, "data": "MetropolisHasting 77: robots/2-7-0.pl, test_cost: 0, train_cost: 0, time: 0.013848190000000003, length: 25, iterations: 1193"}
{"test_case": 78, "data": "MetropolisHasting 78: robots/2-7-1.pl, test_cost: 0, train_cost: 0, time: 0.0038311989999999935, length: 26, iterations: 322"}
{"test_case": 79, "data": "MetropolisHasting 79: robots/2-7-2.pl, test_cost: 0, train_cost: 0, time: 0.0016656710000000075, length: 15, iterations: 151"}
{"test_case": 80, "data": "MetropolisHasting 80: robots/2-7-3.pl, test_cost: 0, train_cost: 0, time: 0.005674161, length: 14, iterations: 480"}
{"test_case": 81, "data": "MetropolisHasting 81: robots/2-7-4.pl, test_cost: 0, train_cost: 0, time: 0.00021566200000000015, length: 5, iterations: 18"}
{"test_case": 82, "data": "MetropolisHasting 82: robots/2-7-5.pl, test_cost: 0, train_cost: 0, time: 0.014759758999999999, length: 62, iterations: 1283"}
{"test_case": 83, "data": "MetropolisHasting 83: robots/2-7-6.pl, test_cost: 0, train_cost: 0, time: 3.164300000000134e-05, length: 2, iterations: 1"}
{"test_case": 84, "data": "MetropolisHasting 84: robots/2-7-7.pl, test_cost: 0, train_cost: 0, time: 0.017319705, length: 95, iterations: 1006"}
{"test_case": 85, "data": "MetropolisHasting 85: robots/2-7-8.pl, test_cost: 0, train_cost: 0, time: 0.007877957999999997, length: 31, iterations: 663"}
{"test_case": 86, "data": "MetropolisHasting 86: robots/2-7-9.pl, test_cost: 0, train_cost: 0, time: 5.331900000000306e-05, length: 0, iterations: 3"}
{"test_case": 87, "data": "MetropolisHasting 87: robots/2-7-10.pl, test_cost: 0, train_cost: 0, time: 5.372200000000604e-05, length: 3, iterations: 3"}
{"test_case": 88, "data": "MetropolisHasting 88: robots/2-8-0.pl, test_cost: 0, train_cost: 0, time: 0.025007898, length: 55, iterations: 1782"}
{"test_case": 89, "data": "MetropolisHasting 89: robots/2-8-1.pl, test_cost: 0, train_cost: 0, time: 0.002607701000000004, length: 22, iterations: 232"}
{"test_case": 90, "data": "MetropolisHasting 90: robots/2-8-2.pl, test_cost: 0, train_cost: 0, time: 0.0026827890000000005, length: 21, iterations: 211"}
{"test_case": 91, "data": "MetropolisHasting 91: robots/2-8-3.pl, test_cost: 0, train_cost: 0, time: 0.010162082999999999, length: 34, iterations: 897"}
{"test_case": 92, "data": "MetropolisHasting 92: robots/2-8-4.pl, test_cost: 0, train_cost: 0, time: 0.0008928290000000012, length: 6, iterations: 89"}
{"test_case": 93, "data": "MetropolisHasting 93: robots/2-8-5.pl, test_cost: 0, train_cost: 0, time: 0.003764811, length: 9, iterations: 336"}
{"test_case": 94, "data": "MetropolisHasting 94: robots/2-8-6.pl, test_cost: 0, train_cost: 0, time: 0.0021979880000000014, length: 28, iterations: 182"}
{"test_case": 95, "data": "MetropolisHasting 95: robots/2-8-7.pl, test_cost: 0, train_cost: 0, time: 3.09579999999976e-05, length: 3, iterations: 1"}
{"test_case": 96, "data": "MetropolisHasting 96: robots/2-8-8.pl, test_cost: 0, train_cost: 0, time: 0.00023318699999999928, length: 4, iterations: 21"}
{"test_case": 97, "data": "MetropolisHasting 97: robots/2-8-9.pl, test_cost: 0, train_cost: 0, time: 0.009708388000000002, length: 43, iterations: 806"}
{"test_case": 98, "data": "MetropolisHasting 98: robots/2-8-10.pl, test_cost: 0, train_cost: 0, time: 0.042037264000000005, length: 131, iterations: 2189"}
{"test_case": 99, "data": "MetropolisHasting 99: robots/2-9-0.pl, test_cost: 0, train_cost: 0, time: 0.0035770990000000003, length: 51, iterations: 258"}
{"test_case": 100, "data": "MetropolisHasting 100: robots/2-9-1.pl, test_cost: 0, train_cost: 0, time: 0.004560724999999999, length: 7, iterations: 399"}
{"test_case": 101, "data": "MetropolisHasting 101: robots/2-9-2.pl, test_cost: 0, train_cost: 0, time: 0.013870199000000001, length: 57, iterations: 953"}
{"test_case": 102, "data": "MetropolisHasting 102: robots/2-9-3.pl, test_cost: 0, train_cost: 0, time: 0.0005474759999999981, length: 13, iterations: 50"}
{"test_case": 103, "data": "MetropolisHasting 103: robots/2-9-4.pl, test_cost: 0, train_cost: 0, time: 0.000415571, length: 9, iterations: 38"}
{"test_case": 104, "data": "MetropolisHasting 104: robots/2-9-5.pl, test_cost: 0, train_cost: 0, time: 0.007173033000000002, length: 32, iterations: 561"}
{"test_case": 105, "data": "MetropolisHasting 105: robots/2-9-6.pl, test_cost: 0, train_cost: 0, time: 0.009070018, length: 17, iterations: 778"}
{"test_case": 106, "data": "MetropolisHasting 106: robots/2-9-7.pl, test_cost: 0, train_cost: 0, time: 3.8160999999994893e-05, length: 0, iterations: 2"}
{"test_case": 107, "data": "MetropolisHasting 107: robots/2-9-8.pl, test_cost: 0, train_cost: 0, time: 0.0015432810000000005, length: 7, iterations: 153"}
{"test_case": 108, "data": "MetropolisHasting 108: robots/2-9-9.pl, test_cost: 0, train_cost: 0, time: 0.0017336569999999996, length: 9, iterations: 151"}
{"test_case": 109, "data": "MetropolisHasting 109: robots/2-9-10.pl, test_cost: 0, train_cost: 0, time: 0.004046551000000002, length: 19, iterations: 368"}
{"test_case": 110, "data": "MetropolisHasting 110: robots/4-0-0.pl, test_cost: 0, train_cost: 0, time: 0.0037916170000000006, length: 30, iterations: 261"}
{"test_case": 111, "data": "MetropolisHasting 111: robots/4-0-1.pl, test_cost: 0, train_cost: 0, time: 0.023356586999999998, length: 141, iterations: 975"}
{"test_case": 112, "data": "MetropolisHasting 112: robots/4-0-2.pl, test_cost: 0, train_cost: 0, time: 0.056323191999999994, length: 211, iterations: 2580"}
{"test_case": 113, "data": "MetropolisHasting 113: robots/4-0-3.pl, test_cost: 0, train_cost: 0, time: 0.021142113000000004, length: 79, iterations: 1194"}
{"test_case": 114, "data": "MetropolisHasting 114: robots/4-0-4.pl, test_cost: 0, train_cost: 0, time: 0.0006858930000000069, length: 31, iterations: 53"}
{"test_case": 115, "data": "MetropolisHasting 115: robots/4-0-5.pl, test_cost: 0, train_cost: 0, time: 0.025896292, length: 98, iterations: 1483"}
{"test_case": 116, "data": "MetropolisHasting 116: robots/4-0-6.pl, test_cost: 0, train_cost: 0, time: 0.016748022, length: 103, iterations: 848"}
{"test_case": 117, "data": "MetropolisHasting 117: robots/4-0-7.pl, test_cost: 0, train_cost: 0, time: 0.007044031999999978, length: 84, iterations: 425"}
{"test_case": 118, "data": "MetropolisHasting 118: robots/4-0-8.pl, test_cost: 0, train_cost: 0, time: 0.01583268900000001, length: 39, iterations: 1286"}
{"test_case": 119, "data": "MetropolisHasting 119: robots/4-0-9.pl, test_cost: 0, train_cost: 0, time: 0.0038066370000000016, length: 16, iterations: 300"}
{"test_case": 120, "data": "MetropolisHasting 120: robots/4-0-10.pl, test_cost: 0, train_cost: 0, time: 0.042112128, length: 174, iterations: 1824"}
{"test_case": 121, "data": "MetropolisHasting 121: robots/4-1-0.pl, test_cost: 0, train_cost: 0, time: 0.040298531, length: 162, iterations: 1786"}
{"test_case": 122, "data": "MetropolisHasting 122: robots/4-1-1.pl, test_cost: 0, train_cost: 0, time: 0.0018608950000000013, length: 23, iterations: 153"}
{"test_case": 123, "data": "MetropolisHasting 123: robots/4-1-2.pl, test_cost: 0, train_cost: 0, time: 0.013327392999999993, length: 71, iterations: 898"}
{"test_case": 124, "data": "MetropolisHasting 124: robots/4-1-3.pl, test_cost: 0, train_cost: 0, time: 0.01135401200000001, length: 21, iterations: 958"}
{"test_case": 125, "data": "MetropolisHasting 125: robots/4-1-4.pl, test_cost: 0, train_cost: 0, time: 0.015575188000000018, length: 54, iterations: 1063"}
{"test_case": 126, "data": "MetropolisHasting 126: robots/4-1-5.pl, test_cost: 0, train_cost: 0, time: 0.019307803000000012, length: 98, iterations: 1023"}
{"test_case": 127, "data": "MetropolisHasting 127: robots/4-1-6.pl, test_cost: 0, train_cost: 0, time: 0.04253710299999999, length: 64, iterations: 3338"}
{"test_case": 128, "data": "MetropolisHasting 128: robots/4-1-7.pl, test_cost: 0, train_cost: 0, time: 0.014402865999999986, length: 103, iterations: 839"}
{"test_case": 129, "data": "MetropolisHasting 129: robots/4-1-8.pl, test_cost: 0, train_cost: 0, time: 0.03535334300000001, length: 25, iterations: 2414"}
{"test_case": 130, "data": "MetropolisHasting 130: robots/4-1-9.pl, test_cost: 0, train_cost: 0, time: 0.008479012000000001, length: 73, iterations: 548"}
{"test_case": 131, "data": "MetropolisHasting 131: robots/4-1-10.pl, test_cost: 0, train_cost: 0, time: 1.171833748, length: 237, iterations: 15119"}
{"test_case": 132, "data": "MetropolisHasting 132: robots/4-2-0.pl, test_cost: 0, train_cost: 0, time: 0.02226848799999992, length: 188, iterations: 877"}
{"test_case": 133, "data": "MetropolisHasting 133: robots/4-2-1.pl, test_cost: 0, train_cost: 0, time: 0.01914113900000003, length: 36, iterations: 1598"}
{"test_case": 134, "data": "MetropolisHasting 134: robots/4-2-2.pl, test_cost: 0, train_cost: 0, time: 3.5613312949999996, length: 1922, iterations: 26691"}
{"test_case": 135, "data": "MetropolisHasting 135: robots/4-2-3.pl, test_cost: 0, train_cost: 0, time: 0.010113301000000519, length: 82, iterations: 647"}
{"test_case": 136, "data": "MetropolisHasting 136: robots/4-2-4.pl, test_cost: 0, train_cost: 0, time: 0.016485766999999818, length: 21, iterations: 1148"}
{"test_case": 137, "data": "MetropolisHasting 137: robots/4-2-5.pl, test_cost: 0, train_cost: 0, time: 0.029099277000000257, length: 42, iterations: 1845"}
{"test_case": 138, "data": "MetropolisHasting 138: robots/4-2-6.pl, test_cost: 0, train_cost: 0, time: 0.02112000199999997, length: 102, iterations: 954"}
{"test_case": 139, "data": "MetropolisHasting 139: robots/4-2-7.pl, test_cost: 0, train_cost: 0, time: 0.004402852999999318, length: 50, iterations: 311"}
{"test_case": 140, "data": "MetropolisHasting 140: robots/4-2-8.pl, test_cost: 0, train_cost: 0, time: 0.013809329, length: 31, iterations: 984"}
{"test_case": 141, "data": "MetropolisHasting 141: robots/4-2-9.pl, test_cost: 0, train_cost: 0, time: 0.028598351, length: 124, iterations: 1359"}
{"test_case": 142, "data": "MetropolisHasting 142: robots/4-2-10.pl, test_cost: 0, train_cost: 0, time: 0.008840245000000004, length: 67, iterations: 600"}
{"test_case": 143, "data": "MetropolisHasting 143: robots/4-3-0.pl, test_cost: 0, train_cost: 0, time: 0.005856416000000003, length: 35, iterations: 457"}
{"test_case": 144, "data": "MetropolisHasting 144: robots/4-3-1.pl, test_cost: 0, train_cost: 0, time: 0.013129346000000007, length: 31, iterations: 1141"}
{"test_case": 145, "data": "MetropolisHasting 145: robots/4-3-2.pl, test_cost: 0, train_cost: 0, time: 0.003338894000000009, length: 35, iterations: 241"}
{"test_case": 146, "data": "MetropolisHasting 146: robots/4-3-3.pl, test_cost: 0, train_cost: 0, time: 0.018169117, length: 58, iterations: 1428"}
{"test_case": 147, "data": "MetropolisHasting 147: robots/4-3-4.pl, test_cost: 0, train_cost: 0, time: 0.03750896099999999, length: 99, iterations: 1832"}
{"test_case": 148, "data": "MetropolisHasting 148: robots/4-3-5.pl, test_cost: 0, train_cost: 0, time: 0.015708237999999985, length: 48, iterations: 947"}
{"test_case": 149, "data": "MetropolisHasting 149: robots/4-3-6.pl, test_cost: 0, train_cost: 0, time: 0.044639908000000006, length: 132, iterations: 2105"}
{"test_case": 150, "data": "MetropolisHasting 150: robots/4-3-7.pl, test_cost: 0, train_cost: 0, time: 0.006778775999999999, length: 57, iterations: 397"}
{"test_case": 151, "data": "MetropolisHasting 151: robots/4-3-8.pl, test_cost: 0, train_cost: 0, time: 0.007223517999999998, length: 89, iterations: 419"}
{"test_case": 152, "data": "MetropolisHasting 152: robots/4-3-9.pl, test_cost: 0, train_cost: 0, time: 0.071725894, length: 177, iterations: 3064"}
{"test_case": 153, "data": "MetropolisHasting 153: robots/4-3-10.pl, test_cost: 0, train_cost: 0, time: 0.008859071999999996, length: 54, iterations: 664"}
{"test_case": 154, "data": "MetropolisHasting 154: robots/4-4-0.pl, test_cost: 0, train_cost: 0, time: 0.009824898999999998, length: 37, iterations: 735"}
{"test_case": 155, "data": "MetropolisHasting 155: robots/4-4-1.pl, test_cost: 0, train_cost: 0, time: 0.22303550600000002, length: 203, iterations: 7481"}
{"test_case": 156, "data": "MetropolisHasting 156: robots/4-4-2.pl, test_cost: 0, train_cost: 0, time: 0.00018236999999998726, length: 12, iterations: 13"}
{"test_case": 157, "data": "MetropolisHasting 157: robots/4-4-3.pl, test_cost: 0, train_cost: 0, time: 0.009374082000000006, length: 59, iterations: 639"}
{"test_case": 158, "data": "MetropolisHasting 158: robots/4-4-4.pl, test_cost: 0, train_cost: 0, time: 0.009863913999999974, length: 31, iterations: 811"}
{"test_case": 159, "data": "MetropolisHasting 159: robots/4-4-5.pl, test_cost: 0, train_cost: 0, time: 0.005527209000000033, length: 39, iterations: 419"}
{"test_case": 160, "data": "MetropolisHasting 160: robots/4-4-6.pl, test_cost: 0, train_cost: 0, time: 0.014435143000000001, length: 113, iterations: 811"}
{"test_case": 161, "data": "MetropolisHasting 161: robots/4-4-7.pl, test_cost: 0, train_cost: 0, time: 0.087900718, length: 310, iterations: 2369"}
{"test_case": 162, "data": "MetropolisHasting 162: robots/4-4-8.pl, test_cost: 0, train_cost: 0, time: 0.0017572679999999924, length: 10, iterations: 149"}
{"test_case": 163, "data": "MetropolisHasting 163: robots/4-4-9.pl, test_cost: 0, train_cost: 0, time: 0.04579921799999999, length: 218, iterations: 1847"}
{"test_case": 164, "data": "MetropolisHasting 164: robots/4-4-10.pl, test_cost: 0, train_cost: 0, time: 0.04742770000000002, length: 72, iterations: 2426"}
{"test_case": 165, "data": "MetropolisHasting 165: robots/4-5-0.pl, test_cost: 0, train_cost: 0, time: 0.0035259960000000035, length: 20, iterations: 275"}
{"test_case": 166, "data": "MetropolisHasting 166: robots/4-5-1.pl, test_cost: 0, train_cost: 0, time: 0.00013194699999999338, length: 4, iterations: 10"}
{"test_case": 167, "data": "MetropolisHasting 167: robots/4-5-2.pl, test_cost: 0, train_cost: 0, time: 0.0006787279999999896, length: 7, iterations: 60"}
{"test_case": 168, "data": "MetropolisHasting 168: robots/4-5-3.pl, test_cost: 0, train_cost: 0, time: 0.011832557999999993, length: 90, iterations: 650"}
{"test_case": 169, "data": "MetropolisHasting 169: robots/4-5-4.pl, test_cost: 0, train_cost: 0, time: 0.021285096000000003, length: 17, iterations: 1315"}
{"test_case": 170, "data": "MetropolisHasting 170: robots/4-5-5.pl, test_cost: 0, train_cost: 0, time: 7.921772863999999, length: 2801, iterations: 37846"}
{"test_case": 171, "data": "MetropolisHasting 171: robots/4-5-6.pl, test_cost: 0, train_cost: 0, time: 0.03650573599999962, length: 39, iterations: 2453"}
{"test_case": 172, "data": "MetropolisHasting 172: robots/4-5-7.pl, test_cost: 0, train_cost: 0, time: 0.07294860400000047, length: 30, iterations: 3778"}
{"test_case": 173, "data": "MetropolisHasting 173: robots/4-5-8.pl, test_cost: 0, train_cost: 0, time: 2.6687603099999997, length: 1686, iterations: 21568"}
{"test_case": 174, "data": "MetropolisHasting 174: robots/4-5-9.pl, test_cost: 0, train_cost: 0, time: 0.7743301670000005, length: 847, iterations: 11462"}
{"test_case": 175, "data": "MetropolisHasting 175: robots/4-5-10.pl, test_cost: 0, train_cost: 0, time: 0.002136486999999576, length: 29, iterations: 181"}
{"test_case": 176, "data": "MetropolisHasting 176: robots/4-6-0.pl, test_cost: 0, train_cost: 0, time: 0.021496790000000487, length: 63, iterations: 1542"}
{"test_case": 177, "data": "MetropolisHasting 177: robots/4-6-1.pl, test_cost: 0, train_cost: 0, time: 0.004463375000000269, length: 2, iterations: 421"}
{"test_case": 178, "data": "MetropolisHasting 178: robots/4-6-2.pl, test_cost: 0, train_cost: 0, time: 0.00247955000000033, length: 28, iterations: 203"}
{"test_case": 179, "data": "MetropolisHasting 179: robots/4-6-3.pl, test_cost: 0, train_cost: 0, time: 0.00011430300000014881, length: 5, iterations: 8"}
{"test_case": 180, "data": "MetropolisHasting 180: robots/4-6-4.pl, test_cost: 0, train_cost: 0, time: 0.001089428, length: 13, iterations: 77"}
{"test_case": 181, "data": "MetropolisHasting 181: robots/4-6-5.pl, test_cost: 0, train_cost: 0, time: 0.019245118000000002, length: 28, iterations: 1146"}
{"test_case": 182, "data": "MetropolisHasting 182: robots/4-6-6.pl, test_cost: 0, train_cost: 0, time: 0.0022752420000000002, length: 41, iterations: 177"}
{"test_case": 183, "data": "MetropolisHasting 183: robots/4-6-7.pl, test_cost: 0, train_cost: 0, time: 0.009173289999999997, length: 74, iterations: 564"}
{"test_case": 184, "data": "MetropolisHasting 184: robots/4-6-8.pl, test_cost: 0, train_cost: 0, time: 0.033188108, length: 130, iterations: 1634"}
{"test_case": 185, "data": "MetropolisHasting 185: robots/4-6-9.pl, test_cost: 0, train_cost: 0, time: 0.027777891, length: 23, iterations: 1726"}
{"test_case": 186, "data": "MetropolisHasting 186: robots/4-6-10.pl, test_cost: 0, train_cost: 0, time: 0.004380421999999995, length: 22, iterations: 371"}
{"test_case": 187, "data": "MetropolisHasting 187: robots/4-7-0.pl, test_cost: 0, train_cost: 0, time: 4.373000000000571e-05, length: 3, iterations: 2"}
{"test_case": 188, "data": "MetropolisHasting 188: robots/4-7-1.pl, test_cost: 0, train_cost: 0, time: 3.05857917, length: 1813, iterations: 21360"}
{"test_case": 189, "data": "MetropolisHasting 189: robots/4-7-2.pl, test_cost: 0, train_cost: 0, time: 0.18423285099999998, length: 201, iterations: 6311"}
{"test_case": 190, "data": "MetropolisHasting 190: robots/4-7-3.pl, test_cost: 0, train_cost: 0, time: 0.011785898999999999, length: 49, iterations: 806"}
{"test_case": 191, "data": "MetropolisHasting 191: robots/4-7-4.pl, test_cost: 0, train_cost: 0, time: 0.12052627500000002, length: 108, iterations: 4087"}
{"test_case": 192, "data": "MetropolisHasting 192: robots/4-7-5.pl, test_cost: 0, train_cost: 0, time: 0.186168195, length: 420, iterations: 5230"}
{"test_case": 193, "data": "MetropolisHasting 193: robots/4-7-6.pl, test_cost: 0, train_cost: 0, time: 0.0008524200000000204, length: 20, iterations: 67"}
{"test_case": 194, "data": "MetropolisHasting 194: robots/4-7-7.pl, test_cost: 0, train_cost: 0, time: 0.0006272599999999628, length: 17, iterations: 52"}
{"test_case": 195, "data": "MetropolisHasting 195: robots/4-7-8.pl, test_cost: 0, train_cost: 0, time: 0.7256899060000002, length: 935, iterations: 9371"}
{"test_case": 196, "data": "MetropolisHasting 196: robots/4-7-9.pl, test_cost: 0, train_cost: 0, time: 0.03011826800000006, length: 162, iterations: 1314"}
{"test_case": 197, "data": "MetropolisHasting 197: robots/4-7-10.pl, test_cost: 0, train_cost: 0, time: 0.002201067000000112, length: 35, iterations: 173"}
{"test_case": 198, "data": "MetropolisHasting 198: robots/4-8-0.pl, test_cost: 0, train_cost: 0, time: 0.02658023300000001, length: 116, iterations: 1243"}
{"test_case": 199, "data": "MetropolisHasting 199: robots/4-8-1.pl, test_cost: 0, train_cost: 0, time: 0.003798221000000046, length: 25, iterations: 271"}
{"test_case": 200, "data": "MetropolisHasting 200: robots/4-8-2.pl, test_cost: 0, train_cost: 0, time: 0.009820757, length: 68, iterations: 577"}
{"test_case": 201, "data": "MetropolisHasting 201: robots/4-8-3.pl, test_cost: 0, train_cost: 0, time: 0.013693266, length: 82, iterations: 808"}
{"test_case": 202, "data": "MetropolisHasting 202: robots/4-8-4.pl, test_cost: 0, train_cost: 0, time: 0.027431106, length: 33, iterations: 2332"}
{"test_case": 203, "data": "MetropolisHasting 203: robots/4-8-5.pl, test_cost: 0, train_cost: 0, time: 0.284822423, length: 397, iterations: 8430"}
{"test_case": 204, "data": "MetropolisHasting 204: robots/4-8-6.pl, test_cost: 0, train_cost: 0, time: 0.020890275000000014, length: 27, iterations: 1542"}
{"test_case": 205, "data": "MetropolisHasting 205: robots/4-8-7.pl, test_cost: 0, train_cost: 0, time: 0.037326868999999985, length: 116, iterations: 2230"}
{"test_case": 206, "data": "MetropolisHasting 206: robots/4-8-8.pl, test_cost: 0, train_cost: 0, time: 0.01038212799999999, length: 62, iterations: 698"}
{"test_case": 207, "data": "MetropolisHasting 207: robots/4-8-9.pl, test_cost: 0, train_cost: 0, time: 0.007582758000000023, length: 63, iterations: 486"}
{"test_case": 208, "data": "MetropolisHasting 208: robots/4-8-10.pl, test_cost: 0, train_cost: 0, time: 0.010800578999999977, length: 40, iterations: 748"}
{"test_case": 209, "data": "MetropolisHasting 209: robots/4-9-0.pl, test_cost: 0, train_cost: 0, time: 0.008054969999999995, length: 22, iterations: 652"}
{"test_case": 210, "data": "MetropolisHasting 210: robots/4-9-1.pl, test_cost: 0, train_cost: 0, time: 0.0007855350000000004, length: 18, iterations: 47"}
{"test_case": 211, "data": "MetropolisHasting 211: robots/4-9-2.pl, test_cost: 0, train_cost: 0, time: 0.018386582, length: 87, iterations: 980"}
{"test_case": 212, "data": "MetropolisHasting 212: robots/4-9-3.pl, test_cost: 0, train_cost: 0, time: 0.0046154839999999996, length: 61, iterations: 321"}
{"test_case": 213, "data": "MetropolisHasting 213: robots/4-9-4.pl, test_cost: 0, train_cost: 0, time: 0.045122653000000006, length: 160, iterations: 2332"}
{"test_case": 214, "data": "MetropolisHasting 214: robots/4-9-5.pl, test_cost: 0, train_cost: 0, time: 0.034684959, length: 84, iterations: 2328"}
{"test_case": 215, "data": "MetropolisHasting 215: robots/4-9-6.pl, test_cost: 0, train_cost: 0, time: 0.005530860999999998, length: 27, iterations: 456"}
{"test_case": 216, "data": "MetropolisHasting 216: robots/4-9-7.pl, test_cost: 0, train_cost: 0, time: 0.04655799799999999, length: 192, iterations: 2187"}
{"test_case": 217, "data": "MetropolisHasting 217: robots/4-9-8.pl, test_cost: 0, train_cost: 0, time: 0.0066519520000000165, length: 47, iterations: 478"}
{"test_case": 218, "data": "MetropolisHasting 218: robots/4-9-9.pl, test_cost: 0, train_cost: 0, time: 1.8467695859999997, length: 162, iterations: 17887"}
{"test_case": 219, "data": "MetropolisHasting 219: robots/4-9-10.pl, test_cost: 0, train_cost: 0, time: 0.09631317900000003, length: 97, iterations: 4880"}
{"test_case": 220, "data": "MetropolisHasting 220: robots/6-0-0.pl, test_cost: 0, train_cost: 0, time: 0.051837479, length: 226, iterations: 2616"}
{"test_case": 221, "data": "MetropolisHasting 221: robots/6-0-1.pl, test_cost: 0, train_cost: 0, time: 0.0029262349999999993, length: 34, iterations: 222"}
{"test_case": 222, "data": "MetropolisHasting 222: robots/6-0-2.pl, test_cost: 0, train_cost: 0, time: 13.861572728, length: 4883, iterations: 42066"}
{"test_case": 223, "data": "MetropolisHasting 223: robots/6-0-3.pl, test_cost: 0, train_cost: 0, time: 0.016754392999999368, length: 95, iterations: 1160"}
{"test_case": 224, "data": "MetropolisHasting 224: robots/6-0-4.pl, test_cost: 0, train_cost: 0, time: 0.01935759999999931, length: 155, iterations: 943"}
{"test_case": 225, "data": "MetropolisHasting 225: robots/6-0-5.pl, test_cost: 0, train_cost: 0, time: 0.03979826700000011, length: 179, iterations: 2124"}
{"test_case": 226, "data": "MetropolisHasting 226: robots/6-0-6.pl, test_cost: 0, train_cost: 0, time: 0.21557083799999965, length: 508, iterations: 4091"}
{"test_case": 227, "data": "MetropolisHasting 227: robots/6-0-7.pl, test_cost: 0, train_cost: 0, time: 0.16481021300000087, length: 522, iterations: 3802"}
{"test_case": 228, "data": "MetropolisHasting 228: robots/6-0-8.pl, test_cost: 0, train_cost: 0, time: 0.00981428999999956, length: 89, iterations: 596"}
{"test_case": 229, "data": "MetropolisHasting 229: robots/6-0-9.pl, test_cost: 0, train_cost: 0, time: 0.00043891800000039893, length: 6, iterations: 43"}
{"test_case": 230, "data": "MetropolisHasting 230: robots/6-0-10.pl, test_cost: 0, train_cost: 0, time: 0.013055141999999992, length: 80, iterations: 755"}
{"test_case": 231, "data": "MetropolisHasting 231: robots/6-1-0.pl, test_cost: 0, train_cost: 0, time: 0.013183756000000005, length: 107, iterations: 678"}
{"test_case": 232, "data": "MetropolisHasting 232: robots/6-1-1.pl, test_cost: 0, train_cost: 0, time: 0.012531634, length: 36, iterations: 909"}
{"test_case": 233, "data": "MetropolisHasting 233: robots/6-1-2.pl, test_cost: 0, train_cost: 0, time: 0.021830244, length: 43, iterations: 1862"}
{"test_case": 234, "data": "MetropolisHasting 234: robots/6-1-3.pl, test_cost: 0, train_cost: 0, time: 0.09159433099999999, length: 414, iterations: 2219"}
{"test_case": 235, "data": "MetropolisHasting 235: robots/6-1-4.pl, test_cost: 0, train_cost: 0, time: 0.098743851, length: 266, iterations: 3418"}
{"test_case": 236, "data": "MetropolisHasting 236: robots/6-1-5.pl, test_cost: 0, train_cost: 0, time: 0.014924924999999978, length: 119, iterations: 853"}
{"test_case": 237, "data": "MetropolisHasting 237: robots/6-1-6.pl, test_cost: 0, train_cost: 0, time: 0.03723440299999997, length: 65, iterations: 2529"}
{"test_case": 238, "data": "MetropolisHasting 238: robots/6-1-7.pl, test_cost: 0, train_cost: 0, time: 6.5225802029999995, length: 3054, iterations: 26487"}
{"test_case": 239, "data": "MetropolisHasting 239: robots/6-1-8.pl, test_cost: 0, train_cost: 0, time: 0.0028032339999999323, length: 16, iterations: 219"}
{"test_case": 240, "data": "MetropolisHasting 240: robots/6-1-9.pl, test_cost: 0, train_cost: 0, time: 0.027584271, length: 164, iterations: 1219"}
{"test_case": 241, "data": "MetropolisHasting 241: robots/6-1-10.pl, test_cost: 0, train_cost: 0, time: 0.022151401, length: 143, iterations: 1237"}
{"test_case": 242, "data": "MetropolisHasting 242: robots/6-2-0.pl, test_cost: 0, train_cost: 0, time: 0.054584351, length: 199, iterations: 2061"}
{"test_case": 243, "data": "MetropolisHasting 243: robots/6-2-1.pl, test_cost: 0, train_cost: 0, time: 24.713765613000003, length: 134, iterations: 58338"}
{"test_case": 244, "data": "MetropolisHasting 244: robots/6-2-2.pl, test_cost: 0, train_cost: 0, time: 0.17140658900000005, length: 378, iterations: 5580"}
{"test_case": 245, "data": "MetropolisHasting 245: robots/6-2-3.pl, test_cost: 0, train_cost: 0, time: 0.11883675400000016, length: 436, iterations: 2940"}
{"test_case": 246, "data": "MetropolisHasting 246: robots/6-2-4.pl, test_cost: 0, train_cost: 0, time: 0.1147396260000022, length: 355, iterations: 3246"}
{"test_case": 247, "data": "MetropolisHasting 247: robots/6-2-5.pl, test_cost: 0, train_cost: 0, time: 0.06478362200000021, length: 224, iterations: 2412"}
{"test_case": 248, "data": "MetropolisHasting 248: robots/6-2-6.pl, test_cost: 0, train_cost: 0, time: 0.039577467000000865, length: 159, iterations: 1590"}
{"test_case": 249, "data": "MetropolisHasting 249: robots/6-2-7.pl, test_cost: 0, train_cost: 0, time: 0.11859399299999751, length: 226, iterations: 4821"}
{"test_case": 250, "data": "MetropolisHasting 250: robots/6-2-8.pl, test_cost: 0, train_cost: 0, time: 0.006366518999999999, length: 23, iterations: 419"}
{"test_case": 251, "data": "MetropolisHasting 251: robots/6-2-9.pl, test_cost: 0, train_cost: 0, time: 0.7063824759999999, length: 1016, iterations: 8690"}
{"test_case": 252, "data": "MetropolisHasting 252: robots/6-2-10.pl, test_cost: 0, train_cost: 0, time: 0.03378767700000007, length: 83, iterations: 2130"}
{"test_case": 253, "data": "MetropolisHasting 253: robots/6-3-0.pl, test_cost: 0, train_cost: 0, time: 0.11653611500000005, length: 351, iterations: 2954"}
{"test_case": 254, "data": "MetropolisHasting 254: robots/6-3-1.pl, test_cost: 0, train_cost: 0, time: 0.596737688, length: 931, iterations: 7580"}
{"test_case": 255, "data": "MetropolisHasting 255: robots/6-3-2.pl, test_cost: 0, train_cost: 0, time: 0.0011915200000001125, length: 31, iterations: 88"}
{"test_case": 256, "data": "MetropolisHasting 256: robots/6-3-3.pl, test_cost: 0, train_cost: 0, time: 0.07031902800000012, length: 210, iterations: 2751"}
{"test_case": 257, "data": "MetropolisHasting 257: robots/6-3-4.pl, test_cost: 0, train_cost: 0, time: 0.008489411000000002, length: 66, iterations: 533"}
{"test_case": 258, "data": "MetropolisHasting 258: robots/6-3-5.pl, test_cost: 0, train_cost: 0, time: 0.8629139450000001, length: 1072, iterations: 9693"}
{"test_case": 259, "data": "MetropolisHasting 259: robots/6-3-6.pl, test_cost: 0, train_cost: 0, time: 0.07191850300000002, length: 302, iterations: 2189"}
{"test_case": 260, "data": "MetropolisHasting 260: robots/6-3-7.pl, test_cost: 0, train_cost: 0, time: 0.184094985, length: 448, iterations: 3778"}
{"test_case": 261, "data": "MetropolisHasting 261: robots/6-3-8.pl, test_cost: 0, train_cost: 0, time: 1.144912252, length: 1374, iterations: 10886"}
{"test_case": 262, "data": "MetropolisHasting 262: robots/6-3-9.pl, test_cost: 0, train_cost: 0, time: 0.022228409000000005, length: 58, iterations: 1411"}
{"test_case": 263, "data": "MetropolisHasting 263: robots/6-3-10.pl, test_cost: 0, train_cost: 0, time: 1.0288069160000002, length: 824, iterations: 14100"}
{"test_case": 264, "data": "MetropolisHasting 264: robots/6-4-0.pl, test_cost: 0, train_cost: 0, time: 5.157208549, length: 2737, iterations: 24578"}
{"test_case": 265, "data": "MetropolisHasting 265: robots/6-4-1.pl, test_cost: 0, train_cost: 0, time: 0.023380476000000705, length: 131, iterations: 989"}
{"test_case": 266, "data": "MetropolisHasting 266: robots/6-4-2.pl, test_cost: 0, train_cost: 0, time: 0.10441536400000029, length: 318, iterations: 2815"}
{"test_case": 267, "data": "MetropolisHasting 267: robots/6-4-3.pl, test_cost: 0, train_cost: 0, time: 0.44140220499999927, length: 775, iterations: 9200"}
{"test_case": 268, "data": "MetropolisHasting 268: robots/6-4-4.pl, test_cost: 0, train_cost: 0, time: 0.008013081999999727, length: 42, iterations: 590"}
{"test_case": 269, "data": "MetropolisHasting 269: robots/6-4-5.pl, test_cost: 0, train_cost: 0, time: 0.021656841000000426, length: 31, iterations: 1964"}
{"test_case": 270, "data": "MetropolisHasting 270: robots/6-4-6.pl, test_cost: 0, train_cost: 0, time: 0.012132182999999998, length: 84, iterations: 726"}
{"test_case": 271, "data": "MetropolisHasting 271: robots/6-4-7.pl, test_cost: 0, train_cost: 0, time: 0.009747995999999995, length: 110, iterations: 524"}
{"test_case": 272, "data": "MetropolisHasting 272: robots/6-4-8.pl, test_cost: 0, train_cost: 0, time: 5.22256188, length: 309, iterations: 26130"}
{"test_case": 273, "data": "MetropolisHasting 273: robots/6-4-9.pl, test_cost: 0, train_cost: 0, time: 0.012717598000000052, length: 59, iterations: 934"}
{"test_case": 274, "data": "MetropolisHasting 274: robots/6-4-10.pl, test_cost: 0, train_cost: 0, time: 0.020230093000000338, length: 130, iterations: 973"}
{"test_case": 275, "data": "MetropolisHasting 275: robots/6-5-0.pl, test_cost: 0, train_cost: 0, time: 0.004653797000000459, length: 47, iterations: 375"}
{"test_case": 276, "data": "MetropolisHasting 276: robots/6-5-1.pl, test_cost: 0, train_cost: 0, time: 0.0035289230000001837, length: 28, iterations: 248"}
{"test_case": 277, "data": "MetropolisHasting 277: robots/6-5-2.pl, test_cost: 0, train_cost: 0, time: 0.014001941000000073, length: 33, iterations: 1072"}
{"test_case": 278, "data": "MetropolisHasting 278: robots/6-5-3.pl, test_cost: 0, train_cost: 0, time: 0.11476560899999999, length: 346, iterations: 2899"}
{"test_case": 279, "data": "MetropolisHasting 279: robots/6-5-4.pl, test_cost: 0, train_cost: 0, time: 0.013399564000000197, length: 102, iterations: 792"}
{"test_case": 280, "data": "MetropolisHasting 280: robots/6-5-5.pl, test_cost: 0, train_cost: 0, time: 0.037443330999999996, length: 181, iterations: 1558"}
{"test_case": 281, "data": "MetropolisHasting 281: robots/6-5-6.pl, test_cost: 0, train_cost: 0, time: 0.028301182, length: 98, iterations: 1401"}
{"test_case": 282, "data": "MetropolisHasting 282: robots/6-5-7.pl, test_cost: 0, train_cost: 0, time: 0.715772826, length: 1106, iterations: 8436"}
{"test_case": 283, "data": "MetropolisHasting 283: robots/6-5-8.pl, test_cost: 0, train_cost: 0, time: 0.03824003399999998, length: 56, iterations: 2688"}
{"test_case": 284, "data": "MetropolisHasting 284: robots/6-5-9.pl, test_cost: 0, train_cost: 0, time: 1.316164059, length: 1457, iterations: 11114"}
{"test_case": 285, "data": "MetropolisHasting 285: robots/6-5-10.pl, test_cost: 0, train_cost: 0, time: 0.2714925909999999, length: 530, iterations: 5108"}
{"test_case": 286, "data": "MetropolisHasting 286: robots/6-6-0.pl, test_cost: 0, train_cost: 0, time: 0.06567459600000003, length: 200, iterations: 2489"}
{"test_case": 287, "data": "MetropolisHasting 287: robots/6-6-1.pl, test_cost: 0, train_cost: 0, time: 0.021562087000000396, length: 151, iterations: 952"}
{"test_case": 288, "data": "MetropolisHasting 288: robots/6-6-2.pl, test_cost: 0, train_cost: 0, time: 0.059466791000000185, length: 66, iterations: 2376"}
{"test_case": 289, "data": "MetropolisHasting 289: robots/6-6-3.pl, test_cost: 0, train_cost: 0, time: 0.08604167699999987, length: 97, iterations: 3163"}
{"test_case": 290, "data": "MetropolisHasting 290: robots/6-6-4.pl, test_cost: 0, train_cost: 0, time: 0.063058904, length: 72, iterations: 4360"}
{"test_case": 291, "data": "MetropolisHasting 291: robots/6-6-5.pl, test_cost: 0, train_cost: 0, time: 0.031855614000000004, length: 66, iterations: 2333"}
{"test_case": 292, "data": "MetropolisHasting 292: robots/6-6-6.pl, test_cost: 0, train_cost: 0, time: 0.905420931, length: 391, iterations: 10795"}
{"test_case": 293, "data": "MetropolisHasting 293: robots/6-6-7.pl, test_cost: 0, train_cost: 0, time: 13.129629605, length: 4929, iterations: 35923"}
{"test_case": 294, "data": "MetropolisHasting 294: robots/6-6-8.pl, test_cost: 0, train_cost: 0, time: 0.008955200999999136, length: 86, iterations: 529"}
{"test_case": 295, "data": "MetropolisHasting 295: robots/6-6-9.pl, test_cost: 0, train_cost: 0, time: 0.01424422700000072, length: 91, iterations: 794"}
{"test_case": 296, "data": "MetropolisHasting 296: robots/6-6-10.pl, test_cost: 0, train_cost: 0, time: 0.3777204350000005, length: 612, iterations: 7323"}
{"test_case": 297, "data": "MetropolisHasting 297: robots/6-7-0.pl, test_cost: 0, train_cost: 0, time: 0.12411157699999897, length: 376, iterations: 2685"}
{"test_case": 298, "data": "MetropolisHasting 298: robots/6-7-1.pl, test_cost: 0, train_cost: 0, time: 0.7244404299999996, length: 1070, iterations: 8474"}
{"test_case": 299, "data": "MetropolisHasting 299: robots/6-7-2.pl, test_cost: 0, train_cost: 0, time: 0.5144304040000005, length: 737, iterations: 7636"}
{"test_case": 300, "data": "MetropolisHasting 300: robots/6-7-3.pl, test_cost: 0, train_cost: 0, time: 0.124803859, length: 424, iterations: 3512"}
{"test_case": 301, "data": "MetropolisHasting 301: robots/6-7-4.pl, test_cost: 0, train_cost: 0, time: 3.0109362749999997, length: 2121, iterations: 24449"}
{"test_case": 302, "data": "MetropolisHasting 302: robots/6-7-5.pl, test_cost: 0, train_cost: 0, time: 1.687484398, length: 1752, iterations: 13072"}
{"test_case": 303, "data": "MetropolisHasting 303: robots/6-7-6.pl, test_cost: 8, train_cost: 8, time: 60.001409347999996, length: 10319, iterations: 89497"}
{"test_case": 304, "data": "MetropolisHasting 304: robots/6-7-7.pl, test_cost: 0, train_cost: 0, time: 0.023337752999992745, length: 78, iterations: 1632"}
{"test_case": 305, "data": "MetropolisHasting 305: robots/6-7-8.pl, test_cost: 0, train_cost: 0, time: 0.8336163729999981, length: 200, iterations: 15814"}
{"test_case": 306, "data": "MetropolisHasting 306: robots/6-7-9.pl, test_cost: 0, train_cost: 0, time: 0.038633533999998804, length: 119, iterations: 2053"}
{"test_case": 307, "data": "MetropolisHasting 307: robots/6-7-10.pl, test_cost: 0, train_cost: 0, time: 17.53122086100001, length: 5525, iterations: 44472"}
{"test_case": 308, "data": "MetropolisHasting 308: robots/6-8-0.pl, test_cost: 0, train_cost: 0, time: 28.548975009000003, length: 7811, iterations: 56228"}
{"test_case": 309, "data": "MetropolisHasting 309: robots/6-8-1.pl, test_cost: 0, train_cost: 0, time: 0.005628342999997926, length: 59, iterations: 355"}
{"test_case": 310, "data": "MetropolisHasting 310: robots/6-8-2.pl, test_cost: 0, train_cost: 0, time: 0.076626645, length: 334, iterations: 2126"}
{"test_case": 311, "data": "MetropolisHasting 311: robots/6-8-3.pl, test_cost: 0, train_cost: 0, time: 1.357708454, length: 1559, iterations: 11703"}
{"test_case": 312, "data": "MetropolisHasting 312: robots/6-8-4.pl, test_cost: 0, train_cost: 0, time: 0.948243902, length: 1143, iterations: 10191"}
{"test_case": 313, "data": "MetropolisHasting 313: robots/6-8-5.pl, test_cost: 0, train_cost: 0, time: 0.060208240999999774, length: 206, iterations: 2633"}
{"test_case": 314, "data": "MetropolisHasting 314: robots/6-8-6.pl, test_cost: 0, train_cost: 0, time: 0.14643857500000035, length: 302, iterations: 4729"}
{"test_case": 315, "data": "MetropolisHasting 315: robots/6-8-7.pl, test_cost: 0, train_cost: 0, time: 0.33914595899999966, length: 727, iterations: 5510"}
{"test_case": 316, "data": "MetropolisHasting 316: robots/6-8-8.pl, test_cost: 0, train_cost: 0, time: 0.34193934000000015, length: 752, iterations: 5451"}
{"test_case": 317, "data": "MetropolisHasting 317: robots/6-8-9.pl, test_cost: 0, train_cost: 0, time: 1.9902385619999996, length: 1671, iterations: 15460"}
{"test_case": 318, "data": "MetropolisHasting 318: robots/6-8-10.pl, test_cost: 0, train_cost: 0, time: 32.096043905, length: 878, iterations: 70657"}
{"test_case": 319, "data": "MetropolisHasting 319: robots/6-9-0.pl, test_cost: 0, train_cost: 0, time: 0.04979102200000085, length: 211, iterations: 2259"}
{"test_case": 320, "data": "MetropolisHasting 320: robots/6-9-1.pl, test_cost: 0, train_cost: 0, time: 0.009591826999999999, length: 24, iterations: 698"}
{"test_case": 321, "data": "MetropolisHasting 321: robots/6-9-2.pl, test_cost: 0, train_cost: 0, time: 0.052518303, length: 60, iterations: 3554"}
{"test_case": 322, "data": "MetropolisHasting 322: robots/6-9-3.pl, test_cost: 0, train_cost: 0, time: 0.016295248, length: 91, iterations: 1058"}
{"test_case": 323, "data": "MetropolisHasting 323: robots/6-9-4.pl, test_cost: 0, train_cost: 0, time: 5.850678186, length: 3278, iterations: 26203"}
{"test_case": 324, "data": "MetropolisHasting 324: robots/6-9-5.pl, test_cost: 0, train_cost: 0, time: 0.04386694300000027, length: 176, iterations: 1648"}
{"test_case": 325, "data": "MetropolisHasting 325: robots/6-9-6.pl, test_cost: 0, train_cost: 0, time: 0.17532442899999978, length: 441, iterations: 4451"}
{"test_case": 326, "data": "MetropolisHasting 326: robots/6-9-7.pl, test_cost: 0, train_cost: 0, time: 0.8139477940000006, length: 175, iterations: 16820"}
{"test_case": 327, "data": "MetropolisHasting 327: robots/6-9-8.pl, test_cost: 0, train_cost: 0, time: 0.8159078839999996, length: 1280, iterations: 8341"}
{"test_case": 328, "data": "MetropolisHasting 328: robots/6-9-9.pl, test_cost: 0, train_cost: 0, time: 0.010518140999999481, length: 77, iterations: 617"}
{"test_case": 329, "data": "MetropolisHasting 329: robots/6-9-10.pl, test_cost: 0, train_cost: 0, time: 0.015844967999999682, length: 74, iterations: 894"}
{"test_case": 330, "data": "MetropolisHasting 330: robots/8-0-0.pl, test_cost: 0, train_cost: 0, time: 0.7612533979999999, length: 933, iterations: 10469"}
{"test_case": 331, "data": "MetropolisHasting 331: robots/8-0-1.pl, test_cost: 0, train_cost: 0, time: 0.01703898700000006, length: 119, iterations: 1016"}
{"test_case": 332, "data": "MetropolisHasting 332: robots/8-0-2.pl, test_cost: 0, train_cost: 0, time: 0.04221066899999992, length: 209, iterations: 1729"}
{"test_case": 333, "data": "MetropolisHasting 333: robots/8-0-3.pl, test_cost: 0, train_cost: 0, time: 0.303847793, length: 610, iterations: 6150"}
{"test_case": 334, "data": "MetropolisHasting 334: robots/8-0-4.pl, test_cost: 0, train_cost: 0, time: 31.334871098, length: 8179, iterations: 59976"}
{"test_case": 335, "data": "MetropolisHasting 335: robots/8-0-5.pl, test_cost: 0, train_cost: 0, time: 60.000532222000004, length: 9849, iterations: 73466"}
{"test_case": 336, "data": "MetropolisHasting 336: robots/8-0-6.pl, test_cost: 6, train_cost: 6, time: 60.001925304, length: 11556, iterations: 73555"}
{"test_case": 337, "data": "MetropolisHasting 337: robots/8-0-7.pl, test_cost: 0, train_cost: 0, time: 0.5222229809999988, length: 785, iterations: 9132"}
{"test_case": 338, "data": "MetropolisHasting 338: robots/8-0-8.pl, test_cost: 0, train_cost: 0, time: 0.7521389390000195, length: 851, iterations: 8833"}
{"test_case": 339, "data": "MetropolisHasting 339: robots/8-0-9.pl, test_cost: 0, train_cost: 0, time: 0.02742122099999733, length: 171, iterations: 1375"}
{"test_case": 340, "data": "MetropolisHasting 340: robots/8-0-10.pl, test_cost: 0, train_cost: 0, time: 0.040687443000000004, length: 138, iterations: 1922"}
{"test_case": 341, "data": "MetropolisHasting 341: robots/8-1-0.pl, test_cost: 0, train_cost: 0, time: 17.869709678, length: 6348, iterations: 40828"}
{"test_case": 342, "data": "MetropolisHasting 342: robots/8-1-1.pl, test_cost: 0, train_cost: 0, time: 0.05976578299999957, length: 229, iterations: 1884"}
{"test_case": 343, "data": "MetropolisHasting 343: robots/8-1-2.pl, test_cost: 0, train_cost: 0, time: 1.3689233929999993, length: 1640, iterations: 10510"}
{"test_case": 344, "data": "MetropolisHasting 344: robots/8-1-3.pl, test_cost: 0, train_cost: 0, time: 0.06910367400000084, length: 264, iterations: 2508"}
{"test_case": 345, "data": "MetropolisHasting 345: robots/8-1-4.pl, test_cost: 0, train_cost: 0, time: 0.12920553300000037, length: 272, iterations: 3765"}
{"test_case": 346, "data": "MetropolisHasting 346: robots/8-1-5.pl, test_cost: 0, train_cost: 0, time: 0.3913088360000003, length: 643, iterations: 7493"}
{"test_case": 347, "data": "MetropolisHasting 347: robots/8-1-6.pl, test_cost: 0, train_cost: 0, time: 0.23757572300000263, length: 147, iterations: 5153"}
{"test_case": 348, "data": "MetropolisHasting 348: robots/8-1-7.pl, test_cost: 0, train_cost: 0, time: 1.6669395369999975, length: 1895, iterations: 11181"}
{"test_case": 349, "data": "MetropolisHasting 349: robots/8-1-8.pl, test_cost: 0, train_cost: 0, time: 0.048188545999998667, length: 192, iterations: 2171"}
{"test_case": 350, "data": "MetropolisHasting 350: robots/8-1-9.pl, test_cost: 9, train_cost: 9, time: 60.00030743, length: 10160, iterations: 81050"}
{"test_case": 351, "data": "MetropolisHasting 351: robots/8-1-10.pl, test_cost: 0, train_cost: 0, time: 0.8446685159999987, length: 1067, iterations: 8746"}
{"test_case": 352, "data": "MetropolisHasting 352: robots/8-2-0.pl, test_cost: 0, train_cost: 0, time: 6.426500012999995, length: 671, iterations: 32004"}
{"test_case": 353, "data": "MetropolisHasting 353: robots/8-2-1.pl, test_cost: 0, train_cost: 0, time: 9.496113374999993, length: 4668, iterations: 28374"}
{"test_case": 354, "data": "MetropolisHasting 354: robots/8-2-2.pl, test_cost: 0, train_cost: 0, time: 2.633339362000001, length: 2199, iterations: 18979"}
{"test_case": 355, "data": "MetropolisHasting 355: robots/8-2-3.pl, test_cost: 0, train_cost: 0, time: 0.4091877110000013, length: 692, iterations: 6463"}
{"test_case": 356, "data": "MetropolisHasting 356: robots/8-2-4.pl, test_cost: 0, train_cost: 0, time: 0.31956163400001003, length: 525, iterations: 5298"}
{"test_case": 357, "data": "MetropolisHasting 357: robots/8-2-5.pl, test_cost: 0, train_cost: 0, time: 0.009018401999995262, length: 66, iterations: 581"}
{"test_case": 358, "data": "MetropolisHasting 358: robots/8-2-6.pl, test_cost: 0, train_cost: 0, time: 0.039559092000004625, length: 158, iterations: 2186"}
{"test_case": 359, "data": "MetropolisHasting 359: robots/8-2-7.pl, test_cost: 0, train_cost: 0, time: 0.010731559000006996, length: 118, iterations: 532"}
{"test_case": 360, "data": "MetropolisHasting 360: robots/8-2-8.pl, test_cost: 0, train_cost: 0, time: 0.12278108299999999, length: 224, iterations: 3457"}
{"test_case": 361, "data": "MetropolisHasting 361: robots/8-2-9.pl, test_cost: 0, train_cost: 0, time: 0.017765510000000012, length: 118, iterations: 956"}
{"test_case": 362, "data": "MetropolisHasting 362: robots/8-2-10.pl, test_cost: 0, train_cost: 0, time: 0.009072911999999989, length: 107, iterations: 521"}
{"test_case": 363, "data": "MetropolisHasting 363: robots/8-3-0.pl, test_cost: 0, train_cost: 0, time: 13.358836891000001, length: 4997, iterations: 34015"}
{"test_case": 364, "data": "MetropolisHasting 364: robots/8-3-1.pl, test_cost: 0, train_cost: 0, time: 0.3035211320000002, length: 725, iterations: 5065"}
{"test_case": 365, "data": "MetropolisHasting 365: robots/8-3-2.pl, test_cost: 0, train_cost: 0, time: 4.446981469000001, length: 3245, iterations: 21838"}
{"test_case": 366, "data": "MetropolisHasting 366: robots/8-3-3.pl, test_cost: 0, train_cost: 0, time: 0.07127784499999734, length: 247, iterations: 2713"}
{"test_case": 367, "data": "MetropolisHasting 367: robots/8-3-4.pl, test_cost: 0, train_cost: 0, time: 0.878876094999999, length: 1351, iterations: 8394"}
{"test_case": 368, "data": "MetropolisHasting 368: robots/8-3-5.pl, test_cost: 0, train_cost: 0, time: 0.17693201000000158, length: 558, iterations: 3666"}
{"test_case": 369, "data": "MetropolisHasting 369: robots/8-3-6.pl, test_cost: 0, train_cost: 0, time: 0.016592236000001037, length: 96, iterations: 918"}
{"test_case": 370, "data": "MetropolisHasting 370: robots/8-3-7.pl, test_cost: 0, train_cost: 0, time: 0.20376325299999998, length: 550, iterations: 3730"}
{"test_case": 371, "data": "MetropolisHasting 371: robots/8-3-8.pl, test_cost: 0, train_cost: 0, time: 0.028806629, length: 71, iterations: 2126"}
{"test_case": 372, "data": "MetropolisHasting 372: robots/8-3-9.pl, test_cost: 0, train_cost: 0, time: 20.483503789, length: 6986, iterations: 37837"}
{"test_case": 373, "data": "MetropolisHasting 373: robots/8-3-10.pl, test_cost: 0, train_cost: 0, time: 0.1294359610000022, length: 343, iterations: 4094"}
{"test_case": 374, "data": "MetropolisHasting 374: robots/8-4-0.pl, test_cost: 0, train_cost: 0, time: 0.05271031699999895, length: 237, iterations: 2302"}
{"test_case": 375, "data": "MetropolisHasting 375: robots/8-4-1.pl, test_cost: 0, train_cost: 0, time: 0.01844540600000144, length: 105, iterations: 954"}
{"test_case": 376, "data": "MetropolisHasting 376: robots/8-4-2.pl, test_cost: 0, train_cost: 0, time: 0.07652032200000036, length: 364, iterations: 1877"}
{"test_case": 377, "data": "MetropolisHasting 377: robots/8-4-3.pl, test_cost: 0, train_cost: 0, time: 0.08093502699999888, length: 261, iterations: 2310"}
{"test_case": 378, "data": "MetropolisHasting 378: robots/8-4-4.pl, test_cost: 0, train_cost: 0, time: 3.961129217, length: 2490, iterations: 20326"}
{"test_case": 379, "data": "MetropolisHasting 379: robots/8-4-5.pl, test_cost: 0, train_cost: 0, time: 0.027538391000000217, length: 149, iterations: 1559"}
{"test_case": 380, "data": "MetropolisHasting 380: robots/8-4-6.pl, test_cost: 0, train_cost: 0, time: 18.578990315000002, length: 6388, iterations: 44510"}
{"test_case": 381, "data": "MetropolisHasting 381: robots/8-4-7.pl, test_cost: 14, train_cost: 14, time: 60.000732118, length: 11507, iterations: 81423"}
{"test_case": 382, "data": "MetropolisHasting 382: robots/8-4-8.pl, test_cost: 0, train_cost: 0, time: 0.058747976000006474, length: 197, iterations: 2017"}
{"test_case": 383, "data": "MetropolisHasting 383: robots/8-4-9.pl, test_cost: 0, train_cost: 0, time: 0.2052315749999991, length: 619, iterations: 4051"}
{"test_case": 384, "data": "MetropolisHasting 384: robots/8-4-10.pl, test_cost: 0, train_cost: 0, time: 0.7476515569999975, length: 1254, iterations: 7546"}
{"test_case": 385, "data": "MetropolisHasting 385: robots/8-5-0.pl, test_cost: 0, train_cost: 0, time: 0.06173972500000957, length: 255, iterations: 2733"}
{"test_case": 386, "data": "MetropolisHasting 386: robots/8-5-1.pl, test_cost: 0, train_cost: 0, time: 0.4559068469999943, length: 666, iterations: 7254"}
{"test_case": 387, "data": "MetropolisHasting 387: robots/8-5-2.pl, test_cost: 0, train_cost: 0, time: 0.0490729349999981, length: 289, iterations: 1315"}
{"test_case": 388, "data": "MetropolisHasting 388: robots/8-5-3.pl, test_cost: 0, train_cost: 0, time: 0.37710539500000095, length: 775, iterations: 4719"}
{"test_case": 389, "data": "MetropolisHasting 389: robots/8-5-4.pl, test_cost: 0, train_cost: 0, time: 0.0071173500000014656, length: 77, iterations: 470"}
{"test_case": 390, "data": "MetropolisHasting 390: robots/8-5-5.pl, test_cost: 0, train_cost: 0, time: 0.00430674, length: 47, iterations: 271"}
{"test_case": 391, "data": "MetropolisHasting 391: robots/8-5-6.pl, test_cost: 0, train_cost: 0, time: 3.398398647, length: 2341, iterations: 19438"}
{"test_case": 392, "data": "MetropolisHasting 392: robots/8-5-7.pl, test_cost: 0, train_cost: 0, time: 0.11065988700000018, length: 318, iterations: 2969"}
{"test_case": 393, "data": "MetropolisHasting 393: robots/8-5-8.pl, test_cost: 0, train_cost: 0, time: 19.888243022999998, length: 6478, iterations: 40722"}
{"test_case": 394, "data": "MetropolisHasting 394: robots/8-5-9.pl, test_cost: 0, train_cost: 0, time: 5.435485079999999, length: 3399, iterations: 20272"}
{"test_case": 395, "data": "MetropolisHasting 395: robots/8-5-10.pl, test_cost: 0, train_cost: 0, time: 0.8217306149999999, length: 1335, iterations: 7532"}
{"test_case": 396, "data": "MetropolisHasting 396: robots/8-6-0.pl, test_cost: 0, train_cost: 0, time: 0.2529857170000014, length: 642, iterations: 4015"}
{"test_case": 397, "data": "MetropolisHasting 397: robots/8-6-1.pl, test_cost: 0, train_cost: 0, time: 0.02881985600000192, length: 156, iterations: 1206"}
{"test_case": 398, "data": "MetropolisHasting 398: robots/8-6-2.pl, test_cost: 0, train_cost: 0, time: 7.196091015000004, length: 4042, iterations: 26593"}
{"test_case": 399, "data": "MetropolisHasting 399: robots/8-6-3.pl, test_cost: 0, train_cost: 0, time: 9.042618824999998, length: 4017, iterations: 28442"}
{"test_case": 400, "data": "MetropolisHasting 400: robots/8-6-4.pl, test_cost: 0, train_cost: 0, time: 0.020160706, length: 58, iterations: 1383"}
{"test_case": 401, "data": "MetropolisHasting 401: robots/8-6-5.pl, test_cost: 0, train_cost: 0, time: 34.987019472, length: 8231, iterations: 55098"}
{"test_case": 402, "data": "MetropolisHasting 402: robots/8-6-6.pl, test_cost: 0, train_cost: 0, time: 0.08222720999999922, length: 123, iterations: 3405"}
{"test_case": 403, "data": "MetropolisHasting 403: robots/8-6-7.pl, test_cost: 0, train_cost: 0, time: 0.05107858200000237, length: 247, iterations: 1668"}
{"test_case": 404, "data": "MetropolisHasting 404: robots/8-6-8.pl, test_cost: 0, train_cost: 0, time: 8.620043105, length: 4494, iterations: 30797"}
{"test_case": 405, "data": "MetropolisHasting 405: robots/8-6-9.pl, test_cost: 0, train_cost: 0, time: 0.12008178499999644, length: 476, iterations: 2740"}
{"test_case": 406, "data": "MetropolisHasting 406: robots/8-6-10.pl, test_cost: 0, train_cost: 0, time: 0.16856217800000195, length: 420, iterations: 3711"}
{"test_case": 407, "data": "MetropolisHasting 407: robots/8-7-0.pl, test_cost: 0, train_cost: 0, time: 0.24063926099999833, length: 615, iterations: 4148"}
{"test_case": 408, "data": "MetropolisHasting 408: robots/8-7-1.pl, test_cost: 6, train_cost: 6, time: 60.000355256, length: 12064, iterations: 76728"}
{"test_case": 409, "data": "MetropolisHasting 409: robots/8-7-2.pl, test_cost: 4, train_cost: 4, time: 60.000323824000006, length: 12064, iterations: 82706"}
{"test_case": 410, "data": "MetropolisHasting 410: robots/8-7-3.pl, test_cost: 0, train_cost: 0, time: 12.920635472, length: 334, iterations: 42097"}
{"test_case": 411, "data": "MetropolisHasting 411: robots/8-7-4.pl, test_cost: 0, train_cost: 0, time: 5.648572476999998, length: 3424, iterations: 24871"}
{"test_case": 412, "data": "MetropolisHasting 412: robots/8-7-5.pl, test_cost: 0, train_cost: 0, time: 0.015515932999999649, length: 112, iterations: 815"}
{"test_case": 413, "data": "MetropolisHasting 413: robots/8-7-6.pl, test_cost: 0, train_cost: 0, time: 0.07497936600000088, length: 115, iterations: 2805"}
{"test_case": 414, "data": "MetropolisHasting 414: robots/8-7-7.pl, test_cost: 0, train_cost: 0, time: 0.0194498689999989, length: 58, iterations: 1361"}
{"test_case": 415, "data": "MetropolisHasting 415: robots/8-7-8.pl, test_cost: 0, train_cost: 0, time: 9.208411786, length: 4237, iterations: 31020"}
{"test_case": 416, "data": "MetropolisHasting 416: robots/8-7-9.pl, test_cost: 0, train_cost: 0, time: 0.10671443700000083, length: 275, iterations: 3981"}
{"test_case": 417, "data": "MetropolisHasting 417: robots/8-7-10.pl, test_cost: 9, train_cost: 9, time: 60.000062519, length: 10536, iterations: 78793"}
{"test_case": 418, "data": "MetropolisHasting 418: robots/8-8-0.pl, test_cost: 0, train_cost: 0, time: 54.18730032000002, length: 204, iterations: 79837"}
{"test_case": 419, "data": "MetropolisHasting 419: robots/8-8-1.pl, test_cost: 0, train_cost: 0, time: 0.05101174300000366, length: 303, iterations: 1756"}
{"test_case": 420, "data": "MetropolisHasting 420: robots/8-8-2.pl, test_cost: 0, train_cost: 0, time: 0.7213323189999999, length: 824, iterations: 9447"}
{"test_case": 421, "data": "MetropolisHasting 421: robots/8-8-3.pl, test_cost: 0, train_cost: 0, time: 0.7319475300000001, length: 1387, iterations: 6213"}
{"test_case": 422, "data": "MetropolisHasting 422: robots/8-8-4.pl, test_cost: 0, train_cost: 0, time: 0.11904281099999992, length: 249, iterations: 4006"}
{"test_case": 423, "data": "MetropolisHasting 423: robots/8-8-5.pl, test_cost: 0, train_cost: 0, time: 0.827059057, length: 1134, iterations: 7816"}
{"test_case": 424, "data": "MetropolisHasting 424: robots/8-8-6.pl, test_cost: 2, train_cost: 2, time: 60.001550683, length: 11586, iterations: 76883"}
{"test_case": 425, "data": "MetropolisHasting 425: robots/8-8-7.pl, test_cost: 0, train_cost: 0, time: 0.5991972010000026, length: 871, iterations: 7488"}
{"test_case": 426, "data": "MetropolisHasting 426: robots/8-8-8.pl, test_cost: 0, train_cost: 0, time: 7.231025137999993, length: 3699, iterations: 30500"}
{"test_case": 427, "data": "MetropolisHasting 427: robots/8-8-9.pl, test_cost: 0, train_cost: 0, time: 0.1401529059999973, length: 502, iterations: 3086"}
{"test_case": 428, "data": "MetropolisHasting 428: robots/8-8-10.pl, test_cost: 0, train_cost: 0, time: 0.12470879599999307, length: 135, iterations: 4304"}
{"test_case": 429, "data": "MetropolisHasting 429: robots/8-9-0.pl, test_cost: 0, train_cost: 0, time: 0.04806492000000162, length: 258, iterations: 1554"}
{"test_case": 430, "data": "MetropolisHasting 430: robots/8-9-1.pl, test_cost: 0, train_cost: 0, time: 0.011022588, length: 30, iterations: 671"}
{"test_case": 431, "data": "MetropolisHasting 431: robots/8-9-2.pl, test_cost: 0, train_cost: 0, time: 0.013348484000000022, length: 72, iterations: 773"}
{"test_case": 432, "data": "MetropolisHasting 432: robots/8-9-3.pl, test_cost: 0, train_cost: 0, time: 0.09054491599999998, length: 290, iterations: 2440"}
{"test_case": 433, "data": "MetropolisHasting 433: robots/8-9-4.pl, test_cost: 0, train_cost: 0, time: 0.00801216499999996, length: 80, iterations: 515"}
{"test_case": 434, "data": "MetropolisHasting 434: robots/8-9-5.pl, test_cost: 0, train_cost: 0, time: 0.10068440000000001, length: 364, iterations: 2936"}
{"test_case": 435, "data": "MetropolisHasting 435: robots/8-9-6.pl, test_cost: 0, train_cost: 0, time: 1.8754472969999998, length: 1823, iterations: 14390"}
{"test_case": 436, "data": "MetropolisHasting 436: robots/8-9-7.pl, test_cost: 0, train_cost: 0, time: 5.957113154000001, length: 2247, iterations: 27918"}
{"test_case": 437, "data": "MetropolisHasting 437: robots/8-9-8.pl, test_cost: 0, train_cost: 0, time: 0.12520510899999948, length: 391, iterations: 3314"}
{"test_case": 438, "data": "MetropolisHasting 438: robots/8-9-9.pl, test_cost: 0, train_cost: 0, time: 0.5646354169999999, length: 1088, iterations: 5970"}
{"test_case": 439, "data": "MetropolisHasting 439: robots/8-9-10.pl, test_cost: 0, train_cost: 0, time: 2.0606919030000004, length: 1874, iterations: 16091"}
{"test_case": 440, "data": "MetropolisHasting 440: robots/10-0-0.pl, test_cost: 0, train_cost: 0, time: 0.039949971, length: 74, iterations: 3106"}
{"test_case": 441, "data": "MetropolisHasting 441: robots/10-0-1.pl, test_cost: 4, train_cost: 4, time: 60.00160667, length: 12197, iterations: 72131"}
{"test_case": 442, "data": "MetropolisHasting 442: robots/10-0-2.pl, test_cost: 7, train_cost: 7, time: 60.00171924599999, length: 10503, iterations: 72775"}
{"test_case": 443, "data": "MetropolisHasting 443: robots/10-0-3.pl, test_cost: 0, train_cost: 0, time: 0.20705336800000396, length: 361, iterations: 5611"}
{"test_case": 444, "data": "MetropolisHasting 444: robots/10-0-4.pl, test_cost: 0, train_cost: 0, time: 0.013979341000009526, length: 94, iterations: 731"}
{"test_case": 445, "data": "MetropolisHasting 445: robots/10-0-5.pl, test_cost: 0, train_cost: 0, time: 6.302151639000002, length: 3751, iterations: 22596"}
{"test_case": 446, "data": "MetropolisHasting 446: robots/10-0-6.pl, test_cost: 0, train_cost: 0, time: 0.09108671299999571, length: 311, iterations: 2511"}
{"test_case": 447, "data": "MetropolisHasting 447: robots/10-0-7.pl, test_cost: 0, train_cost: 0, time: 0.03983110500000464, length: 44, iterations: 2962"}
{"test_case": 448, "data": "MetropolisHasting 448: robots/10-0-8.pl, test_cost: 0, train_cost: 0, time: 0.534260873000008, length: 755, iterations: 6836"}
{"test_case": 449, "data": "MetropolisHasting 449: robots/10-0-9.pl, test_cost: 0, train_cost: 0, time: 2.2090128879999895, length: 1945, iterations: 13027"}
{"test_case": 450, "data": "MetropolisHasting 450: robots/10-0-10.pl, test_cost: 0, train_cost: 0, time: 0.15318647300000002, length: 565, iterations: 2680"}
{"test_case": 451, "data": "MetropolisHasting 451: robots/10-1-0.pl, test_cost: 0, train_cost: 0, time: 0.15055564, length: 329, iterations: 3855"}
{"test_case": 452, "data": "MetropolisHasting 452: robots/10-1-1.pl, test_cost: 0, train_cost: 0, time: 0.01577990400000001, length: 120, iterations: 706"}
{"test_case": 453, "data": "MetropolisHasting 453: robots/10-1-2.pl, test_cost: 0, train_cost: 0, time: 0.09429797899999998, length: 262, iterations: 2676"}
{"test_case": 454, "data": "MetropolisHasting 454: robots/10-1-3.pl, test_cost: 0, train_cost: 0, time: 20.252410139, length: 7150, iterations: 39094"}
{"test_case": 455, "data": "MetropolisHasting 455: robots/10-1-4.pl, test_cost: 0, train_cost: 0, time: 0.07323612600000118, length: 221, iterations: 2688"}
{"test_case": 456, "data": "MetropolisHasting 456: robots/10-1-5.pl, test_cost: 0, train_cost: 0, time: 2.0339120609999988, length: 2060, iterations: 13014"}
{"test_case": 457, "data": "MetropolisHasting 457: robots/10-1-6.pl, test_cost: 0, train_cost: 0, time: 1.9352892169999976, length: 2003, iterations: 10306"}
{"test_case": 458, "data": "MetropolisHasting 458: robots/10-1-7.pl, test_cost: 0, train_cost: 0, time: 0.14470284300000102, length: 386, iterations: 3839"}
{"test_case": 459, "data": "MetropolisHasting 459: robots/10-1-8.pl, test_cost: 0, train_cost: 0, time: 6.518775717999997, length: 3958, iterations: 23293"}
{"test_case": 460, "data": "MetropolisHasting 460: robots/10-1-9.pl, test_cost: 0, train_cost: 0, time: 0.44102383900000003, length: 719, iterations: 6194"}
{"test_case": 461, "data": "MetropolisHasting 461: robots/10-1-10.pl, test_cost: 0, train_cost: 0, time: 0.023558301000000004, length: 111, iterations: 1272"}
{"test_case": 462, "data": "MetropolisHasting 462: robots/10-2-0.pl, test_cost: 0, train_cost: 0, time: 15.168071447, length: 5075, iterations: 37450"}
{"test_case": 463, "data": "MetropolisHasting 463: robots/10-2-1.pl, test_cost: 0, train_cost: 0, time: 0.09724026900000027, length: 409, iterations: 2776"}
{"test_case": 464, "data": "MetropolisHasting 464: robots/10-2-2.pl, test_cost: 0, train_cost: 0, time: 0.2580573649999991, length: 470, iterations: 5056"}
{"test_case": 465, "data": "MetropolisHasting 465: robots/10-2-3.pl, test_cost: 18, train_cost: 18, time: 60.001034921, length: 12634, iterations: 70673"}
{"test_case": 466, "data": "MetropolisHasting 466: robots/10-2-4.pl, test_cost: 0, train_cost: 0, time: 28.580580259, length: 8695, iterations: 44514"}
{"test_case": 467, "data": "MetropolisHasting 467: robots/10-2-5.pl, test_cost: 0, train_cost: 0, time: 0.018794773999999848, length: 143, iterations: 720"}
{"test_case": 468, "data": "MetropolisHasting 468: robots/10-2-6.pl, test_cost: 0, train_cost: 0, time: 0.09760486899999421, length: 283, iterations: 3128"}
{"test_case": 469, "data": "MetropolisHasting 469: robots/10-2-7.pl, test_cost: 0, train_cost: 0, time: 0.047675480999998854, length: 243, iterations: 1435"}
{"test_case": 470, "data": "MetropolisHasting 470: robots/10-2-8.pl, test_cost: 0, train_cost: 0, time: 0.045922548, length: 198, iterations: 1758"}
{"test_case": 471, "data": "MetropolisHasting 471: robots/10-2-9.pl, test_cost: 0, train_cost: 0, time: 0.5332874049999999, length: 904, iterations: 5819"}
{"test_case": 472, "data": "MetropolisHasting 472: robots/10-2-10.pl, test_cost: 0, train_cost: 0, time: 0.304389695, length: 75, iterations: 8030"}
{"test_case": 473, "data": "MetropolisHasting 473: robots/10-3-0.pl, test_cost: 0, train_cost: 0, time: 0.013537550999999981, length: 56, iterations: 941"}
{"test_case": 474, "data": "MetropolisHasting 474: robots/10-3-1.pl, test_cost: 0, train_cost: 0, time: 1.4770868889999997, length: 1389, iterations: 13446"}
{"test_case": 475, "data": "MetropolisHasting 475: robots/10-3-2.pl, test_cost: 8, train_cost: 8, time: 60.000330448999996, length: 11532, iterations: 82285"}
{"test_case": 476, "data": "MetropolisHasting 476: robots/10-3-3.pl, test_cost: 2, train_cost: 2, time: 60.00057695, length: 11053, iterations: 83364"}
{"test_case": 477, "data": "MetropolisHasting 477: robots/10-3-4.pl, test_cost: 0, train_cost: 0, time: 0.08892743799999892, length: 391, iterations: 2922"}
{"test_case": 478, "data": "MetropolisHasting 478: robots/10-3-5.pl, test_cost: 0, train_cost: 0, time: 0.027267958999999564, length: 133, iterations: 1270"}
{"test_case": 479, "data": "MetropolisHasting 479: robots/10-3-6.pl, test_cost: 14, train_cost: 14, time: 60.000534275999996, length: 11166, iterations: 72685"}
{"test_case": 480, "data": "MetropolisHasting 480: robots/10-3-7.pl, test_cost: 0, train_cost: 0, time: 0.072473872, length: 287, iterations: 1790"}
{"test_case": 481, "data": "MetropolisHasting 481: robots/10-3-8.pl, test_cost: 0, train_cost: 0, time: 0.041618060999999984, length: 214, iterations: 1466"}
{"test_case": 482, "data": "MetropolisHasting 482: robots/10-3-9.pl, test_cost: 0, train_cost: 0, time: 4.093964543, length: 1073, iterations: 28428"}
{"test_case": 483, "data": "MetropolisHasting 483: robots/10-3-10.pl, test_cost: 4, train_cost: 4, time: 60.000304217, length: 12357, iterations: 67961"}
{"test_case": 484, "data": "MetropolisHasting 484: robots/10-4-0.pl, test_cost: 0, train_cost: 0, time: 0.86948828700001, length: 976, iterations: 11087"}
{"test_case": 485, "data": "MetropolisHasting 485: robots/10-4-1.pl, test_cost: 0, train_cost: 0, time: 0.08382969000000173, length: 162, iterations: 4627"}
{"test_case": 486, "data": "MetropolisHasting 486: robots/10-4-2.pl, test_cost: 0, train_cost: 0, time: 0.1308171680000072, length: 305, iterations: 4853"}
{"test_case": 487, "data": "MetropolisHasting 487: robots/10-4-3.pl, test_cost: 0, train_cost: 0, time: 0.8571960539999992, length: 1261, iterations: 7583"}
{"test_case": 488, "data": "MetropolisHasting 488: robots/10-4-4.pl, test_cost: 0, train_cost: 0, time: 0.025227442999991467, length: 115, iterations: 1381"}
{"test_case": 489, "data": "MetropolisHasting 489: robots/10-4-5.pl, test_cost: 0, train_cost: 0, time: 41.481518724, length: 2845, iterations: 82904"}
{"test_case": 490, "data": "MetropolisHasting 490: robots/10-4-6.pl, test_cost: 0, train_cost: 0, time: 0.808689647, length: 1600, iterations: 6445"}
{"test_case": 491, "data": "MetropolisHasting 491: robots/10-4-7.pl, test_cost: 0, train_cost: 0, time: 0.42259248100000013, length: 852, iterations: 5760"}
{"test_case": 492, "data": "MetropolisHasting 492: robots/10-4-8.pl, test_cost: 10, train_cost: 10, time: 60.000323845, length: 11217, iterations: 73959"}
{"test_case": 493, "data": "MetropolisHasting 493: robots/10-4-9.pl, test_cost: 0, train_cost: 0, time: 19.963774825999998, length: 6004, iterations: 50957"}
{"test_case": 494, "data": "MetropolisHasting 494: robots/10-4-10.pl, test_cost: 2, train_cost: 2, time: 60.001353820999995, length: 13473, iterations: 61570"}
{"test_case": 495, "data": "MetropolisHasting 495: robots/10-5-0.pl, test_cost: 0, train_cost: 0, time: 0.0681021860000044, length: 311, iterations: 1920"}
{"test_case": 496, "data": "MetropolisHasting 496: robots/10-5-1.pl, test_cost: 0, train_cost: 0, time: 0.04705955100001802, length: 236, iterations: 2187"}
{"test_case": 497, "data": "MetropolisHasting 497: robots/10-5-2.pl, test_cost: 0, train_cost: 0, time: 5.495954123999979, length: 3301, iterations: 25573"}
{"test_case": 498, "data": "MetropolisHasting 498: robots/10-5-3.pl, test_cost: 0, train_cost: 0, time: 0.05539686599999527, length: 168, iterations: 2849"}
{"test_case": 499, "data": "MetropolisHasting 499: robots/10-5-4.pl, test_cost: 0, train_cost: 0, time: 0.6089535330000047, length: 1059, iterations: 6739"}
{"test_case": 500, "data": "MetropolisHasting 500: robots/10-5-5.pl, test_cost: 8, train_cost: 8, time: 60.000037299, length: 12318, iterations: 71587"}
{"test_case": 501, "data": "MetropolisHasting 501: robots/10-5-6.pl, test_cost: 0, train_cost: 0, time: 0.07781714699999753, length: 214, iterations: 3199"}
{"test_case": 502, "data": "MetropolisHasting 502: robots/10-5-7.pl, test_cost: 0, train_cost: 0, time: 0.020870898999994836, length: 137, iterations: 976"}
{"test_case": 503, "data": "MetropolisHasting 503: robots/10-5-8.pl, test_cost: 0, train_cost: 0, time: 0.007733221000002288, length: 66, iterations: 495"}
{"test_case": 504, "data": "MetropolisHasting 504: robots/10-5-9.pl, test_cost: 0, train_cost: 0, time: 0.0531343820000032, length: 252, iterations: 2321"}
{"test_case": 505, "data": "MetropolisHasting 505: robots/10-5-10.pl, test_cost: 0, train_cost: 0, time: 0.9571102019999955, length: 871, iterations: 12836"}
{"test_case": 506, "data": "MetropolisHasting 506: robots/10-6-0.pl, test_cost: 0, train_cost: 0, time: 0.1273620400000013, length: 344, iterations: 3232"}
{"test_case": 507, "data": "MetropolisHasting 507: robots/10-6-1.pl, test_cost: 0, train_cost: 0, time: 0.003405987999997251, length: 46, iterations: 253"}
{"test_case": 508, "data": "MetropolisHasting 508: robots/10-6-2.pl, test_cost: 0, train_cost: 0, time: 0.01777383599999638, length: 140, iterations: 787"}
{"test_case": 509, "data": "MetropolisHasting 509: robots/10-6-3.pl, test_cost: 0, train_cost: 0, time: 0.09823802200000387, length: 209, iterations: 3183"}
{"test_case": 510, "data": "MetropolisHasting 510: robots/10-6-4.pl, test_cost: 0, train_cost: 0, time: 0.06642345, length: 292, iterations: 2086"}
{"test_case": 511, "data": "MetropolisHasting 511: robots/10-6-5.pl, test_cost: 0, train_cost: 0, time: 0.00799904600000001, length: 44, iterations: 638"}
{"test_case": 512, "data": "MetropolisHasting 512: robots/10-6-6.pl, test_cost: 0, train_cost: 0, time: 0.03698101399999999, length: 193, iterations: 1358"}
{"test_case": 513, "data": "MetropolisHasting 513: robots/10-6-7.pl, test_cost: 0, train_cost: 0, time: 0.20212413199999998, length: 524, iterations: 4712"}
{"test_case": 514, "data": "MetropolisHasting 514: robots/10-6-8.pl, test_cost: 0, train_cost: 0, time: 0.349915713, length: 577, iterations: 5713"}
{"test_case": 515, "data": "MetropolisHasting 515: robots/10-6-9.pl, test_cost: 0, train_cost: 0, time: 0.11864644000000002, length: 410, iterations: 2993"}
{"test_case": 516, "data": "MetropolisHasting 516: robots/10-6-10.pl, test_cost: 0, train_cost: 0, time: 0.142472053, length: 511, iterations: 2772"}
{"test_case": 517, "data": "MetropolisHasting 517: robots/10-7-0.pl, test_cost: 0, train_cost: 0, time: 0.13014824199999997, length: 326, iterations: 3358"}
{"test_case": 518, "data": "MetropolisHasting 518: robots/10-7-1.pl, test_cost: 0, train_cost: 0, time: 0.030298533000000072, length: 136, iterations: 1552"}
{"test_case": 519, "data": "MetropolisHasting 519: robots/10-7-2.pl, test_cost: 0, train_cost: 0, time: 0.060478052999999976, length: 230, iterations: 1826"}
{"test_case": 520, "data": "MetropolisHasting 520: robots/10-7-3.pl, test_cost: 0, train_cost: 0, time: 13.202698338, length: 5419, iterations: 33774"}
{"test_case": 521, "data": "MetropolisHasting 521: robots/10-7-4.pl, test_cost: 0, train_cost: 0, time: 27.63165037, length: 8902, iterations: 44664"}
{"test_case": 522, "data": "MetropolisHasting 522: robots/10-7-5.pl, test_cost: 0, train_cost: 0, time: 4.1962290929999995, length: 3334, iterations: 16486"}
{"test_case": 523, "data": "MetropolisHasting 523: robots/10-7-6.pl, test_cost: 0, train_cost: 0, time: 0.05470599099999873, length: 288, iterations: 1605"}
{"test_case": 524, "data": "MetropolisHasting 524: robots/10-7-7.pl, test_cost: 0, train_cost: 0, time: 0.6068387069999943, length: 986, iterations: 7601"}
{"test_case": 525, "data": "MetropolisHasting 525: robots/10-7-8.pl, test_cost: 0, train_cost: 0, time: 0.10676996099999769, length: 366, iterations: 2802"}
{"test_case": 526, "data": "MetropolisHasting 526: robots/10-7-9.pl, test_cost: 0, train_cost: 0, time: 0.12444029299999926, length: 276, iterations: 3233"}
{"test_case": 527, "data": "MetropolisHasting 527: robots/10-7-10.pl, test_cost: 4, train_cost: 4, time: 60.000165893, length: 13003, iterations: 64100"}
{"test_case": 528, "data": "MetropolisHasting 528: robots/10-8-0.pl, test_cost: 0, train_cost: 0, time: 0.028621368000003145, length: 133, iterations: 1397"}
{"test_case": 529, "data": "MetropolisHasting 529: robots/10-8-1.pl, test_cost: 0, train_cost: 0, time: 0.17669339599999034, length: 527, iterations: 3378"}
{"test_case": 530, "data": "MetropolisHasting 530: robots/10-8-2.pl, test_cost: 0, train_cost: 0, time: 2.214808476, length: 1536, iterations: 15834"}
{"test_case": 531, "data": "MetropolisHasting 531: robots/10-8-3.pl, test_cost: 0, train_cost: 0, time: 0.9804733040000002, length: 1280, iterations: 7713"}
{"test_case": 532, "data": "MetropolisHasting 532: robots/10-8-4.pl, test_cost: 0, train_cost: 0, time: 0.08380100999999973, length: 279, iterations: 2454"}
{"test_case": 533, "data": "MetropolisHasting 533: robots/10-8-5.pl, test_cost: 0, train_cost: 0, time: 0.010941805999999943, length: 96, iterations: 505"}
{"test_case": 534, "data": "MetropolisHasting 534: robots/10-8-6.pl, test_cost: 0, train_cost: 0, time: 0.06579699900000024, length: 272, iterations: 2188"}
{"test_case": 535, "data": "MetropolisHasting 535: robots/10-8-7.pl, test_cost: 0, train_cost: 0, time: 6.258919230999999, length: 3718, iterations: 23287"}
{"test_case": 536, "data": "MetropolisHasting 536: robots/10-8-8.pl, test_cost: 0, train_cost: 0, time: 0.24094340999999986, length: 559, iterations: 4117"}
{"test_case": 537, "data": "MetropolisHasting 537: robots/10-8-9.pl, test_cost: 0, train_cost: 0, time: 0.02890657699999899, length: 160, iterations: 1598"}
{"test_case": 538, "data": "MetropolisHasting 538: robots/10-8-10.pl, test_cost: 0, train_cost: 0, time: 1.5582834209999987, length: 1539, iterations: 14025"}
{"test_case": 539, "data": "MetropolisHasting 539: robots/10-9-0.pl, test_cost: 3, train_cost: 3, time: 60.00162673, length: 10996, iterations: 71203"}
{"test_case": 540, "data": "MetropolisHasting 540: robots/10-9-1.pl, test_cost: 3, train_cost: 3, time: 60.000950318, length: 12420, iterations: 67331"}
{"test_case": 541, "data": "MetropolisHasting 541: robots/10-9-2.pl, test_cost: 0, train_cost: 0, time: 0.22788401799999747, length: 422, iterations: 4487"}
{"test_case": 542, "data": "MetropolisHasting 542: robots/10-9-3.pl, test_cost: 0, train_cost: 0, time: 0.39431987100000043, length: 577, iterations: 7140"}
{"test_case": 543, "data": "MetropolisHasting 543: robots/10-9-4.pl, test_cost: 0, train_cost: 0, time: 0.08431241699999958, length: 314, iterations: 2443"}
{"test_case": 544, "data": "MetropolisHasting 544: robots/10-9-5.pl, test_cost: 0, train_cost: 0, time: 0.10992218999999892, length: 278, iterations: 3454"}
{"test_case": 545, "data": "MetropolisHasting 545: robots/10-9-6.pl, test_cost: 0, train_cost: 0, time: 8.963239445000006, length: 4054, iterations: 27096"}
{"test_case": 546, "data": "MetropolisHasting 546: robots/10-9-7.pl, test_cost: 0, train_cost: 0, time: 0.6872200059999898, length: 763, iterations: 9025"}
{"test_case": 547, "data": "MetropolisHasting 547: robots/10-9-8.pl, test_cost: 0, train_cost: 0, time: 0.34819093400000156, length: 822, iterations: 5683"}
{"test_case": 548, "data": "MetropolisHasting 548: robots/10-9-9.pl, test_cost: 0, train_cost: 0, time: 0.1449128990000048, length: 395, iterations: 4021"}
{"test_case": 549, "data": "MetropolisHasting 549: robots/10-9-10.pl, test_cost: 0, train_cost: 0, time: 2.1348283830000128, length: 2219, iterations: 13107"}
{"domain": "robot", "params": {"type": "metropolis", "alpha": 1, "add_token_end": 0, "add_token_random": 30, "remove_token_end": 0, "remove_token_random": 30, "add_loop_end": 0, "add_loop_random": 30, "add_if_statement_end": 0, "add_if_statement_random": 30, "start_over": 6}, "files": "([2, 4, 6, 8, 10], range(0, 10), range(0, 11))", "cases_solved": "529 / 550 (96.2%)", "average": {"test_cost": 0.2636363636363636, "train_cost": 0.2636363636363636, "execution_time": 3.8086842510963623, "program_length": 1064.5945454545447, "number_of_explored_programs": 8679.430909090906, "number_of_iterations": 8679.430909090906}, "average_correct": {"test_cost": 0.0, "train_cost": 0.0, "execution_time": 1.577994531164461, "program_length": 644.3591682419658, "number_of_explored_programs": 6051.848771266543, "number_of_iterations": 6051.848771266543}, "average_failed": {"test_cost": 6.904761904761906, "train_cost": 6.904761904761906, "execution_time": 60.000820529380945, "program_length": 11650.52380952381, "number_of_explored_programs": 74869.47619047618, "number_of_iterations": 74869.47619047618}, "variance": {"test_cost": 2.4531379367444943, "train_cost": 2.4531379367444943, "execution_time": 158.54200728144747, "program_length": 6413912.164997517, "number_of_explored_programs": 306701421.3494983, "number_of_iterations": 306701421.3494983}, "variance_correct": {"test_cost": 0.0, "train_cost": 0.0, "execution_time": 34.277633682586696, "program_length": 2004570.2419659733, "number_of_explored_programs": 135905629.14375326, "number_of_iterations": 135905629.14375326}, "variance_failed": {"test_cost": 19.19047619047619, "train_cost": 19.19047619047619, "execution_time": 3.884410754756944e-07, "program_length": 805230.1619047619, "number_of_explored_programs": 48251437.861904755, "number_of_iterations": 48251437.861904755}, "best_results": {"file": "robots/10-9-10.pl", "test_cost": 0, "train_cost": 0, "execution_time": 2.1348283830000128, "program_length": 2219, "number_of_explored_programs": 13107, "program": "Program([LoopWhile(AtTop [MoveUp]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [MoveUp]), If(AtRight [MoveUp] [MoveLeft]), MoveLeft, LoopWhile(AtTop [MoveUp]), If(AtRight [Drop] [MoveDown]), If(NotAtLeft [MoveDown] [MoveDown]), MoveUp, If(AtRight [MoveLeft] [MoveLeft]), MoveRight, LoopWhile(AtTop [Grab]), If(NotAtBottom [MoveLeft] [MoveUp]), LoopWhile(AtTop [MoveLeft]), If(AtLeft [MoveDown] [MoveUp]), LoopWhile(AtTop [Drop]), LoopWhile(AtLeft [MoveUp]), MoveDown, LoopWhile(NotAtTop [MoveUp]), LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [MoveRight]), If(AtTop [MoveDown] [Drop]), MoveDown, LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [MoveLeft]), MoveDown, LoopWhile(AtBottom [Grab]), MoveDown, MoveUp, LoopWhile(AtTop [MoveLeft]), MoveLeft, MoveDown, MoveDown, LoopWhile(AtLeft [MoveUp]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [MoveDown]), MoveUp, MoveUp, MoveDown, LoopWhile(AtBottom [Drop]), If(NotAtBottom [MoveUp] [MoveRight]), LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [Drop]), LoopWhile(AtBottom [Drop]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtBottom [Grab]), LoopWhile(AtTop [MoveDown]), If(NotAtTop [MoveUp] [MoveRight]), LoopWhile(AtLeft [MoveDown]), MoveLeft, LoopWhile(AtLeft [Grab]), If(NotAtBottom [MoveUp] [MoveUp]), If(AtRight [Drop] [MoveDown]), If(AtTop [Drop] [MoveLeft]), MoveDown, MoveLeft, LoopWhile(AtTop [Drop]), If(NotAtLeft [MoveDown] [Drop]), LoopWhile(AtLeft [MoveRight]), MoveRight, If(NotAtLeft [MoveRight] [MoveRight]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [MoveRight]), MoveDown, LoopWhile(AtLeft [MoveDown]), MoveLeft, MoveUp, If(AtTop [MoveRight] [MoveRight]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [MoveUp]), MoveUp, LoopWhile(AtLeft [MoveDown]), MoveRight, If(AtTop [MoveRight] [MoveDown]), If(NotAtTop [MoveUp] [MoveDown]), MoveDown, If(NotAtLeft [MoveDown] [MoveDown]), MoveDown, If(NotAtLeft [MoveUp] [MoveLeft]), If(AtLeft [MoveLeft] [MoveRight]), LoopWhile(AtBottom [Grab]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [MoveDown]), MoveDown, MoveDown, MoveLeft, If(AtTop [MoveLeft] [MoveUp]), If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtRight [MoveLeft]), MoveLeft, If(AtTop [MoveUp] [MoveDown]), LoopWhile(AtBottom [Grab]), LoopWhile(AtTop [MoveDown]), MoveUp, If(NotAtRight [MoveDown] [MoveDown]), LoopWhile(NotAtLeft [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), If(NotAtTop [MoveRight] [MoveDown]), LoopWhile(AtTop [Drop]), MoveLeft, If(NotAtTop [MoveUp] [Drop]), MoveRight, MoveUp, LoopWhile(AtTop [Grab]), MoveLeft, If(AtBottom [MoveLeft] [MoveRight]), LoopWhile(AtTop [MoveUp]), MoveDown, If(AtLeft [Grab] [MoveUp]), LoopWhile(AtBottom [MoveDown]), If(AtBottom [Grab] [MoveDown]), If(NotAtLeft [MoveUp] [Drop]), If(NotAtLeft [MoveDown] [Drop]), MoveDown, MoveRight, LoopWhile(AtBottom [MoveUp]), MoveDown, If(AtLeft [Grab] [MoveRight]), If(AtTop [Grab] [MoveDown]), If(AtBottom [MoveRight] [MoveRight]), MoveRight, If(AtRight [MoveLeft] [MoveLeft]), MoveDown, MoveUp, LoopWhile(AtLeft [MoveRight]), MoveUp, MoveUp, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveUp]), MoveDown, LoopWhile(AtRight [Drop]), If(AtTop [Grab] [MoveUp]), If(NotAtLeft [MoveDown] [Drop]), If(NotAtBottom [MoveUp] [MoveDown]), If(NotAtBottom [MoveUp] [MoveLeft]), MoveLeft, LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [MoveRight]), MoveUp, LoopWhile(AtTop [MoveLeft]), MoveLeft, MoveUp, LoopWhile(AtTop [MoveRight]), If(NotAtLeft [MoveRight] [MoveRight]), If(NotAtRight [MoveDown] [MoveLeft]), If(AtTop [MoveUp] [MoveDown]), If(NotAtRight [MoveDown] [MoveDown]), MoveDown, MoveUp, If(NotAtRight [MoveDown] [MoveDown]), LoopWhile(AtRight [MoveLeft]), MoveDown, If(NotAtBottom [MoveDown] [MoveUp]), If(AtBottom [MoveUp] [MoveLeft]), MoveUp, MoveDown, LoopWhile(AtRight [MoveLeft]), If(NotAtLeft [MoveRight] [Grab]), If(NotAtLeft [MoveLeft] [MoveRight]), If(NotAtTop [MoveLeft] [MoveRight]), MoveUp, LoopWhile(NotAtTop [MoveUp]), MoveDown, MoveRight, LoopWhile(AtBottom [MoveLeft]), MoveLeft, MoveLeft, LoopWhile(AtLeft [MoveUp]), If(AtTop [MoveLeft] [MoveDown]), MoveRight, If(NotAtRight [MoveRight] [MoveRight]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [MoveLeft]), If(NotAtLeft [MoveRight] [Grab]), If(NotAtTop [MoveRight] [MoveLeft]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [MoveRight]), If(AtTop [MoveLeft] [MoveDown]), MoveUp, LoopWhile(AtTop [Drop]), If(NotAtRight [MoveRight] [Drop]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [Grab]), If(NotAtBottom [MoveLeft] [MoveLeft]), MoveRight, MoveLeft, If(AtLeft [Grab] [MoveRight]), If(AtRight [Drop] [MoveDown]), If(AtRight [Drop] [MoveUp]), LoopWhile(AtTop [MoveUp]), MoveUp, LoopWhile(NotAtTop [MoveUp]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtBottom [MoveRight]), MoveLeft, If(AtLeft [MoveUp] [MoveRight]), MoveLeft, If(NotAtRight [MoveRight] [MoveRight]), MoveRight, MoveRight, If(AtTop [MoveDown] [MoveLeft]), If(NotAtTop [MoveLeft] [Drop]), If(NotAtBottom [MoveRight] [MoveLeft]), If(NotAtLeft [MoveLeft] [MoveDown]), LoopWhile(NotAtRight [MoveRight]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [MoveLeft]), MoveUp, If(AtTop [MoveRight] [Drop]), LoopWhile(NotAtRight [MoveUp]), LoopWhile(AtRight [MoveLeft]), MoveLeft, MoveDown, If(AtRight [Drop] [MoveDown]), If(NotAtRight [MoveLeft] [MoveUp]), If(NotAtTop [MoveRight] [MoveLeft]), MoveDown, If(NotAtRight [MoveRight] [Grab]), MoveLeft, MoveUp, If(NotAtRight [MoveUp] [MoveUp]), MoveDown, MoveRight, LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveRight]), MoveDown, LoopWhile(AtRight [MoveRight]), MoveDown, LoopWhile(AtTop [MoveDown]), If(NotAtRight [MoveLeft] [MoveLeft]), LoopWhile(AtRight [MoveDown]), If(NotAtLeft [MoveLeft] [MoveRight]), LoopWhile(AtBottom [Grab]), MoveLeft, LoopWhile(NotAtLeft [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), MoveDown, If(AtBottom [MoveLeft] [MoveDown]), LoopWhile(AtLeft [MoveRight]), If(NotAtTop [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveDown]), MoveUp, LoopWhile(AtRight [MoveUp]), MoveRight, LoopWhile(AtRight [Grab]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [Grab]), If(AtLeft [MoveLeft] [MoveUp]), If(AtRight [MoveDown] [MoveLeft]), MoveRight, LoopWhile(AtTop [Grab]), LoopWhile(AtRight [MoveDown]), MoveRight, LoopWhile(AtLeft [Grab]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [MoveUp]), If(AtBottom [MoveDown] [MoveLeft]), LoopWhile(AtRight [MoveDown]), If(NotAtRight [MoveDown] [Grab]), MoveUp, If(AtRight [MoveRight] [MoveUp]), MoveRight, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtBottom [MoveUp]), If(AtBottom [Drop] [MoveUp]), MoveDown, LoopWhile(AtBottom [Drop]), If(NotAtLeft [MoveUp] [Grab]), MoveUp, If(NotAtBottom [MoveDown] [MoveLeft]), LoopWhile(AtBottom [MoveUp]), If(NotAtBottom [MoveUp] [MoveLeft]), MoveDown, LoopWhile(AtTop [Grab]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [MoveLeft]), If(AtBottom [Drop] [MoveLeft]), If(NotAtTop [MoveUp] [Drop]), If(NotAtRight [MoveRight] [MoveLeft]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [MoveLeft]), If(AtTop [MoveLeft] [MoveLeft]), MoveUp, MoveDown, If(NotAtBottom [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [MoveUp]), If(AtBottom [MoveRight] [MoveUp]), If(AtRight [MoveLeft] [MoveDown]), LoopWhile(AtBottom [Grab]), If(NotAtLeft [MoveUp] [Grab]), MoveUp, LoopWhile(AtRight [MoveLeft]), If(NotAtRight [MoveUp] [MoveDown]), MoveDown, LoopWhile(NotAtTop [MoveUp]), MoveDown, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [MoveUp]), If(NotAtTop [MoveDown] [MoveUp]), If(AtBottom [MoveLeft] [MoveDown]), MoveDown, LoopWhile(AtLeft [Drop]), MoveDown, If(AtLeft [Grab] [MoveUp]), LoopWhile(AtLeft [Drop]), If(AtBottom [Drop] [MoveDown]), If(NotAtLeft [MoveRight] [Drop]), MoveDown, If(NotAtBottom [MoveRight] [MoveUp]), If(AtRight [MoveRight] [MoveUp]), LoopWhile(AtLeft [MoveDown]), If(NotAtBottom [MoveRight] [Drop]), If(AtBottom [Drop] [MoveUp]), If(NotAtLeft [MoveDown] [Drop]), LoopWhile(AtLeft [MoveLeft]), MoveDown, LoopWhile(AtBottom [MoveUp]), MoveUp, MoveDown, LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [MoveLeft]), If(NotAtRight [MoveDown] [MoveDown]), If(AtLeft [Grab] [MoveUp]), MoveDown, MoveUp, LoopWhile(AtBottom [MoveRight]), MoveDown, MoveDown, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveUp]), MoveDown, LoopWhile(NotAtTop [MoveUp]), MoveLeft, If(NotAtRight [MoveLeft] [MoveUp]), If(NotAtRight [MoveLeft] [MoveRight]), MoveDown, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [MoveRight]), If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtRight [Drop]), If(AtTop [MoveLeft] [Drop]), LoopWhile(AtRight [MoveRight]), If(NotAtTop [Grab] [MoveDown]), LoopWhile(AtBottom [MoveDown]), MoveDown, LoopWhile(AtTop [Drop]), LoopWhile(AtBottom [Drop]), MoveRight, MoveRight, LoopWhile(AtRight [MoveLeft]), MoveLeft, LoopWhile(AtLeft [Grab]), MoveDown, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtLeft [MoveRight]), If(NotAtRight [MoveDown] [MoveLeft]), LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [MoveRight]), If(NotAtLeft [MoveUp] [Grab]), LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [MoveDown]), MoveUp, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [MoveLeft]), If(NotAtRight [MoveDown] [MoveLeft]), LoopWhile(AtRight [MoveRight]), MoveDown, If(NotAtRight [MoveDown] [Drop]), LoopWhile(AtTop [MoveDown]), If(AtTop [Grab] [MoveLeft]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [MoveLeft]), If(NotAtTop [MoveDown] [Drop]), If(AtLeft [MoveUp] [MoveUp]), If(NotAtRight [MoveRight] [MoveDown]), MoveDown, LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [Grab]), MoveUp, If(NotAtBottom [MoveDown] [MoveLeft]), If(NotAtLeft [MoveDown] [Drop]), If(AtRight [MoveDown] [MoveDown]), MoveRight, LoopWhile(AtRight [Grab]), MoveUp, MoveUp, LoopWhile(AtBottom [Grab]), MoveUp, If(AtBottom [MoveDown] [MoveUp]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [MoveUp]), MoveUp, LoopWhile(AtBottom [Grab]), LoopWhile(AtTop [MoveLeft]), MoveDown, MoveUp, LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [MoveRight]), MoveUp, MoveDown, LoopWhile(AtBottom [Grab]), LoopWhile(AtRight [Grab]), LoopWhile(AtTop [Drop]), If(AtTop [Drop] [MoveLeft]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [Drop]), If(NotAtLeft [MoveUp] [Grab]), LoopWhile(AtTop [MoveDown]), If(AtTop [Grab] [MoveLeft]), MoveUp, LoopWhile(AtLeft [Drop]), If(AtRight [MoveRight] [MoveUp]), If(AtBottom [MoveUp] [MoveDown]), If(AtLeft [MoveDown] [MoveDown]), If(AtTop [MoveRight] [MoveDown]), MoveRight, LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [Drop]), MoveUp, LoopWhile(AtRight [Drop]), LoopWhile(AtBottom [MoveLeft]), MoveUp, MoveDown, LoopWhile(AtTop [MoveRight]), MoveDown, If(AtTop [MoveDown] [MoveLeft]), LoopWhile(AtTop [Drop]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [MoveDown]), MoveDown, MoveDown, LoopWhile(AtBottom [MoveDown]), If(NotAtRight [MoveDown] [MoveLeft]), LoopWhile(AtBottom [Grab]), MoveUp, LoopWhile(AtBottom [Grab]), MoveDown, LoopWhile(AtBottom [MoveLeft]), MoveUp, If(AtLeft [MoveLeft] [MoveDown]), LoopWhile(AtLeft [MoveUp]), If(NotAtRight [MoveDown] [MoveLeft]), LoopWhile(AtBottom [Grab]), If(NotAtLeft [MoveRight] [MoveLeft]), LoopWhile(AtRight [MoveRight]), If(NotAtTop [MoveUp] [MoveRight]), If(AtRight [Drop] [MoveDown]), MoveUp, MoveUp, MoveRight, LoopWhile(AtRight [Drop]), LoopWhile(NotAtTop [MoveUp]), If(NotAtLeft [MoveLeft] [MoveRight]), LoopWhile(NotAtTop [Grab]), MoveLeft, LoopWhile(NotAtTop [MoveUp]), If(NotAtRight [MoveLeft] [Drop]), MoveDown, LoopWhile(NotAtLeft [MoveUp]), If(NotAtRight [MoveRight] [MoveRight]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [MoveUp]), MoveDown, If(AtRight [MoveDown] [MoveUp]), LoopWhile(AtBottom [Drop]), If(AtRight [MoveRight] [MoveDown]), LoopWhile(AtTop [MoveRight]), If(NotAtBottom [MoveLeft] [MoveUp]), MoveDown, If(NotAtLeft [MoveLeft] [MoveUp]), LoopWhile(NotAtLeft [MoveUp]), LoopWhile(AtRight [Drop]), MoveDown, LoopWhile(AtRight [MoveRight]), LoopWhile(NotAtLeft [Grab]), MoveDown, If(NotAtRight [MoveRight] [MoveRight]), LoopWhile(AtTop [MoveRight]), If(AtTop [MoveRight] [MoveDown]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [MoveLeft]), MoveLeft, MoveDown, LoopWhile(NotAtBottom [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveRight]), If(NotAtRight [MoveRight] [MoveUp]), If(NotAtTop [MoveLeft] [MoveDown]), MoveRight, MoveUp, MoveUp, If(AtTop [MoveRight] [MoveRight]), LoopWhile(AtRight [Drop]), MoveUp, If(AtRight [MoveDown] [MoveDown]), MoveRight, MoveDown, LoopWhile(AtLeft [MoveDown]), MoveDown, MoveLeft, LoopWhile(AtRight [Drop]), LoopWhile(AtRight [Grab]), If(NotAtTop [MoveUp] [MoveUp]), MoveLeft, MoveLeft, If(AtRight [MoveDown] [MoveDown]), LoopWhile(NotAtLeft [MoveLeft]), LoopWhile(AtRight [MoveDown]), MoveUp, LoopWhile(AtTop [MoveLeft]), MoveRight, MoveRight, If(NotAtBottom [MoveUp] [MoveRight]), MoveLeft, MoveRight, If(AtRight [Drop] [MoveUp]), MoveRight, LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveRight]), MoveRight, If(NotAtBottom [MoveDown] [Grab]), LoopWhile(AtBottom [MoveLeft]), MoveDown, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtRight [Drop]), LoopWhile(AtTop [Drop]), If(NotAtBottom [MoveRight] [Drop]), If(AtBottom [Drop] [MoveDown]), If(NotAtTop [MoveUp] [MoveRight]), If(NotAtTop [MoveUp] [MoveRight]), If(AtTop [Drop] [MoveLeft]), MoveDown, LoopWhile(AtLeft [MoveUp]), If(AtTop [Grab] [MoveUp]), LoopWhile(NotAtRight [MoveRight]), MoveDown, MoveDown, MoveUp, MoveLeft, LoopWhile(AtTop [MoveLeft]), If(NotAtBottom [MoveUp] [MoveDown]), MoveDown, If(AtBottom [MoveUp] [MoveLeft]), If(AtLeft [Drop] [MoveLeft]), MoveUp, LoopWhile(AtTop [Grab]), MoveLeft, MoveRight, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtRight [MoveUp]), If(NotAtTop [MoveLeft] [MoveLeft]), MoveLeft, MoveUp, LoopWhile(AtTop [MoveRight]), MoveUp, MoveUp, LoopWhile(AtBottom [MoveLeft]), If(NotAtBottom [MoveDown] [Drop]), LoopWhile(AtTop [MoveLeft]), MoveUp, LoopWhile(AtTop [MoveUp]), MoveUp, MoveRight, If(NotAtBottom [MoveDown] [MoveRight]), MoveDown, MoveRight, MoveRight, LoopWhile(AtRight [MoveLeft]), If(AtTop [MoveDown] [MoveDown]), LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [MoveRight]), MoveDown, MoveLeft, If(AtTop [Grab] [MoveLeft]), MoveRight, MoveDown, If(AtRight [Drop] [MoveLeft]), If(NotAtTop [MoveLeft] [Drop]), If(AtBottom [MoveUp] [MoveUp]), If(NotAtRight [MoveUp] [MoveLeft]), MoveRight, MoveLeft, If(NotAtBottom [MoveDown] [Grab]), MoveUp, MoveDown, MoveUp, MoveDown, LoopWhile(AtRight [Grab]), If(AtBottom [MoveUp] [MoveUp]), MoveUp, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [MoveDown]), If(AtTop [MoveDown] [MoveDown]), LoopWhile(AtRight [MoveLeft]), If(NotAtBottom [MoveRight] [Grab]), MoveLeft, If(NotAtTop [MoveUp] [Drop]), If(AtBottom [Drop] [MoveUp]), MoveRight, MoveLeft, MoveDown, LoopWhile(AtRight [MoveRight]), If(AtTop [MoveRight] [MoveLeft]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtBottom [Grab]), If(NotAtLeft [MoveDown] [Grab]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [MoveUp]), If(NotAtRight [MoveDown] [Grab]), MoveDown, If(NotAtRight [MoveLeft] [MoveDown]), MoveLeft, If(NotAtLeft [MoveUp] [MoveDown]), MoveLeft, MoveRight, MoveUp, LoopWhile(AtLeft [Grab]), If(NotAtTop [MoveRight] [MoveUp]), MoveRight, MoveDown, If(NotAtTop [MoveUp] [MoveDown]), If(NotAtLeft [MoveUp] [MoveDown]), LoopWhile(AtLeft [MoveDown]), If(AtTop [MoveDown] [MoveDown]), LoopWhile(AtRight [Drop]), MoveUp, LoopWhile(NotAtTop [MoveUp]), If(AtBottom [Grab] [MoveRight]), If(NotAtTop [MoveLeft] [MoveRight]), If(NotAtTop [MoveDown] [MoveRight]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtBottom [Drop]), MoveLeft, LoopWhile(AtRight [Drop]), If(NotAtRight [MoveDown] [Grab]), MoveRight, MoveDown, If(NotAtLeft [MoveRight] [Grab]), If(NotAtBottom [MoveLeft] [MoveDown]), If(NotAtTop [MoveRight] [MoveRight]), LoopWhile(AtTop [Grab]), If(NotAtLeft [MoveLeft] [MoveDown]), LoopWhile(AtLeft [MoveDown]), MoveLeft, MoveUp, MoveDown, MoveUp, If(AtRight [MoveLeft] [MoveLeft]), If(NotAtBottom [MoveRight] [MoveDown]), MoveLeft, LoopWhile(AtTop [Drop]), If(AtLeft [MoveUp] [MoveRight]), LoopWhile(AtLeft [MoveLeft]), MoveRight, LoopWhile(AtLeft [MoveDown]), MoveLeft, MoveLeft, If(NotAtBottom [MoveRight] [Drop]), MoveDown, MoveUp, If(NotAtRight [MoveRight] [Grab]), MoveRight, MoveRight, If(NotAtBottom [MoveLeft] [Drop]), If(NotAtRight [MoveDown] [Drop]), LoopWhile(AtRight [MoveRight]), MoveDown, LoopWhile(AtLeft [MoveUp]), LoopWhile(AtBottom [MoveUp]), MoveUp, If(NotAtRight [MoveDown] [MoveLeft]), LoopWhile(AtTop [MoveUp]), MoveDown, LoopWhile(AtRight [Drop]), MoveRight, LoopWhile(AtBottom [MoveRight]), If(AtBottom [MoveRight] [MoveDown]), MoveRight, If(NotAtRight [Drop] [MoveLeft]), MoveDown, MoveUp, If(NotAtLeft [MoveDown] [MoveUp]), If(NotAtLeft [MoveDown] [MoveRight]), If(NotAtTop [MoveUp] [Drop]), LoopWhile(NotAtRight [MoveRight]), LoopWhile(NotAtRight [MoveRight]), MoveLeft, MoveDown, LoopWhile(AtTop [MoveUp]), LoopWhile(AtLeft [Grab]), MoveUp, MoveRight, If(AtTop [MoveUp] [MoveLeft]), MoveLeft, LoopWhile(AtRight [MoveRight]), MoveRight, LoopWhile(AtBottom [Grab]), If(AtBottom [Drop] [MoveRight]), If(NotAtBottom [MoveLeft] [MoveDown]), LoopWhile(AtTop [MoveRight]), MoveLeft, If(NotAtLeft [MoveRight] [MoveLeft]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), MoveDown, MoveUp, LoopWhile(AtRight [Drop]), MoveLeft, MoveLeft, LoopWhile(AtRight [Drop]), If(NotAtLeft [MoveLeft] [MoveUp]), MoveDown, LoopWhile(AtBottom [MoveLeft]), If(NotAtRight [MoveRight] [Drop]), MoveRight, MoveRight, If(NotAtBottom [MoveUp] [MoveUp]), If(AtRight [MoveDown] [MoveLeft]), MoveLeft, LoopWhile(AtTop [Grab]), MoveDown, If(AtLeft [Grab] [MoveUp]), If(NotAtRight [MoveUp] [Drop]), If(AtTop [Drop] [MoveLeft]), LoopWhile(AtTop [MoveUp]), If(NotAtLeft [MoveRight] [MoveLeft]), MoveDown, MoveUp, If(NotAtTop [MoveDown] [Drop]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [MoveDown]), If(AtRight [Drop] [MoveLeft]), LoopWhile(AtRight [MoveRight]), MoveLeft, If(AtLeft [MoveLeft] [MoveRight]), LoopWhile(AtRight [Grab]), If(AtRight [MoveRight] [MoveRight]), If(NotAtRight [MoveRight] [Drop]), If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtBottom [MoveDown]), LoopWhile(NotAtRight [MoveRight]), LoopWhile(AtTop [Grab]), If(AtTop [MoveLeft] [MoveUp]), LoopWhile(AtRight [MoveLeft]), MoveDown, MoveDown, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtBottom [MoveRight]), MoveLeft, MoveUp, LoopWhile(AtLeft [MoveLeft]), If(AtRight [MoveLeft] [MoveUp]), MoveDown, If(NotAtRight [MoveDown] [MoveUp]), LoopWhile(AtBottom [MoveLeft]), If(NotAtBottom [MoveRight] [MoveDown]), LoopWhile(AtRight [MoveDown]), If(AtTop [Grab] [MoveRight]), LoopWhile(AtTop [Grab]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [MoveLeft]), If(AtBottom [Drop] [MoveDown]), If(AtBottom [MoveLeft] [MoveUp]), MoveDown, If(NotAtRight [MoveDown] [MoveRight]), MoveDown, LoopWhile(NotAtTop [MoveUp]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtBottom [Drop]), LoopWhile(NotAtTop [Drop]), MoveLeft, LoopWhile(NotAtTop [Grab]), LoopWhile(AtRight [MoveLeft]), MoveDown, LoopWhile(AtTop [MoveRight]), If(AtLeft [MoveLeft] [MoveDown]), LoopWhile(AtLeft [MoveUp]), If(NotAtLeft [MoveUp] [MoveDown]), MoveRight, LoopWhile(AtTop [MoveRight]), LoopWhile(AtTop [MoveLeft]), MoveDown, LoopWhile(AtTop [MoveRight]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [MoveRight]), If(NotAtBottom [MoveDown] [Drop]), MoveUp, If(AtLeft [Grab] [MoveUp]), LoopWhile(AtLeft [MoveDown]), MoveDown, LoopWhile(AtTop [MoveLeft]), If(AtRight [Drop] [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [MoveDown]), MoveDown, MoveDown, MoveDown, LoopWhile(AtBottom [Grab]), MoveLeft, MoveDown, If(NotAtRight [MoveDown] [MoveUp]), If(AtTop [MoveUp] [MoveUp]), If(AtTop [MoveRight] [MoveUp]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [MoveRight]), If(AtTop [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveRight]), MoveUp, LoopWhile(AtBottom [Grab]), LoopWhile(AtTop [Grab]), MoveRight, LoopWhile(AtBottom [MoveDown]), If(AtLeft [MoveDown] [MoveUp]), MoveUp, LoopWhile(AtLeft [MoveLeft]), MoveDown, LoopWhile(AtTop [MoveUp]), MoveDown, MoveUp, If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtLeft [MoveLeft]), If(AtLeft [Drop] [MoveDown]), MoveUp, LoopWhile(AtTop [MoveLeft]), If(NotAtRight [MoveRight] [MoveDown]), If(NotAtRight [MoveDown] [MoveUp]), If(AtRight [MoveDown] [Grab]), LoopWhile(AtBottom [Grab]), MoveLeft, MoveUp, LoopWhile(AtRight [Grab]), LoopWhile(AtRight [Grab]), MoveDown, If(NotAtTop [MoveDown] [MoveRight]), LoopWhile(AtRight [MoveUp]), MoveLeft, MoveDown, MoveUp, LoopWhile(AtBottom [MoveLeft]), MoveDown, MoveLeft, If(NotAtBottom [MoveLeft] [MoveUp]), MoveLeft, LoopWhile(AtRight [MoveDown]), MoveRight, MoveUp, LoopWhile(AtLeft [Drop]), LoopWhile(AtBottom [MoveDown]), MoveUp, If(AtLeft [MoveLeft] [MoveDown]), MoveUp, MoveLeft, If(NotAtBottom [MoveDown] [MoveDown]), MoveDown, If(NotAtBottom [MoveUp] [MoveLeft]), If(NotAtLeft [MoveLeft] [Grab]), If(NotAtBottom [MoveLeft] [MoveRight]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [MoveUp]), If(NotAtLeft [MoveDown] [Grab]), LoopWhile(AtRight [MoveRight]), MoveLeft, If(AtRight [Grab] [MoveDown]), LoopWhile(AtBottom [Grab]), If(AtRight [Drop] [MoveRight]), MoveUp, If(AtBottom [MoveLeft] [MoveRight]), MoveLeft, MoveDown, LoopWhile(AtRight [MoveLeft]), If(AtBottom [MoveRight] [MoveUp]), MoveDown, LoopWhile(AtRight [Drop]), If(NotAtTop [MoveRight] [MoveRight]), If(NotAtLeft [MoveDown] [Grab]), LoopWhile(AtBottom [Grab]), If(NotAtLeft [MoveUp] [Grab]), LoopWhile(AtTop [Drop]), MoveDown, LoopWhile(AtTop [Grab]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [MoveDown]), If(NotAtBottom [MoveRight] [Drop]), MoveUp, MoveUp, MoveDown, LoopWhile(AtLeft [MoveLeft]), MoveRight, If(AtRight [MoveDown] [MoveRight]), LoopWhile(AtRight [Drop]), MoveUp, LoopWhile(AtRight [MoveUp]), MoveDown, MoveUp, LoopWhile(AtLeft [MoveUp]), MoveDown, MoveDown, LoopWhile(AtRight [MoveDown]), MoveUp, MoveLeft, LoopWhile(AtLeft [Drop]), MoveDown, If(NotAtLeft [MoveUp] [MoveUp]), MoveUp, MoveUp, MoveLeft, If(NotAtTop [MoveRight] [MoveDown]), MoveDown, LoopWhile(AtRight [MoveRight]), If(AtLeft [MoveUp] [MoveUp]), LoopWhile(AtLeft [MoveRight]), MoveRight, If(AtLeft [Drop] [MoveDown]), If(NotAtTop [MoveUp] [MoveLeft]), MoveDown, MoveDown, LoopWhile(AtTop [Grab]), LoopWhile(NotAtTop [MoveUp]), If(NotAtRight [MoveDown] [MoveRight]), MoveRight, MoveRight, LoopWhile(NotAtBottom [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveUp]), MoveUp, MoveDown, If(NotAtTop [MoveRight] [MoveUp]), LoopWhile(NotAtBottom [MoveDown]), LoopWhile(NotAtRight [MoveUp]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [Drop]), Grab, If(NotAtRight [MoveDown] [MoveLeft]), If(NotAtBottom [MoveUp] [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [Grab]), MoveLeft, LoopWhile(AtLeft [MoveLeft]), MoveLeft, LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [MoveRight]), MoveLeft, LoopWhile(AtRight [Grab]), LoopWhile(NotAtBottom [Drop]), LoopWhile(AtLeft [Drop]), If(AtBottom [MoveRight] [MoveUp]), MoveLeft, MoveUp, If(AtLeft [Grab] [MoveRight]), If(NotAtBottom [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [MoveRight]), MoveRight, If(AtLeft [MoveDown] [MoveUp]), If(NotAtLeft [MoveUp] [MoveDown]), If(NotAtBottom [MoveLeft] [Grab]), MoveUp, If(NotAtTop [MoveRight] [Drop]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [Grab]), MoveUp, LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [MoveRight]), If(AtBottom [Drop] [MoveDown]), LoopWhile(AtTop [MoveDown]), If(NotAtBottom [MoveLeft] [Grab]), LoopWhile(AtRight [MoveDown]), MoveDown, LoopWhile(AtLeft [Grab]), MoveLeft, LoopWhile(AtTop [MoveUp]), MoveRight, If(AtRight [Grab] [MoveLeft]), If(AtTop [MoveUp] [MoveDown]), MoveLeft, If(NotAtTop [MoveUp] [MoveLeft]), MoveRight, MoveLeft, LoopWhile(AtBottom [MoveUp]), MoveUp, If(AtLeft [Grab] [MoveRight]), MoveLeft, MoveLeft, LoopWhile(AtLeft [MoveDown]), If(AtBottom [MoveUp] [MoveDown]), LoopWhile(AtTop [MoveRight]), MoveDown, LoopWhile(AtBottom [MoveUp]), If(AtBottom [MoveDown] [MoveLeft]), LoopWhile(AtRight [MoveDown]), MoveRight, MoveLeft, If(AtRight [MoveLeft] [MoveRight]), If(AtRight [MoveUp] [MoveLeft]), MoveUp, LoopWhile(AtTop [MoveDown]), If(NotAtLeft [MoveUp] [MoveDown]), MoveUp, LoopWhile(AtRight [MoveDown]), LoopWhile(AtBottom [Drop]), MoveRight, MoveUp, MoveUp, MoveDown, LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [Drop]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtTop [Grab]), LoopWhile(AtRight [MoveDown]), MoveUp, LoopWhile(AtRight [MoveUp]), If(AtBottom [Grab] [MoveRight]), If(NotAtRight [MoveUp] [MoveRight]), MoveDown, MoveLeft, If(AtRight [MoveRight] [MoveLeft]), LoopWhile(AtBottom [MoveDown]), If(AtLeft [Drop] [MoveRight]), If(AtBottom [Drop] [Drop]), Grab, MoveDown, If(NotAtTop [MoveDown] [Drop]), LoopWhile(AtBottom [MoveUp]), Drop, MoveUp, MoveRight, MoveDown, MoveLeft, MoveDown, LoopWhile(AtLeft [Grab]), MoveLeft, If(AtTop [MoveRight] [MoveRight]), LoopWhile(AtRight [MoveDown]), If(NotAtRight [MoveRight] [Drop]), If(NotAtLeft [MoveLeft] [Drop]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [MoveRight]), MoveUp, MoveRight, If(AtBottom [MoveRight] [MoveDown]), If(NotAtBottom [MoveUp] [MoveRight]), MoveLeft, LoopWhile(AtLeft [MoveRight]), MoveUp, MoveDown, LoopWhile(AtTop [MoveDown]), MoveRight, If(NotAtLeft [MoveUp] [MoveDown]), LoopWhile(AtLeft [MoveDown]), MoveLeft, If(NotAtLeft [MoveLeft] [MoveUp]), MoveRight, MoveLeft, MoveDown, MoveUp, If(NotAtRight [MoveRight] [Grab]), MoveRight, If(NotAtLeft [MoveUp] [MoveLeft]), MoveDown, LoopWhile(AtTop [MoveUp]), If(NotAtBottom [MoveLeft] [Grab]), LoopWhile(AtRight [Drop]), If(AtTop [Drop] [MoveUp]), If(NotAtRight [MoveRight] [Grab]), If(AtLeft [Drop] [MoveDown]), LoopWhile(AtBottom [Grab]), MoveLeft, LoopWhile(AtRight [Grab]), MoveUp, MoveLeft, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [MoveRight]), If(AtTop [MoveRight] [MoveDown]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [MoveLeft]), If(AtRight [Drop] [MoveDown]), If(NotAtRight [MoveRight] [Grab]), If(AtTop [MoveDown] [MoveLeft]), If(NotAtBottom [MoveUp] [MoveRight]), MoveDown, If(AtBottom [MoveDown] [MoveDown]), LoopWhile(AtBottom [Grab]), MoveRight, LoopWhile(AtLeft [Drop]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtLeft [MoveRight]), MoveRight, LoopWhile(AtLeft [MoveLeft]), If(NotAtTop [MoveLeft] [MoveLeft]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveLeft, LoopWhile(AtRight [MoveUp]), If(AtBottom [MoveUp] [MoveLeft]), MoveRight, LoopWhile(AtBottom [MoveRight]), MoveUp, MoveRight, If(NotAtTop [MoveDown] [MoveRight]), If(NotAtRight [MoveUp] [MoveDown]), MoveLeft, MoveDown, MoveDown, MoveDown, If(NotAtBottom [MoveLeft] [Grab]), If(NotAtTop [MoveDown] [MoveRight]), If(AtBottom [Grab] [MoveUp])])", "cost_per_iteration": [[1, 27], [11, 26], [13, 25], [16, 26], [28, 27], [30, 26], [37, 27], [42, 28], [47, 27], [53, 28], [55, 27], [57, 26], [60, 25], [62, 23], [65, 25], [67, 26], [70, 27], [71, 26], [75, 27], [76, 28], [84, 29], [87, 28], [90, 27], [91, 26], [92, 27], [93, 28], [95, 27], [96, 26], [97, 27], [99, 26], [106, 25], [110, 24], [115, 23], [116, 22], [124, 23], [126, 22], [134, 21], [145, 20], [146, 19], [153, 20], [154, 19], [155, 20], [157, 21], [159, 20], [164, 19], [169, 20], [174, 19], [179, 20], [180, 21], [192, 20], [195, 19], [199, 17], [207, 19], [208, 17], [212, 19], [216, 20], [222, 21], [223, 22], [225, 20], [226, 19], [233, 20], [243, 21], [244, 22], [245, 21], [249, 20], [257, 19], [279, 16], [317, 15], [389, 14], [412, 15], [424, 14], [426, 13], [427, 12], [431, 11], [439, 12], [456, 11], [469, 12], [473, 13], [474, 14], [498, 13], [529, 12], [587, 11], [595, 10], [638, 9], [643, 10], [650, 9], [665, 8], [688, 9], [698, 8], [700, 7], [703, 5], [774, 7], [781, 5], [854, 7], [871, 5], [1210, 7], [1221, 5], [1561, 7], [1568, 8], [1579, 7], [1586, 8], [1604, 7], [1610, 5], [1899, 7], [1924, 5], [1960, 7], [1988, 5], [2279, 7], [2309, 8], [2319, 7], [2323, 8], [2327, 7], [2354, 8], [2366, 7], [2383, 8], [2410, 7], [2427, 8], [2428, 9], [2454, 8], [2469, 10], [2480, 11], [2510, 10], [2611, 11], [2662, 12], [2679, 11], [2696, 10], [2761, 11], [2815, 12], [2851, 11], [2941, 12], [3026, 11], [3029, 12], [3072, 13], [3083, 12], [3169, 11], [3215, 10], [3250, 9], [3257, 10], [3279, 9], [3304, 8], [3315, 9], [3397, 8], [3460, 9], [3519, 8], [3575, 7], [3577, 5], [3775, 7], [3777, 8], [3923, 9], [3928, 8], [3997, 7], [4106, 5], [4117, 7], [4186, 8], [4199, 7], [4200, 5], [4352, 7], [4507, 8], [4520, 7], [4527, 8], [4538, 7], [4625, 8], [4650, 7], [4703, 8], [4734, 7], [4803, 5], [4818, 7], [4849, 8], [5000, 9], [5039, 8], [5051, 7], [5058, 8], [5067, 7], [5141, 8], [5148, 9], [5149, 8], [5164, 9], [5167, 8], [5212, 7], [5220, 8], [5244, 7], [5311, 5], [5507, 7], [5539, 8], [5550, 7], [5593, 8], [5608, 7], [5657, 8], [5706, 7], [5721, 8], [5754, 7], [5797, 8], [5839, 9], [5898, 8], [5919, 9], [5946, 8], [5981, 7], [5985, 5], [6174, 7], [6175, 8], [6180, 7], [6188, 8], [6200, 7], [6211, 8], [6215, 7], [6291, 5], [6313, 7], [6361, 8], [6420, 7], [6458, 5], [6572, 7], [6597, 8], [6602, 7], [6606, 8], [6608, 9], [6625, 8], [6646, 7], [6754, 8], [6775, 7], [6863, 8], [6879, 7], [6898, 8], [6936, 7], [6987, 8], [7025, 9], [7026, 5], [7262, 7], [7298, 5], [7388, 7], [7464, 8], [7471, 7], [7486, 5], [7531, 7], [7553, 5], [7616, 7], [7637, 5], [7700, 7], [7715, 5], [7718, 7], [7719, 5], [7727, 7], [7738, 5], [7909, 7], [7912, 8], [7962, 7], [7990, 8], [8042, 9], [8048, 10], [8056, 9], [8081, 10], [8082, 9], [8090, 10], [8100, 11], [8143, 10], [8161, 9], [8169, 10], [8180, 9], [8234, 8], [8272, 9], [8285, 10], [8304, 9], [8305, 10], [8420, 9], [8422, 8], [8438, 9], [8449, 8], [8488, 9], [8526, 10], [8532, 11], [8551, 10], [8575, 9], [8600, 8], [8658, 7], [8711, 8], [8739, 7], [8784, 5], [9277, 7], [9329, 8], [9342, 7], [9471, 8], [9511, 9], [9570, 8], [9615, 7], [9652, 5], [9861, 7], [9872, 5], [9890, 7], [9954, 8], [9965, 7], [10048, 8], [10059, 9], [10084, 10], [10163, 9], [10178, 8], [10183, 9], [10190, 8], [10198, 9], [10209, 8], [10254, 7], [10276, 8], [10337, 7], [10348, 8], [10441, 9], [10443, 8], [10470, 9], [10539, 8], [10562, 9], [10578, 8], [10599, 9], [10605, 8], [10608, 7], [10658, 8], [10661, 9], [10673, 8], [10677, 7], [10688, 8], [10779, 9], [10793, 8], [10807, 9], [10839, 8], [10842, 7], [10844, 5], [10870, 7], [10959, 8], [11117, 9], [11140, 8], [11149, 9], [11155, 8], [11242, 9], [11266, 8], [11290, 9], [11301, 8], [11305, 7], [11306, 5], [11357, 7], [11386, 5], [11406, 6], [11457, 5], [11525, 4], [11696, 5], [11834, 4], [11938, 3], [12014, 4], [12111, 3], [12263, 2], [12320, 3], [12349, 4], [12397, 5], [12454, 4], [12496, 3], [12696, 4], [12713, 5], [12714, 4], [12779, 3], [12802, 4], [12846, 3], [12860, 2], [12932, 1], [12952, 2], [12978, 1], [13107, 0]], "number_of_iterations": 13107}}
