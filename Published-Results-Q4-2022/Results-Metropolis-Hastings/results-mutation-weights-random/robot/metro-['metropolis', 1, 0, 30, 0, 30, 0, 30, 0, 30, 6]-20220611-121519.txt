{"test_case": 0, "data": "MetropolisHasting 0: robots/2-0-0.pl, test_cost: 0, train_cost: 0, time: 0.005162063000000001, length: 42, iterations: 389"}
{"test_case": 0, "data": "MetropolisHasting 0: robots/2-0-0.pl, test_cost: 0, train_cost: 0, time: 0.010199235, length: 59, iterations: 672"}
{"test_case": 1, "data": "MetropolisHasting 1: robots/2-0-1.pl, test_cost: 0, train_cost: 0, time: 0.006841016000000002, length: 24, iterations: 561"}
{"test_case": 1, "data": "MetropolisHasting 1: robots/2-0-1.pl, test_cost: 0, train_cost: 0, time: 0.003356198999999999, length: 17, iterations: 270"}
{"test_case": 2, "data": "MetropolisHasting 2: robots/2-0-2.pl, test_cost: 0, train_cost: 0, time: 0.0024100699999999985, length: 11, iterations: 221"}
{"test_case": 3, "data": "MetropolisHasting 3: robots/2-0-3.pl, test_cost: 0, train_cost: 0, time: 4.947100000000232e-05, length: 3, iterations: 3"}
{"test_case": 2, "data": "MetropolisHasting 2: robots/2-0-2.pl, test_cost: 0, train_cost: 0, time: 0.0034284860000000014, length: 19, iterations: 282"}
{"test_case": 4, "data": "MetropolisHasting 4: robots/2-0-4.pl, test_cost: 0, train_cost: 0, time: 4.489900000000102e-05, length: 3, iterations: 1"}

{"test_case": 5, "data": "MetropolisHasting 5: robots/2-0-5.pl, test_cost: 0, train_cost: 0, time: 0.00013907999999999976, length: 6, iterations: 10"}
{"test_case": 6, "data": "MetropolisHasting 6: robots/2-0-6.pl, test_cost: 0, train_cost: 0, time: 0.00016854999999999995, length: 4, iterations: 14"}
{"test_case": 7, "data": "MetropolisHasting 7: robots/2-0-7.pl, test_cost: 0, train_cost: 0, time: 0.00029548699999999706, length: 3, iterations: 29"}
{"test_case": 8, "data": "MetropolisHasting 8: robots/2-0-8.pl, test_cost: 0, train_cost: 0, time: 0.00451, length: 38, iterations: 386"}
{"test_case": 9, "data": "MetropolisHasting 9: robots/2-0-9.pl, test_cost: 0, train_cost: 0, time: 0.008670085000000001, length: 57, iterations: 592"}
{"test_case": 5, "data": "MetropolisHasting 5: robots/2-0-5.pl, test_cost: 0, train_cost: 0, time: 0.000485203, length: 4, iterations: 50"}
0"}
{"test_case": 11, "data": "MetropolisHasting 11: robots/2-1-0.pl, test_cost: 0, train_cost: 0, time: 0.028559331, length: 67, iterations: 1683"}
44"}
{"test_case": 12, "data": "MetropolisHasting 12: robots/2-1-1.pl, test_cost: 0, train_cost: 0, time: 0.011235745999999998, length: 20, iterations: 1026"}
{"test_case": 13, "data": "MetropolisHasting 13: robots/2-1-2.pl, test_cost: 0, train_cost: 0, time: 0.0029574760000000005, length: 8, iterations: 262"}
{"test_case": 14, "data": "MetropolisHasting 14: robots/2-1-3.pl, test_cost: 0, train_cost: 0, time: 7.672999999999708e-05, length: 1, iterations: 6"}

{"test_case": 15, "data": "MetropolisHasting 15: robots/2-1-4.pl, test_cost: 0, train_cost: 0, time: 3.340000000000287e-05, length: 0, iterations: 2"}
{"test_case": 16, "data": "MetropolisHasting 16: robots/2-1-5.pl, test_cost: 0, train_cost: 0, time: 0.0019721850000000013, length: 31, iterations: 162"}
{"test_case": 17, "data": "MetropolisHasting 17: robots/2-1-6.pl, test_cost: 0, train_cost: 0, time: 0.004292101999999999, length: 27, iterations: 386"}
{"test_case": 18, "data": "MetropolisHasting 18: robots/2-1-7.pl, test_cost: 0, train_cost: 0, time: 5.059699999999945e-05, length: 1, iterations: 3"}
}
{"test_case": 13, "data": "MetropolisHasting 13: robots/2-1-2.pl, test_cost: 0, train_cost: 0, time: 0.0020663309999999976, length: 26, iterations: 188"}
{"test_case": 20, "data": "MetropolisHasting 20: robots/2-1-9.pl, test_cost: 0, train_cost: 0, time: 0.00035346900000000035, length: 2, iterations: 15"}
{"test_case": 21, "data": "MetropolisHasting 21: robots/2-1-10.pl, test_cost: 0, train_cost: 0, time: 0.01036476, length: 5, iterations: 910"}
ons: 16"}
{"test_case": 16, "data": "MetropolisHasting 16: robots/2-1-5.pl, test_cost: 0, train_cost: 0, time: 0.0007740900000000016, length: 6, iterations: 71"}
{"test_case": 23, "data": "MetropolisHasting 23: robots/2-2-1.pl, test_cost: 0, train_cost: 0, time: 0.006019388000000004, length: 22, iterations: 517"}

{"test_case": 24, "data": "MetropolisHasting 24: robots/2-2-2.pl, test_cost: 0, train_cost: 0, time: 0.0025617110000000012, length: 28, iterations: 231"}
{"test_case": 25, "data": "MetropolisHasting 25: robots/2-2-3.pl, test_cost: 0, train_cost: 0, time: 0.002033153000000003, length: 19, iterations: 164"}
{"test_case": 26, "data": "MetropolisHasting 26: robots/2-2-4.pl, test_cost: 0, train_cost: 0, time: 0.008412064000000004, length: 16, iterations: 730"}
{"test_case": 21, "data": "MetropolisHasting 21: robots/2-1-10.pl, test_cost: 0, train_cost: 0, time: 0.009026926999999999, length: 29, iterations: 707"}
{"test_case": 28, "data": "MetropolisHasting 28: robots/2-2-6.pl, test_cost: 0, train_cost: 0, time: 0.004390197999999998, length: 31, iterations: 398"}
{"test_case": 29, "data": "MetropolisHasting 29: robots/2-2-7.pl, test_cost: 0, train_cost: 0, time: 0.008387157999999992, length: 25, iterations: 702"}
{"test_case": 30, "data": "MetropolisHasting 30: robots/2-2-8.pl, test_cost: 0, train_cost: 0, time: 0.0003023070000000008, length: 2, iterations: 8"}
{"test_case": 31, "data": "MetropolisHasting 31: robots/2-2-9.pl, test_cost: 0, train_cost: 0, time: 0.00019839000000000055, length: 5, iterations: 16"}
{"test_case": 32, "data": "MetropolisHasting 32: robots/2-2-10.pl, test_cost: 0, train_cost: 0, time: 0.0007592409999999999, length: 14, iterations: 69"}
{"test_case": 33, "data": "MetropolisHasting 33: robots/2-3-0.pl, test_cost: 0, train_cost: 0, time: 0.0005031159999999996, length: 17, iterations: 37"}
{"test_case": 34, "data": "MetropolisHasting 34: robots/2-3-1.pl, test_cost: 0, train_cost: 0, time: 0.013888406999999998, length: 66, iterations: 917"}
{"test_case": 35, "data": "MetropolisHasting 35: robots/2-3-2.pl, test_cost: 0, train_cost: 0, time: 0.003438179999999999, length: 13, iterations: 294"}
{"test_case": 36, "data": "MetropolisHasting 36: robots/2-3-3.pl, test_cost: 0, train_cost: 0, time: 0.013896977000000001, length: 19, iterations: 1011"}
{"test_case": 37, "data": "MetropolisHasting 37: robots/2-3-4.pl, test_cost: 0, train_cost: 0, time: 0.0015530169999999968, length: 11, iterations: 132"}
{"test_case": 38, "data": "MetropolisHasting 38: robots/2-3-5.pl, test_cost: 0, train_cost: 0, time: 0.010352047999999996, length: 74, iterations: 687"}
{"test_case": 39, "data": "MetropolisHasting 39: robots/2-3-6.pl, test_cost: 0, train_cost: 0, time: 0.0012988810000000017, length: 24, iterations: 101"}
{"test_case": 40, "data": "MetropolisHasting 40: robots/2-3-7.pl, test_cost: 0, train_cost: 0, time: 0.0009705629999999998, length: 11, iterations: 68"}
{"test_case": 41, "data": "MetropolisHasting 41: robots/2-3-8.pl, test_cost: 0, train_cost: 0, time: 0.002159533, length: 15, iterations: 198"}
{"test_case": 42, "data": "MetropolisHasting 42: robots/2-3-9.pl, test_cost: 0, train_cost: 0, time: 0.0070355290000000004, length: 10, iterations: 610"}
{"test_case": 43, "data": "MetropolisHasting 43: robots/2-3-10.pl, test_cost: 0, train_cost: 0, time: 0.00807623, length: 48, iterations: 570"}
{"test_case": 44, "data": "MetropolisHasting 44: robots/2-4-0.pl, test_cost: 0, train_cost: 0, time: 0.0016699350000000009, length: 6, iterations: 151"}
{"test_case": 45, "data": "MetropolisHasting 45: robots/2-4-1.pl, test_cost: 0, train_cost: 0, time: 0.0016596510000000016, length: 17, iterations: 149"}
{"test_case": 46, "data": "MetropolisHasting 46: robots/2-4-2.pl, test_cost: 0, train_cost: 0, time: 0.003955833000000002, length: 10, iterations: 351"}
{"test_case": 47, "data": "MetropolisHasting 47: robots/2-4-3.pl, test_cost: 0, train_cost: 0, time: 0.00032972200000000104, length: 6, iterations: 29"}
{"test_case": 48, "data": "MetropolisHasting 48: robots/2-4-4.pl, test_cost: 0, train_cost: 0, time: 0.008801042000000002, length: 28, iterations: 758"}
{"test_case": 49, "data": "MetropolisHasting 49: robots/2-4-5.pl, test_cost: 0, train_cost: 0, time: 0.014088113, length: 12, iterations: 1022"}
{"test_case": 50, "data": "MetropolisHasting 50: robots/2-4-6.pl, test_cost: 0, train_cost: 0, time: 0.00024479800000000006, length: 2, iterations: 4"}
{"test_case": 51, "data": "MetropolisHasting 51: robots/2-4-7.pl, test_cost: 0, train_cost: 0, time: 0.00035480600000000004, length: 8, iterations: 25"}
{"test_case": 52, "data": "MetropolisHasting 52: robots/2-4-8.pl, test_cost: 0, train_cost: 0, time: 0.015754709999999998, length: 46, iterations: 1093"}
{"test_case": 53, "data": "MetropolisHasting 53: robots/2-4-9.pl, test_cost: 0, train_cost: 0, time: 0.005163197000000001, length: 39, iterations: 433"}
{"test_case": 54, "data": "MetropolisHasting 54: robots/2-4-10.pl, test_cost: 0, train_cost: 0, time: 0.0016393830000000012, length: 16, iterations: 140"}
{"test_case": 55, "data": "MetropolisHasting 55: robots/2-5-0.pl, test_cost: 0, train_cost: 0, time: 0.0009241890000000023, length: 13, iterations: 83"}
{"test_case": 56, "data": "MetropolisHasting 56: robots/2-5-1.pl, test_cost: 0, train_cost: 0, time: 0.003582830000000002, length: 7, iterations: 314"}
{"test_case": 57, "data": "MetropolisHasting 57: robots/2-5-2.pl, test_cost: 0, train_cost: 0, time: 0.04161589499999999, length: 107, iterations: 2518"}
{"test_case": 58, "data": "MetropolisHasting 58: robots/2-5-3.pl, test_cost: 0, train_cost: 0, time: 0.002511847999999997, length: 8, iterations: 230"}
{"test_case": 59, "data": "MetropolisHasting 59: robots/2-5-4.pl, test_cost: 0, train_cost: 0, time: 0.016492947999999993, length: 23, iterations: 1278"}
{"test_case": 22, "data": "MetropolisHasting 22: robots/2-2-0.pl, test_cost: 0, train_cost: 0, time: 0.004692729999999999, length: 42, iterations: 357"}
{"test_case": 23, "data": "MetropolisHasting 23: robots/2-2-1.pl, test_cost: 0, train_cost: 0, time: 0.0036066249999999987, length: 18, iterations: 307"}
{"test_case": 24, "data": "MetropolisHasting 24: robots/2-2-2.pl, test_cost: 0, train_cost: 0, time: 0.0011684139999999996, length: 18, iterations: 101"}
{"test_case": 25, "data": "MetropolisHasting 25: robots/2-2-3.pl, test_cost: 0, train_cost: 0, time: 0.008680284000000003, length: 21, iterations: 686"}
{"test_case": 26, "data": "MetropolisHasting 26: robots/2-2-4.pl, test_cost: 0, train_cost: 0, time: 0.003006054000000001, length: 26, iterations: 231"}
{"test_case": 60, "data": "MetropolisHasting 60: robots/2-5-5.pl, test_cost: 0, train_cost: 0, time: 0.0028078059999999995, length: 13, iterations: 224"}
{"test_case": 61, "data": "MetropolisHasting 61: robots/2-5-6.pl, test_cost: 0, train_cost: 0, time: 9.724199999999999e-05, length: 2, iterations: 6"}
{"test_case": 62, "data": "MetropolisHasting 62: robots/2-5-7.pl, test_cost: 0, train_cost: 0, time: 0.019293667, length: 29, iterations: 1404"}
{"test_case": 63, "data": "MetropolisHasting 63: robots/2-5-8.pl, test_cost: 0, train_cost: 0, time: 0.005819742000000003, length: 16, iterations: 527"}
{"test_case": 64, "data": "MetropolisHasting 64: robots/2-5-9.pl, test_cost: 0, train_cost: 0, time: 0.00042366000000000625, length: 9, iterations: 38"}
{"test_case": 65, "data": "MetropolisHasting 65: robots/2-5-10.pl, test_cost: 0, train_cost: 0, time: 0.003311952, length: 15, iterations: 270"}
{"test_case": 66, "data": "MetropolisHasting 66: robots/2-6-0.pl, test_cost: 0, train_cost: 0, time: 0.003929542000000001, length: 18, iterations: 349"}
{"test_case": 67, "data": "MetropolisHasting 67: robots/2-6-1.pl, test_cost: 0, train_cost: 0, time: 0.015725867999999997, length: 29, iterations: 1207"}
{"test_case": 68, "data": "MetropolisHasting 68: robots/2-6-2.pl, test_cost: 0, train_cost: 0, time: 0.0006047019999999986, length: 8, iterations: 52"}
{"test_case": 69, "data": "MetropolisHasting 69: robots/2-6-3.pl, test_cost: 0, train_cost: 0, time: 0.008726806000000004, length: 60, iterations: 591"}
{"test_case": 70, "data": "MetropolisHasting 70: robots/2-6-4.pl, test_cost: 0, train_cost: 0, time: 0.005161596, length: 49, iterations: 376"}
{"test_case": 71, "data": "MetropolisHasting 71: robots/2-6-5.pl, test_cost: 0, train_cost: 0, time: 0.00040026999999999945, length: 13, iterations: 32"}
{"test_case": 27, "data": "MetropolisHasting 27: robots/2-2-5.pl, test_cost: 0, train_cost: 0, time: 0.0029828699999999986, length: 14, iterations: 265"}
{"test_case": 28, "data": "MetropolisHasting 28: robots/2-2-6.pl, test_cost: 0, train_cost: 0, time: 0.015696127000000004, length: 20, iterations: 1208"}
{"test_case": 29, "data": "MetropolisHasting 29: robots/2-2-7.pl, test_cost: 0, train_cost: 0, time: 0.014190182999999995, length: 18, iterations: 1145"}
{"test_case": 30, "data": "MetropolisHasting 30: robots/2-2-8.pl, test_cost: 0, train_cost: 0, time: 0.0003232469999999996, length: 2, iterations: 7"}
{"test_case": 31, "data": "MetropolisHasting 31: robots/2-2-9.pl, test_cost: 0, train_cost: 0, time: 0.00014153299999999924, length: 3, iterations: 11"}
{"test_case": 32, "data": "MetropolisHasting 32: robots/2-2-10.pl, test_cost: 0, train_cost: 0, time: 0.017964297, length: 23, iterations: 1501"}
{"test_case": 33, "data": "MetropolisHasting 33: robots/2-3-0.pl, test_cost: 0, train_cost: 0, time: 0.0032839849999999997, length: 11, iterations: 283"}
{"test_case": 34, "data": "MetropolisHasting 34: robots/2-3-1.pl, test_cost: 0, train_cost: 0, time: 0.004371130000000001, length: 42, iterations: 353"}
{"test_case": 35, "data": "MetropolisHasting 35: robots/2-3-2.pl, test_cost: 0, train_cost: 0, time: 0.009882642999999997, length: 41, iterations: 854"}
{"test_case": 36, "data": "MetropolisHasting 36: robots/2-3-3.pl, test_cost: 0, train_cost: 0, time: 0.014415431999999999, length: 72, iterations: 899"}
{"test_case": 37, "data": "MetropolisHasting 37: robots/2-3-4.pl, test_cost: 0, train_cost: 0, time: 0.005731656999999994, length: 9, iterations: 500"}
{"test_case": 38, "data": "MetropolisHasting 38: robots/2-3-5.pl, test_cost: 0, train_cost: 0, time: 0.009758175000000001, length: 36, iterations: 813"}
{"test_case": 39, "data": "MetropolisHasting 39: robots/2-3-6.pl, test_cost: 0, train_cost: 0, time: 0.024306768999999992, length: 39, iterations: 2127"}
{"test_case": 40, "data": "MetropolisHasting 40: robots/2-3-7.pl, test_cost: 0, train_cost: 0, time: 0.021392338, length: 21, iterations: 1930"}
{"test_case": 41, "data": "MetropolisHasting 41: robots/2-3-8.pl, test_cost: 0, train_cost: 0, time: 0.0013505909999999982, length: 13, iterations: 113"}
{"test_case": 42, "data": "MetropolisHasting 42: robots/2-3-9.pl, test_cost: 0, train_cost: 0, time: 0.005652616999999999, length: 20, iterations: 513"}
{"test_case": 43, "data": "MetropolisHasting 43: robots/2-3-10.pl, test_cost: 0, train_cost: 0, time: 0.010315280999999996, length: 41, iterations: 883"}
{"test_case": 44, "data": "MetropolisHasting 44: robots/2-4-0.pl, test_cost: 0, train_cost: 0, time: 0.0005576539999999977, length: 5, iterations: 44"}
{"test_case": 45, "data": "MetropolisHasting 45: robots/2-4-1.pl, test_cost: 0, train_cost: 0, time: 0.003090995000000006, length: 19, iterations: 278"}
{"test_case": 46, "data": "MetropolisHasting 46: robots/2-4-2.pl, test_cost: 0, train_cost: 0, time: 0.008372663999999995, length: 38, iterations: 589"}
{"test_case": 72, "data": "MetropolisHasting 72: robots/2-6-6.pl, test_cost: 0, train_cost: 0, time: 0.00037924599999999975, length: 10, iterations: 28"}
est_case": 48, "data": "MetropolisHasting 48: robots/2-4-4.pl, test_cost: 0, train_cost: 0, time: 0.014386723999999997, length: 56, iterations: 1042"}
{"test_case": 49, "data": "MetropolisHasting 49: robots/2-4-5.pl, test_cost: 0, train_cost: 0, time: 0.009742362000000004, length: 39, iterations: 746"}
{"test_case": 50, "data": "MetropolisHasting 50: robots/2-4-6.pl, test_cost: 0, train_cost: 0, time: 0.000165826, length: 0, iterations: 1"}
{"test_case": 51, "data": "MetropolisHasting 51: robots/2-4-7.pl, test_cost: 0, train_cost: 0, time: 0.0010731290000000008, length: 6, iterations: 104"}
{"test_case": 52, "data": "MetropolisHasting 52: robots/2-4-8.pl, test_cost: 0, train_cost: 0, time: 0.003475759, length: 35, iterations: 270"}
{"test_case": 53, "data": "MetropolisHasting 53: robots/2-4-9.pl, test_cost: 0, train_cost: 0, time: 0.020803066, length: 25, iterations: 1949"}
{"test_case": 54, "data": "MetropolisHasting 54: robots/2-4-10.pl, test_cost: 0, train_cost: 0, time: 0.004483652999999997, length: 13, iterations: 390"}
{"test_case": 55, "data": "MetropolisHasting 55: robots/2-5-0.pl, test_cost: 0, train_cost: 0, time: 0.0008071030000000035, length: 13, iterations: 72"}
{"test_case": 56, "data": "MetropolisHasting 56: robots/2-5-1.pl, test_cost: 0, train_cost: 0, time: 0.0008174469999999989, length: 12, iterations: 77"}
{"test_case": 57, "data": "MetropolisHasting 57: robots/2-5-2.pl, test_cost: 0, train_cost: 0, time: 0.007326030999999997, length: 17, iterations: 664"}
{"test_case": 58, "data": "MetropolisHasting 58: robots/2-5-3.pl, test_cost: 0, train_cost: 0, time: 0.004038936, length: 22, iterations: 332"}
{"test_case": 59, "data": "MetropolisHasting 59: robots/2-5-4.pl, test_cost: 0, train_cost: 0, time: 0.0019670769999999976, length: 14, iterations: 181"}
{"test_case": 60, "data": "MetropolisHasting 60: robots/2-5-5.pl, test_cost: 0, train_cost: 0, time: 0.001331016, length: 18, iterations: 104"}
{"test_case": 61, "data": "MetropolisHasting 61: robots/2-5-6.pl, test_cost: 0, train_cost: 0, time: 2.9274999999999614e-05, length: 0, iterations: 1"}
{"test_case": 62, "data": "MetropolisHasting 62: robots/2-5-7.pl, test_cost: 0, train_cost: 0, time: 0.012143304, length: 20, iterations: 953"}
{"test_case": 63, "data": "MetropolisHasting 63: robots/2-5-8.pl, test_cost: 0, train_cost: 0, time: 0.00040474999999999886, length: 11, iterations: 32"}
{"test_case": 64, "data": "MetropolisHasting 64: robots/2-5-9.pl, test_cost: 0, train_cost: 0, time: 0.002225315999999998, length: 15, iterations: 188"}
{"test_case": 65, "data": "MetropolisHasting 65: robots/2-5-10.pl, test_cost: 0, train_cost: 0, time: 0.0010863180000000028, length: 15, iterations: 89"}
{"test_case": 66, "data": "MetropolisHasting 66: robots/2-6-0.pl, test_cost: 0, train_cost: 0, time: 0.0019616679999999997, length: 12, iterations: 184"}
{"test_case": 67, "data": "MetropolisHasting 67: robots/2-6-1.pl, test_cost: 0, train_cost: 0, time: 0.005885130000000002, length: 16, iterations: 521"}
{"test_case": 73, "data": "MetropolisHasting 73: robots/2-6-7.pl, test_cost: 0, train_cost: 0, time: 0.0008361600000000007, length: 12, iterations: 72"}
{"test_case": 74, "data": "MetropolisHasting 74: robots/2-6-8.pl, test_cost: 0, train_cost: 0, time: 0.019648426, length: 38, iterations: 1553"}
{"test_case": 75, "data": "MetropolisHasting 75: robots/2-6-9.pl, test_cost: 0, train_cost: 0, time: 0.020838624, length: 15, iterations: 1720"}
{"test_case": 76, "data": "MetropolisHasting 76: robots/2-6-10.pl, test_cost: 0, train_cost: 0, time: 0.001372459999999999, length: 20, iterations: 112"}
{"test_case": 77, "data": "MetropolisHasting 77: robots/2-7-0.pl, test_cost: 0, train_cost: 0, time: 0.012642805, length: 67, iterations: 943"}
{"test_case": 78, "data": "MetropolisHasting 78: robots/2-7-1.pl, test_cost: 0, train_cost: 0, time: 0.005631214999999995, length: 23, iterations: 429"}
{"test_case": 79, "data": "MetropolisHasting 79: robots/2-7-2.pl, test_cost: 0, train_cost: 0, time: 0.00042854999999999976, length: 7, iterations: 38"}
{"test_case": 80, "data": "MetropolisHasting 80: robots/2-7-3.pl, test_cost: 0, train_cost: 0, time: 0.0014447169999999999, length: 4, iterations: 115"}
{"test_case": 81, "data": "MetropolisHasting 81: robots/2-7-4.pl, test_cost: 0, train_cost: 0, time: 0.00018547500000000005, length: 8, iterations: 15"}
{"test_case": 82, "data": "MetropolisHasting 82: robots/2-7-5.pl, test_cost: 0, train_cost: 0, time: 0.006100276, length: 16, iterations: 527"}
{"test_case": 83, "data": "MetropolisHasting 83: robots/2-7-6.pl, test_cost: 0, train_cost: 0, time: 4.046700000000063e-05, length: 0, iterations: 2"}
{"test_case": 84, "data": "MetropolisHasting 84: robots/2-7-7.pl, test_cost: 0, train_cost: 0, time: 0.0008053560000000001, length: 15, iterations: 67"}
{"test_case": 85, "data": "MetropolisHasting 85: robots/2-7-8.pl, test_cost: 0, train_cost: 0, time: 0.013129118, length: 92, iterations: 829"}
{"test_case": 86, "data": "MetropolisHasting 86: robots/2-7-9.pl, test_cost: 0, train_cost: 0, time: 2.752299999999805e-05, length: 0, iterations: 1"}
{"test_case": 87, "data": "MetropolisHasting 87: robots/2-7-10.pl, test_cost: 0, train_cost: 0, time: 0.00013452899999999782, length: 3, iterations: 10"}
{"test_case": 88, "data": "MetropolisHasting 88: robots/2-8-0.pl, test_cost: 0, train_cost: 0, time: 0.007746389999999999, length: 26, iterations: 645"}
{"test_case": 89, "data": "MetropolisHasting 89: robots/2-8-1.pl, test_cost: 0, train_cost: 0, time: 0.017413684999999998, length: 57, iterations: 1259"}
{"test_case": 90, "data": "MetropolisHasting 90: robots/2-8-2.pl, test_cost: 0, train_cost: 0, time: 0.0027578000000000004, length: 25, iterations: 217"}
{"test_case": 91, "data": "MetropolisHasting 91: robots/2-8-3.pl, test_cost: 0, train_cost: 0, time: 0.006296658000000001, length: 28, iterations: 530"}
{"test_case": 68, "data": "MetropolisHasting 68: robots/2-6-2.pl, test_cost: 0, train_cost: 0, time: 0.0035677179999999975, length: 35, iterations: 267"}
{"test_case": 92, "data": "MetropolisHasting 92: robots/2-8-4.pl, test_cost: 0, train_cost: 0, time: 0.0015431539999999997, length: 6, iterations: 135"}
{"test_case": 93, "data": "MetropolisHasting 93: robots/2-8-5.pl, test_cost: 0, train_cost: 0, time: 0.008790478000000001, length: 15, iterations: 827"}
{"test_case": 94, "data": "MetropolisHasting 94: robots/2-8-6.pl, test_cost: 0, train_cost: 0, time: 0.008553517, length: 34, iterations: 676"}
{"test_case": 95, "data": "MetropolisHasting 95: robots/2-8-7.pl, test_cost: 0, train_cost: 0, time: 6.303499999999601e-05, length: 1, iterations: 4"}
{"test_case": 96, "data": "MetropolisHasting 96: robots/2-8-8.pl, test_cost: 0, train_cost: 0, time: 0.00022101799999999644, length: 6, iterations: 20"}
{"test_case": 97, "data": "MetropolisHasting 97: robots/2-8-9.pl, test_cost: 0, train_cost: 0, time: 0.002535763999999996, length: 20, iterations: 210"}
{"test_case": 98, "data": "MetropolisHasting 98: robots/2-8-10.pl, test_cost: 0, train_cost: 0, time: 0.009804010000000002, length: 20, iterations: 836"}
{"test_case": 99, "data": "MetropolisHasting 99: robots/2-9-0.pl, test_cost: 0, train_cost: 0, time: 0.030434284000000006, length: 37, iterations: 2553"}
{"test_case": 100, "data": "MetropolisHasting 100: robots/2-9-1.pl, test_cost: 0, train_cost: 0, time: 0.000979746, length: 7, iterations: 71"}
{"test_case": 101, "data": "MetropolisHasting 101: robots/2-9-2.pl, test_cost: 0, train_cost: 0, time: 0.005946604, length: 8, iterations: 504"}
{"test_case": 69, "data": "MetropolisHasting 69: robots/2-6-3.pl, test_cost: 0, train_cost: 0, time: 0.021103303000000004, length: 90, iterations: 1221"}
e": 103, "data": "MetropolisHasting 103: robots/2-9-4.pl, test_cost: 0, train_cost: 0, time: 0.0024500170000000005, length: 4, iterations: 218"}
{"test_case": 104, "data": "MetropolisHasting 104: robots/2-9-5.pl, test_cost: 0, train_cost: 0, time: 0.003513406, length: 17, iterations: 282"}
{"test_case": 105, "data": "MetropolisHasting 105: robots/2-9-6.pl, test_cost: 0, train_cost: 0, time: 0.0015772959999999989, length: 18, iterations: 142"}
{"test_case": 106, "data": "MetropolisHasting 106: robots/2-9-7.pl, test_cost: 0, train_cost: 0, time: 8.998500000000076e-05, length: 0, iterations: 6"}
{"test_case": 107, "data": "MetropolisHasting 107: robots/2-9-8.pl, test_cost: 0, train_cost: 0, time: 0.0018861799999999977, length: 14, iterations: 168"}
{"test_case": 108, "data": "MetropolisHasting 108: robots/2-9-9.pl, test_cost: 0, train_cost: 0, time: 0.0018991850000000012, length: 34, iterations: 148"}
{"test_case": 109, "data": "MetropolisHasting 109: robots/2-9-10.pl, test_cost: 0, train_cost: 0, time: 0.011458716, length: 21, iterations: 1028"}
{"test_case": 110, "data": "MetropolisHasting 110: robots/4-0-0.pl, test_cost: 0, train_cost: 0, time: 0.012479354999999998, length: 51, iterations: 807"}
{"test_case": 111, "data": "MetropolisHasting 111: robots/4-0-1.pl, test_cost: 0, train_cost: 0, time: 0.007499859999999997, length: 67, iterations: 453"}
{"test_case": 112, "data": "MetropolisHasting 112: robots/4-0-2.pl, test_cost: 0, train_cost: 0, time: 0.08921285300000001, length: 61, iterations: 3510"}
{"test_case": 113, "data": "MetropolisHasting 113: robots/4-0-3.pl, test_cost: 0, train_cost: 0, time: 0.004021855000000005, length: 71, iterations: 235"}
{"test_case": 114, "data": "MetropolisHasting 114: robots/4-0-4.pl, test_cost: 0, train_cost: 0, time: 0.0009398810000000035, length: 20, iterations: 84"}
{"test_case": 115, "data": "MetropolisHasting 115: robots/4-0-5.pl, test_cost: 0, train_cost: 0, time: 0.04716717299999999, length: 232, iterations: 1751"}
{"test_case": 116, "data": "MetropolisHasting 116: robots/4-0-6.pl, test_cost: 0, train_cost: 0, time: 0.028468315000000022, length: 84, iterations: 1691"}
{"test_case": 117, "data": "MetropolisHasting 117: robots/4-0-7.pl, test_cost: 0, train_cost: 0, time: 0.04749885200000001, length: 74, iterations: 2703"}
{"test_case": 118, "data": "MetropolisHasting 118: robots/4-0-8.pl, test_cost: 0, train_cost: 0, time: 0.016644416000000023, length: 46, iterations: 1321"}
{"test_case": 119, "data": "MetropolisHasting 119: robots/4-0-9.pl, test_cost: 0, train_cost: 0, time: 0.008197198000000017, length: 48, iterations: 604"}
{"test_case": 120, "data": "MetropolisHasting 120: robots/4-0-10.pl, test_cost: 0, train_cost: 0, time: 0.157384952, length: 377, iterations: 4622"}
{"test_case": 121, "data": "MetropolisHasting 121: robots/4-1-0.pl, test_cost: 0, train_cost: 0, time: 0.247183389, length: 481, iterations: 5542"}
{"test_case": 122, "data": "MetropolisHasting 122: robots/4-1-1.pl, test_cost: 0, train_cost: 0, time: 0.12048447000000001, length: 161, iterations: 6172"}
{"test_case": 123, "data": "MetropolisHasting 123: robots/4-1-2.pl, test_cost: 0, train_cost: 0, time: 0.147807554, length: 333, iterations: 3873"}
{"test_case": 124, "data": "MetropolisHasting 124: robots/4-1-3.pl, test_cost: 0, train_cost: 0, time: 0.004256892999999984, length: 38, iterations: 344"}
{"test_case": 125, "data": "MetropolisHasting 125: robots/4-1-4.pl, test_cost: 0, train_cost: 0, time: 0.06373881200000009, length: 235, iterations: 2307"}
{"test_case": 126, "data": "MetropolisHasting 126: robots/4-1-5.pl, test_cost: 0, train_cost: 0, time: 0.05176976999999994, length: 53, iterations: 3541"}
{"test_case": 127, "data": "MetropolisHasting 127: robots/4-1-6.pl, test_cost: 0, train_cost: 0, time: 0.003310293000000075, length: 27, iterations: 248"}
{"test_case": 128, "data": "MetropolisHasting 128: robots/4-1-7.pl, test_cost: 0, train_cost: 0, time: 0.020902535000000055, length: 125, iterations: 907"}
{"test_case": 129, "data": "MetropolisHasting 129: robots/4-1-8.pl, test_cost: 0, train_cost: 0, time: 0.0147872, length: 76, iterations: 903"}
{"test_case": 130, "data": "MetropolisHasting 130: robots/4-1-9.pl, test_cost: 0, train_cost: 0, time: 0.013609432000000001, length: 68, iterations: 998"}
{"test_case": 131, "data": "MetropolisHasting 131: robots/4-1-10.pl, test_cost: 0, train_cost: 0, time: 0.082287552, length: 255, iterations: 2957"}
{"test_case": 132, "data": "MetropolisHasting 132: robots/4-2-0.pl, test_cost: 0, train_cost: 0, time: 0.013073256999999991, length: 102, iterations: 747"}
{"test_case": 133, "data": "MetropolisHasting 133: robots/4-2-1.pl, test_cost: 0, train_cost: 0, time: 0.028467167000000015, length: 23, iterations: 2265"}
{"test_case": 134, "data": "MetropolisHasting 134: robots/4-2-2.pl, test_cost: 0, train_cost: 0, time: 1.358665753, length: 1020, iterations: 18098"}
{"test_case": 135, "data": "MetropolisHasting 135: robots/4-2-3.pl, test_cost: 0, train_cost: 0, time: 0.020217089000000188, length: 57, iterations: 1351"}
{"test_case": 136, "data": "MetropolisHasting 136: robots/4-2-4.pl, test_cost: 0, train_cost: 0, time: 0.0011088110000001539, length: 16, iterations: 92"}
{"test_case": 137, "data": "MetropolisHasting 137: robots/4-2-5.pl, test_cost: 0, train_cost: 0, time: 0.011165175999999999, length: 90, iterations: 637"}
{"test_case": 138, "data": "MetropolisHasting 138: robots/4-2-6.pl, test_cost: 0, train_cost: 0, time: 0.0031221800000000854, length: 34, iterations: 238"}
{"test_case": 139, "data": "MetropolisHasting 139: robots/4-2-7.pl, test_cost: 0, train_cost: 0, time: 0.04788308699999999, length: 199, iterations: 1944"}
{"test_case": 140, "data": "MetropolisHasting 140: robots/4-2-8.pl, test_cost: 0, train_cost: 0, time: 0.018104978, length: 53, iterations: 1122"}
{"test_case": 141, "data": "MetropolisHasting 141: robots/4-2-9.pl, test_cost: 0, train_cost: 0, time: 0.005928137, length: 48, iterations: 444"}
{"test_case": 142, "data": "MetropolisHasting 142: robots/4-2-10.pl, test_cost: 0, train_cost: 0, time: 0.0019162610000000024, length: 47, iterations: 123"}
{"test_case": 143, "data": "MetropolisHasting 143: robots/4-3-0.pl, test_cost: 0, train_cost: 0, time: 0.01128925, length: 68, iterations: 788"}
{"test_case": 144, "data": "MetropolisHasting 144: robots/4-3-1.pl, test_cost: 0, train_cost: 0, time: 0.004483938, length: 23, iterations: 368"}
{"test_case": 145, "data": "MetropolisHasting 145: robots/4-3-2.pl, test_cost: 0, train_cost: 0, time: 0.007199802999999998, length: 81, iterations: 450"}
{"test_case": 146, "data": "MetropolisHasting 146: robots/4-3-3.pl, test_cost: 0, train_cost: 0, time: 0.013082130000000004, length: 52, iterations: 944"}
{"test_case": 147, "data": "MetropolisHasting 147: robots/4-3-4.pl, test_cost: 0, train_cost: 0, time: 0.320284795, length: 46, iterations: 7214"}
{"test_case": 148, "data": "MetropolisHasting 148: robots/4-3-5.pl, test_cost: 0, train_cost: 0, time: 0.007806819999999992, length: 58, iterations: 414"}
{"test_case": 149, "data": "MetropolisHasting 149: robots/4-3-6.pl, test_cost: 0, train_cost: 0, time: 0.04834185299999999, length: 171, iterations: 2617"}
{"test_case": 150, "data": "MetropolisHasting 150: robots/4-3-7.pl, test_cost: 0, train_cost: 0, time: 0.017171306999999997, length: 101, iterations: 1055"}
{"test_case": 151, "data": "MetropolisHasting 151: robots/4-3-8.pl, test_cost: 0, train_cost: 0, time: 0.0031566350000000014, length: 53, iterations: 213"}
{"test_case": 152, "data": "MetropolisHasting 152: robots/4-3-9.pl, test_cost: 0, train_cost: 0, time: 0.021536691, length: 88, iterations: 1187"}
{"test_case": 153, "data": "MetropolisHasting 153: robots/4-3-10.pl, test_cost: 0, train_cost: 0, time: 0.027932511, length: 47, iterations: 1152"}
{"test_case": 154, "data": "MetropolisHasting 154: robots/4-4-0.pl, test_cost: 0, train_cost: 0, time: 0.026040318999999992, length: 119, iterations: 1292"}
{"test_case": 155, "data": "MetropolisHasting 155: robots/4-4-1.pl, test_cost: 0, train_cost: 0, time: 0.015790554, length: 36, iterations: 1140"}
{"test_case": 156, "data": "MetropolisHasting 156: robots/4-4-2.pl, test_cost: 0, train_cost: 0, time: 0.00032547499999999174, length: 12, iterations: 28"}
{"test_case": 157, "data": "MetropolisHasting 157: robots/4-4-3.pl, test_cost: 0, train_cost: 0, time: 0.143373244, length: 354, iterations: 3787"}
{"test_case": 158, "data": "MetropolisHasting 158: robots/4-4-4.pl, test_cost: 0, train_cost: 0, time: 0.016169396000000003, length: 37, iterations: 1178"}
{"test_case": 159, "data": "MetropolisHasting 159: robots/4-4-5.pl, test_cost: 0, train_cost: 0, time: 0.066538347, length: 133, iterations: 2937"}
{"test_case": 160, "data": "MetropolisHasting 160: robots/4-4-6.pl, test_cost: 0, train_cost: 0, time: 0.05881499900000001, length: 202, iterations: 2118"}
{"test_case": 161, "data": "MetropolisHasting 161: robots/4-4-7.pl, test_cost: 0, train_cost: 0, time: 0.020824928000000006, length: 117, iterations: 1146"}
{"test_case": 162, "data": "MetropolisHasting 162: robots/4-4-8.pl, test_cost: 0, train_cost: 0, time: 0.030800836999999998, length: 28, iterations: 2318"}
{"test_case": 163, "data": "MetropolisHasting 163: robots/4-4-9.pl, test_cost: 0, train_cost: 0, time: 0.748825261, length: 1003, iterations: 10064"}
{"test_case": 164, "data": "MetropolisHasting 164: robots/4-4-10.pl, test_cost: 0, train_cost: 0, time: 0.18501607499999995, length: 96, iterations: 6657"}
{"test_case": 165, "data": "MetropolisHasting 165: robots/4-5-0.pl, test_cost: 0, train_cost: 0, time: 0.023645363999999836, length: 123, iterations: 1210"}
{"test_case": 166, "data": "MetropolisHasting 166: robots/4-5-1.pl, test_cost: 0, train_cost: 0, time: 0.0019913970000000614, length: 10, iterations: 195"}
{"test_case": 167, "data": "MetropolisHasting 167: robots/4-5-2.pl, test_cost: 0, train_cost: 0, time: 0.00043539800000003126, length: 15, iterations: 35"}
{"test_case": 168, "data": "MetropolisHasting 168: robots/4-5-3.pl, test_cost: 0, train_cost: 0, time: 0.021050409999999964, length: 68, iterations: 1331"}
{"test_case": 169, "data": "MetropolisHasting 169: robots/4-5-4.pl, test_cost: 0, train_cost: 0, time: 0.012197580000000041, length: 70, iterations: 674"}
{"test_case": 170, "data": "MetropolisHasting 170: robots/4-5-5.pl, test_cost: 0, train_cost: 0, time: 0.167036162, length: 349, iterations: 4267"}
{"test_case": 171, "data": "MetropolisHasting 171: robots/4-5-6.pl, test_cost: 0, train_cost: 0, time: 0.02781128599999999, length: 25, iterations: 2065"}
{"test_case": 172, "data": "MetropolisHasting 172: robots/4-5-7.pl, test_cost: 0, train_cost: 0, time: 0.027948524000000002, length: 177, iterations: 1135"}
{"test_case": 173, "data": "MetropolisHasting 173: robots/4-5-8.pl, test_cost: 0, train_cost: 0, time: 0.008649195999999998, length: 42, iterations: 618"}
{"test_case": 174, "data": "MetropolisHasting 174: robots/4-5-9.pl, test_cost: 0, train_cost: 0, time: 0.026719536999999988, length: 132, iterations: 1215"}
{"test_case": 175, "data": "MetropolisHasting 175: robots/4-5-10.pl, test_cost: 0, train_cost: 0, time: 0.08058018699999997, length: 215, iterations: 3274"}
{"test_case": 176, "data": "MetropolisHasting 176: robots/4-6-0.pl, test_cost: 0, train_cost: 0, time: 0.06878613, length: 39, iterations: 4580"}
{"test_case": 177, "data": "MetropolisHasting 177: robots/4-6-1.pl, test_cost: 0, train_cost: 0, time: 0.0020792460000000346, length: 21, iterations: 184"}
{"test_case": 178, "data": "MetropolisHasting 178: robots/4-6-2.pl, test_cost: 0, train_cost: 0, time: 0.020308914999999983, length: 37, iterations: 1384"}
{"test_case": 179, "data": "MetropolisHasting 179: robots/4-6-3.pl, test_cost: 0, train_cost: 0, time: 0.00039263600000000176, length: 7, iterations: 32"}
{"test_case": 180, "data": "MetropolisHasting 180: robots/4-6-4.pl, test_cost: 0, train_cost: 0, time: 0.007848901, length: 32, iterations: 594"}
{"test_case": 181, "data": "MetropolisHasting 181: robots/4-6-5.pl, test_cost: 0, train_cost: 0, time: 0.007264686000000001, length: 66, iterations: 505"}
{"test_case": 182, "data": "MetropolisHasting 182: robots/4-6-6.pl, test_cost: 0, train_cost: 0, time: 0.019120808000000003, length: 73, iterations: 1045"}
{"test_case": 183, "data": "MetropolisHasting 183: robots/4-6-7.pl, test_cost: 0, train_cost: 0, time: 0.0013719510000000032, length: 19, iterations: 111"}
{"test_case": 184, "data": "MetropolisHasting 184: robots/4-6-8.pl, test_cost: 0, train_cost: 0, time: 0.004952294000000003, length: 28, iterations: 318"}
{"test_case": 185, "data": "MetropolisHasting 185: robots/4-6-9.pl, test_cost: 0, train_cost: 0, time: 0.019775686, length: 139, iterations: 866"}
{"test_case": 186, "data": "MetropolisHasting 186: robots/4-6-10.pl, test_cost: 0, train_cost: 0, time: 0.005402056000000002, length: 38, iterations: 403"}
{"test_case": 187, "data": "MetropolisHasting 187: robots/4-7-0.pl, test_cost: 0, train_cost: 0, time: 0.00021333099999999716, length: 1, iterations: 18"}
{"test_case": 188, "data": "MetropolisHasting 188: robots/4-7-1.pl, test_cost: 0, train_cost: 0, time: 0.06054240799999999, length: 145, iterations: 2860"}
{"test_case": 189, "data": "MetropolisHasting 189: robots/4-7-2.pl, test_cost: 0, train_cost: 0, time: 0.101012135, length: 172, iterations: 3953"}
{"test_case": 190, "data": "MetropolisHasting 190: robots/4-7-3.pl, test_cost: 0, train_cost: 0, time: 0.004016807000000001, length: 45, iterations: 294"}
{"test_case": 191, "data": "MetropolisHasting 191: robots/4-7-4.pl, test_cost: 0, train_cost: 0, time: 0.077161011, length: 202, iterations: 2998"}
{"test_case": 192, "data": "MetropolisHasting 192: robots/4-7-5.pl, test_cost: 0, train_cost: 0, time: 0.031597423, length: 66, iterations: 1985"}
{"test_case": 193, "data": "MetropolisHasting 193: robots/4-7-6.pl, test_cost: 0, train_cost: 0, time: 0.005222023000000006, length: 55, iterations: 327"}
{"test_case": 194, "data": "MetropolisHasting 194: robots/4-7-7.pl, test_cost: 0, train_cost: 0, time: 0.0009504730000000072, length: 7, iterations: 82"}
{"test_case": 195, "data": "MetropolisHasting 195: robots/4-7-8.pl, test_cost: 0, train_cost: 0, time: 0.008214354000000007, length: 41, iterations: 539"}
{"test_case": 196, "data": "MetropolisHasting 196: robots/4-7-9.pl, test_cost: 0, train_cost: 0, time: 0.20445217200000002, length: 55, iterations: 4978"}
{"test_case": 197, "data": "MetropolisHasting 197: robots/4-7-10.pl, test_cost: 0, train_cost: 0, time: 0.0003829490000000213, length: 11, iterations: 28"}
{"test_case": 198, "data": "MetropolisHasting 198: robots/4-8-0.pl, test_cost: 0, train_cost: 0, time: 0.380640686, length: 658, iterations: 6366"}
{"test_case": 199, "data": "MetropolisHasting 199: robots/4-8-1.pl, test_cost: 0, train_cost: 0, time: 0.005648129000000002, length: 23, iterations: 420"}
{"test_case": 200, "data": "MetropolisHasting 200: robots/4-8-2.pl, test_cost: 0, train_cost: 0, time: 0.028868971, length: 91, iterations: 1748"}
{"test_case": 201, "data": "MetropolisHasting 201: robots/4-8-3.pl, test_cost: 0, train_cost: 0, time: 0.014433401000000005, length: 80, iterations: 787"}
{"test_case": 202, "data": "MetropolisHasting 202: robots/4-8-4.pl, test_cost: 0, train_cost: 0, time: 0.001320557, length: 19, iterations: 102"}
{"test_case": 203, "data": "MetropolisHasting 203: robots/4-8-5.pl, test_cost: 0, train_cost: 0, time: 0.052904282000000004, length: 174, iterations: 2349"}
{"test_case": 204, "data": "MetropolisHasting 204: robots/4-8-6.pl, test_cost: 0, train_cost: 0, time: 0.010823005999999996, length: 77, iterations: 615"}
{"test_case": 205, "data": "MetropolisHasting 205: robots/4-8-7.pl, test_cost: 0, train_cost: 0, time: 0.04047446599999999, length: 229, iterations: 1681"}
{"test_case": 206, "data": "MetropolisHasting 206: robots/4-8-8.pl, test_cost: 0, train_cost: 0, time: 0.027286883999999983, length: 92, iterations: 1871"}
{"test_case": 207, "data": "MetropolisHasting 207: robots/4-8-9.pl, test_cost: 0, train_cost: 0, time: 0.028927135999999992, length: 124, iterations: 1237"}
{"test_case": 208, "data": "MetropolisHasting 208: robots/4-8-10.pl, test_cost: 0, train_cost: 0, time: 0.015496214000000008, length: 62, iterations: 1036"}
{"test_case": 209, "data": "MetropolisHasting 209: robots/4-9-0.pl, test_cost: 0, train_cost: 0, time: 0.02114148299999999, length: 147, iterations: 1064"}
{"test_case": 210, "data": "MetropolisHasting 210: robots/4-9-1.pl, test_cost: 0, train_cost: 0, time: 0.0012846819999999997, length: 16, iterations: 92"}
{"test_case": 211, "data": "MetropolisHasting 211: robots/4-9-2.pl, test_cost: 0, train_cost: 0, time: 0.016516406, length: 90, iterations: 946"}
{"test_case": 212, "data": "MetropolisHasting 212: robots/4-9-3.pl, test_cost: 0, train_cost: 0, time: 0.015849435999999998, length: 19, iterations: 1253"}
{"test_case": 213, "data": "MetropolisHasting 213: robots/4-9-4.pl, test_cost: 0, train_cost: 0, time: 0.03692020299999999, length: 54, iterations: 2675"}
{"test_case": 214, "data": "MetropolisHasting 214: robots/4-9-5.pl, test_cost: 0, train_cost: 0, time: 0.32765052100000003, length: 102, iterations: 10451"}
{"test_case": 215, "data": "MetropolisHasting 215: robots/4-9-6.pl, test_cost: 0, train_cost: 0, time: 0.003918010000000027, length: 32, iterations: 272"}
{"test_case": 216, "data": "MetropolisHasting 216: robots/4-9-7.pl, test_cost: 0, train_cost: 0, time: 0.009608632000000006, length: 60, iterations: 682"}
{"test_case": 217, "data": "MetropolisHasting 217: robots/4-9-8.pl, test_cost: 0, train_cost: 0, time: 0.009702859000000008, length: 48, iterations: 667"}
{"test_case": 218, "data": "MetropolisHasting 218: robots/4-9-9.pl, test_cost: 0, train_cost: 0, time: 0.02099968000000002, length: 110, iterations: 1265"}
{"test_case": 219, "data": "MetropolisHasting 219: robots/4-9-10.pl, test_cost: 0, train_cost: 0, time: 0.006686475999999997, length: 43, iterations: 455"}
{"test_case": 70, "data": "MetropolisHasting 70: robots/2-6-4.pl, test_cost: 0, train_cost: 0, time: 0.0019197609999999999, length: 16, iterations: 153"}
{"test_case": 71, "data": "MetropolisHasting 71: robots/2-6-5.pl, test_cost: 0, train_cost: 0, time: 0.0025648550000000004, length: 5, iterations: 233"}
{"test_case": 72, "data": "MetropolisHasting 72: robots/2-6-6.pl, test_cost: 0, train_cost: 0, time: 0.0031290550000000004, length: 8, iterations: 281"}
{"test_case": 73, "data": "MetropolisHasting 73: robots/2-6-7.pl, test_cost: 0, train_cost: 0, time: 0.0015483709999999998, length: 7, iterations: 134"}
{"test_case": 74, "data": "MetropolisHasting 74: robots/2-6-8.pl, test_cost: 0, train_cost: 0, time: 0.0057278949999999985, length: 39, iterations: 441"}
{"test_case": 75, "data": "MetropolisHasting 75: robots/2-6-9.pl, test_cost: 0, train_cost: 0, time: 0.0023473480000000026, length: 38, iterations: 172"}
{"test_case": 76, "data": "MetropolisHasting 76: robots/2-6-10.pl, test_cost: 0, train_cost: 0, time: 0.0021389730000000023, length: 24, iterations: 191"}
{"test_case": 77, "data": "MetropolisHasting 77: robots/2-7-0.pl, test_cost: 0, train_cost: 0, time: 0.008426484999999997, length: 11, iterations: 694"}
{"test_case": 78, "data": "MetropolisHasting 78: robots/2-7-1.pl, test_cost: 0, train_cost: 0, time: 0.004358026000000001, length: 14, iterations: 348"}
{"test_case": 79, "data": "MetropolisHasting 79: robots/2-7-2.pl, test_cost: 0, train_cost: 0, time: 0.0028415720000000005, length: 17, iterations: 247"}
{"test_case": 80, "data": "MetropolisHasting 80: robots/2-7-3.pl, test_cost: 0, train_cost: 0, time: 0.0010305969999999994, length: 13, iterations: 73"}
{"test_case": 81, "data": "MetropolisHasting 81: robots/2-7-4.pl, test_cost: 0, train_cost: 0, time: 0.00029615399999999986, length: 10, iterations: 25"}
{"test_case": 82, "data": "MetropolisHasting 82: robots/2-7-5.pl, test_cost: 0, train_cost: 0, time: 0.017816724, length: 43, iterations: 1401"}
{"test_case": 83, "data": "MetropolisHasting 83: robots/2-7-6.pl, test_cost: 0, train_cost: 0, time: 8.002099999999956e-05, length: 8, iterations: 4"}
{"test_case": 84, "data": "MetropolisHasting 84: robots/2-7-7.pl, test_cost: 0, train_cost: 0, time: 0.0027797240000000008, length: 23, iterations: 249"}
{"test_case": 85, "data": "MetropolisHasting 85: robots/2-7-8.pl, test_cost: 0, train_cost: 0, time: 0.005814384999999998, length: 53, iterations: 414"}
{"test_case": 86, "data": "MetropolisHasting 86: robots/2-7-9.pl, test_cost: 0, train_cost: 0, time: 2.838000000000146e-05, length: 0, iterations: 1"}
{"test_case": 87, "data": "MetropolisHasting 87: robots/2-7-10.pl, test_cost: 0, train_cost: 0, time: 0.00010053499999999882, length: 3, iterations: 8"}
{"test_case": 88, "data": "MetropolisHasting 88: robots/2-8-0.pl, test_cost: 0, train_cost: 0, time: 0.004144272000000004, length: 18, iterations: 351"}
{"test_case": 89, "data": "MetropolisHasting 89: robots/2-8-1.pl, test_cost: 0, train_cost: 0, time: 0.0007538900000000001, length: 12, iterations: 62"}
{"test_case": 90, "data": "MetropolisHasting 90: robots/2-8-2.pl, test_cost: 0, train_cost: 0, time: 0.0033161419999999994, length: 14, iterations: 251"}
{"test_case": 91, "data": "MetropolisHasting 91: robots/2-8-3.pl, test_cost: 0, train_cost: 0, time: 0.001815507000000001, length: 28, iterations: 144"}
{"test_case": 92, "data": "MetropolisHasting 92: robots/2-8-4.pl, test_cost: 0, train_cost: 0, time: 0.0013925460000000014, length: 4, iterations: 132"}
{"test_case": 93, "data": "MetropolisHasting 93: robots/2-8-5.pl, test_cost: 0, train_cost: 0, time: 0.006746443000000001, length: 9, iterations: 634"}
{"test_case": 94, "data": "MetropolisHasting 94: robots/2-8-6.pl, test_cost: 0, train_cost: 0, time: 0.0015399530000000002, length: 12, iterations: 128"}
{"test_case": 95, "data": "MetropolisHasting 95: robots/2-8-7.pl, test_cost: 0, train_cost: 0, time: 6.123800000000165e-05, length: 1, iterations: 4"}
{"test_case": 96, "data": "MetropolisHasting 96: robots/2-8-8.pl, test_cost: 0, train_cost: 0, time: 0.00015289300000000117, length: 4, iterations: 12"}
{"test_case": 97, "data": "MetropolisHasting 97: robots/2-8-9.pl, test_cost: 0, train_cost: 0, time: 0.007622902000000001, length: 28, iterations: 613"}
{"test_case": 98, "data": "MetropolisHasting 98: robots/2-8-10.pl, test_cost: 0, train_cost: 0, time: 0.009500581000000001, length: 15, iterations: 842"}
{"test_case": 99, "data": "MetropolisHasting 99: robots/2-9-0.pl, test_cost: 0, train_cost: 0, time: 0.008841732999999997, length: 15, iterations: 777"}
{"test_case": 100, "data": "MetropolisHasting 100: robots/2-9-1.pl, test_cost: 0, train_cost: 0, time: 0.0012675459999999996, length: 9, iterations: 92"}
{"test_case": 101, "data": "MetropolisHasting 101: robots/2-9-2.pl, test_cost: 0, train_cost: 0, time: 0.005936585000000001, length: 23, iterations: 456"}
{"test_case": 102, "data": "MetropolisHasting 102: robots/2-9-3.pl, test_cost: 0, train_cost: 0, time: 0.00010079300000000006, length: 8, iterations: 6"}
{"test_case": 103, "data": "MetropolisHasting 103: robots/2-9-4.pl, test_cost: 0, train_cost: 0, time: 0.006896561000000001, length: 20, iterations: 601"}
{"test_case": 104, "data": "MetropolisHasting 104: robots/2-9-5.pl, test_cost: 0, train_cost: 0, time: 0.0024585209999999982, length: 15, iterations: 212"}
{"test_case": 105, "data": "MetropolisHasting 105: robots/2-9-6.pl, test_cost: 0, train_cost: 0, time: 0.007232027000000002, length: 25, iterations: 629"}
{"test_case": 106, "data": "MetropolisHasting 106: robots/2-9-7.pl, test_cost: 0, train_cost: 0, time: 3.790799999999969e-05, length: 0, iterations: 2"}
{"test_case": 107, "data": "MetropolisHasting 107: robots/2-9-8.pl, test_cost: 0, train_cost: 0, time: 9.504800000000035e-05, length: 9, iterations: 5"}
{"test_case": 108, "data": "MetropolisHasting 108: robots/2-9-9.pl, test_cost: 0, train_cost: 0, time: 0.004845885999999997, length: 23, iterations: 391"}
{"test_case": 109, "data": "MetropolisHasting 109: robots/2-9-10.pl, test_cost: 0, train_cost: 0, time: 0.0026341660000000003, length: 12, iterations: 237"}
{"test_case": 220, "data": "MetropolisHasting 220: robots/6-0-0.pl, test_cost: 0, train_cost: 0, time: 0.5982944539999999, length: 908, iterations: 8201"}
{"test_case": 221, "data": "MetropolisHasting 221: robots/6-0-1.pl, test_cost: 0, train_cost: 0, time: 0.007365326000000061, length: 71, iterations: 463"}
{"test_case": 222, "data": "MetropolisHasting 222: robots/6-0-2.pl, test_cost: 0, train_cost: 0, time: 0.037364107000000035, length: 129, iterations: 1633"}
{"test_case": 223, "data": "MetropolisHasting 223: robots/6-0-3.pl, test_cost: 0, train_cost: 0, time: 0.004780145999999985, length: 53, iterations: 333"}
{"test_case": 224, "data": "MetropolisHasting 224: robots/6-0-4.pl, test_cost: 0, train_cost: 0, time: 0.06345474399999995, length: 264, iterations: 2109"}
{"test_case": 225, "data": "MetropolisHasting 225: robots/6-0-5.pl, test_cost: 0, train_cost: 0, time: 2.26613132, length: 1812, iterations: 15751"}
{"test_case": 226, "data": "MetropolisHasting 226: robots/6-0-6.pl, test_cost: 0, train_cost: 0, time: 0.008623893000000216, length: 74, iterations: 507"}
{"test_case": 227, "data": "MetropolisHasting 227: robots/6-0-7.pl, test_cost: 0, train_cost: 0, time: 0.12873685299999993, length: 300, iterations: 3697"}
{"test_case": 228, "data": "MetropolisHasting 228: robots/6-0-8.pl, test_cost: 0, train_cost: 0, time: 1.733783298, length: 1739, iterations: 12904"}
{"test_case": 229, "data": "MetropolisHasting 229: robots/6-0-9.pl, test_cost: 0, train_cost: 0, time: 0.0001987899999997822, length: 2, iterations: 15"}
{"test_case": 230, "data": "MetropolisHasting 230: robots/6-0-10.pl, test_cost: 0, train_cost: 0, time: 0.037809141000000004, length: 196, iterations: 1353"}
{"test_case": 231, "data": "MetropolisHasting 231: robots/6-1-0.pl, test_cost: 0, train_cost: 0, time: 0.013933695000000003, length: 80, iterations: 811"}
{"test_case": 232, "data": "MetropolisHasting 232: robots/6-1-1.pl, test_cost: 0, train_cost: 0, time: 0.073171456, length: 53, iterations: 3204"}
{"test_case": 233, "data": "MetropolisHasting 233: robots/6-1-2.pl, test_cost: 0, train_cost: 0, time: 0.02307120900000001, length: 59, iterations: 1789"}
{"test_case": 234, "data": "MetropolisHasting 234: robots/6-1-3.pl, test_cost: 0, train_cost: 0, time: 0.216447309, length: 537, iterations: 3911"}
{"test_case": 235, "data": "MetropolisHasting 235: robots/6-1-4.pl, test_cost: 0, train_cost: 0, time: 0.05031158400000002, length: 80, iterations: 2506"}
{"test_case": 236, "data": "MetropolisHasting 236: robots/6-1-5.pl, test_cost: 0, train_cost: 0, time: 0.020410908999999977, length: 60, iterations: 1229"}
{"test_case": 237, "data": "MetropolisHasting 237: robots/6-1-6.pl, test_cost: 0, train_cost: 0, time: 0.06969686100000005, length: 44, iterations: 4316"}
{"test_case": 238, "data": "MetropolisHasting 238: robots/6-1-7.pl, test_cost: 0, train_cost: 0, time: 0.032261844999999956, length: 144, iterations: 1591"}
{"test_case": 239, "data": "MetropolisHasting 239: robots/6-1-8.pl, test_cost: 0, train_cost: 0, time: 0.004377395000000006, length: 20, iterations: 330"}
{"test_case": 110, "data": "MetropolisHasting 110: robots/4-0-0.pl, test_cost: 0, train_cost: 0, time: 0.00579801, length: 33, iterations: 403"}
{"test_case": 111, "data": "MetropolisHasting 111: robots/4-0-1.pl, test_cost: 0, train_cost: 0, time: 0.076086876, length: 273, iterations: 2587"}
{"test_case": 112, "data": "MetropolisHasting 112: robots/4-0-2.pl, test_cost: 0, train_cost: 0, time: 0.014520548999999994, length: 68, iterations: 849"}
{"test_case": 113, "data": "MetropolisHasting 113: robots/4-0-3.pl, test_cost: 0, train_cost: 0, time: 0.01102692000000001, length: 55, iterations: 729"}
{"test_case": 114, "data": "MetropolisHasting 114: robots/4-0-4.pl, test_cost: 0, train_cost: 0, time: 0.0007348809999999928, length: 20, iterations: 62"}
{"test_case": 115, "data": "MetropolisHasting 115: robots/4-0-5.pl, test_cost: 0, train_cost: 0, time: 0.008991720000000009, length: 76, iterations: 555"}
{"test_case": 116, "data": "MetropolisHasting 116: robots/4-0-6.pl, test_cost: 0, train_cost: 0, time: 5.152442473, length: 2400, iterations: 29044"}
{"test_case": 117, "data": "MetropolisHasting 117: robots/4-0-7.pl, test_cost: 0, train_cost: 0, time: 0.02333475599999968, length: 28, iterations: 1844"}
{"test_case": 118, "data": "MetropolisHasting 118: robots/4-0-8.pl, test_cost: 0, train_cost: 0, time: 0.01541237600000045, length: 25, iterations: 1357"}
{"test_case": 119, "data": "MetropolisHasting 119: robots/4-0-9.pl, test_cost: 0, train_cost: 0, time: 0.005949950999999842, length: 43, iterations: 425"}
{"test_case": 120, "data": "MetropolisHasting 120: robots/4-0-10.pl, test_cost: 0, train_cost: 0, time: 0.021213913, length: 90, iterations: 1172"}
{"test_case": 121, "data": "MetropolisHasting 121: robots/4-1-0.pl, test_cost: 0, train_cost: 0, time: 0.036265449000000005, length: 96, iterations: 2303"}
{"test_case": 122, "data": "MetropolisHasting 122: robots/4-1-1.pl, test_cost: 0, train_cost: 0, time: 0.018633941, length: 73, iterations: 1279"}
{"test_case": 123, "data": "MetropolisHasting 123: robots/4-1-2.pl, test_cost: 0, train_cost: 0, time: 0.035107052, length: 49, iterations: 2067"}
{"test_case": 124, "data": "MetropolisHasting 124: robots/4-1-3.pl, test_cost: 0, train_cost: 0, time: 0.032694994000000005, length: 93, iterations: 1947"}
{"test_case": 125, "data": "MetropolisHasting 125: robots/4-1-4.pl, test_cost: 0, train_cost: 0, time: 0.026542638000000007, length: 58, iterations: 1515"}
{"test_case": 126, "data": "MetropolisHasting 126: robots/4-1-5.pl, test_cost: 0, train_cost: 0, time: 0.005073732999999997, length: 46, iterations: 396"}
{"test_case": 127, "data": "MetropolisHasting 127: robots/4-1-6.pl, test_cost: 0, train_cost: 0, time: 0.01943824300000002, length: 31, iterations: 1538"}
{"test_case": 128, "data": "MetropolisHasting 128: robots/4-1-7.pl, test_cost: 0, train_cost: 0, time: 0.05657059600000003, length: 127, iterations: 3189"}
{"test_case": 129, "data": "MetropolisHasting 129: robots/4-1-8.pl, test_cost: 0, train_cost: 0, time: 0.02567486000000002, length: 33, iterations: 1638"}
{"test_case": 130, "data": "MetropolisHasting 130: robots/4-1-9.pl, test_cost: 0, train_cost: 0, time: 0.014755743999999998, length: 55, iterations: 1109"}
{"test_case": 131, "data": "MetropolisHasting 131: robots/4-1-10.pl, test_cost: 0, train_cost: 0, time: 0.038271079, length: 234, iterations: 1268"}
{"test_case": 132, "data": "MetropolisHasting 132: robots/4-2-0.pl, test_cost: 0, train_cost: 0, time: 0.07516977400000001, length: 75, iterations: 5049"}
{"test_case": 133, "data": "MetropolisHasting 133: robots/4-2-1.pl, test_cost: 0, train_cost: 0, time: 0.010597054000000022, length: 35, iterations: 889"}
{"test_case": 134, "data": "MetropolisHasting 134: robots/4-2-2.pl, test_cost: 0, train_cost: 0, time: 5.143536802, length: 2303, iterations: 28362"}
{"test_case": 135, "data": "MetropolisHasting 135: robots/4-2-3.pl, test_cost: 0, train_cost: 0, time: 0.0076530769999996195, length: 75, iterations: 516"}
{"test_case": 136, "data": "MetropolisHasting 136: robots/4-2-4.pl, test_cost: 0, train_cost: 0, time: 0.01045087099999975, length: 26, iterations: 811"}
{"test_case": 137, "data": "MetropolisHasting 137: robots/4-2-5.pl, test_cost: 0, train_cost: 0, time: 0.014677639000000298, length: 92, iterations: 967"}
{"test_case": 138, "data": "MetropolisHasting 138: robots/4-2-6.pl, test_cost: 0, train_cost: 0, time: 0.313456897, length: 596, iterations: 5793"}
{"test_case": 139, "data": "MetropolisHasting 139: robots/4-2-7.pl, test_cost: 0, train_cost: 0, time: 0.013616516999999995, length: 120, iterations: 675"}
{"test_case": 140, "data": "MetropolisHasting 140: robots/4-2-8.pl, test_cost: 0, train_cost: 0, time: 0.053321086000000004, length: 66, iterations: 3379"}
{"test_case": 141, "data": "MetropolisHasting 141: robots/4-2-9.pl, test_cost: 0, train_cost: 0, time: 0.08950403699999998, length: 52, iterations: 3347"}
{"test_case": 142, "data": "MetropolisHasting 142: robots/4-2-10.pl, test_cost: 0, train_cost: 0, time: 0.01728637800000002, length: 130, iterations: 737"}
{"test_case": 143, "data": "MetropolisHasting 143: robots/4-3-0.pl, test_cost: 0, train_cost: 0, time: 0.18391492, length: 311, iterations: 5234"}
{"test_case": 144, "data": "MetropolisHasting 144: robots/4-3-1.pl, test_cost: 0, train_cost: 0, time: 0.004883402000000037, length: 51, iterations: 354"}
{"test_case": 145, "data": "MetropolisHasting 145: robots/4-3-2.pl, test_cost: 0, train_cost: 0, time: 0.01132630200000001, length: 71, iterations: 741"}
{"test_case": 146, "data": "MetropolisHasting 146: robots/4-3-3.pl, test_cost: 0, train_cost: 0, time: 0.028508968999999995, length: 103, iterations: 1931"}
{"test_case": 147, "data": "MetropolisHasting 147: robots/4-3-4.pl, test_cost: 0, train_cost: 0, time: 0.026053720999999974, length: 160, iterations: 1149"}
{"test_case": 148, "data": "MetropolisHasting 148: robots/4-3-5.pl, test_cost: 0, train_cost: 0, time: 0.015238368999999974, length: 90, iterations: 815"}
{"test_case": 149, "data": "MetropolisHasting 149: robots/4-3-6.pl, test_cost: 0, train_cost: 0, time: 0.026688003999999987, length: 136, iterations: 1395"}
{"test_case": 150, "data": "MetropolisHasting 150: robots/4-3-7.pl, test_cost: 0, train_cost: 0, time: 0.06771069, length: 180, iterations: 2975"}
{"test_case": 151, "data": "MetropolisHasting 151: robots/4-3-8.pl, test_cost: 0, train_cost: 0, time: 0.040650310999999995, length: 162, iterations: 1948"}
{"test_case": 152, "data": "MetropolisHasting 152: robots/4-3-9.pl, test_cost: 0, train_cost: 0, time: 0.025066424000000004, length: 129, iterations: 1449"}
{"test_case": 153, "data": "MetropolisHasting 153: robots/4-3-10.pl, test_cost: 0, train_cost: 0, time: 0.019820273, length: 92, iterations: 1116"}
{"test_case": 154, "data": "MetropolisHasting 154: robots/4-4-0.pl, test_cost: 0, train_cost: 0, time: 0.0022938550000000113, length: 42, iterations: 166"}
{"test_case": 155, "data": "MetropolisHasting 155: robots/4-4-1.pl, test_cost: 0, train_cost: 0, time: 0.10452974500000003, length: 348, iterations: 3023"}
{"test_case": 156, "data": "MetropolisHasting 156: robots/4-4-2.pl, test_cost: 0, train_cost: 0, time: 0.00020830200000004906, length: 5, iterations: 17"}
{"test_case": 157, "data": "MetropolisHasting 157: robots/4-4-3.pl, test_cost: 0, train_cost: 0, time: 0.10815518400000002, length: 80, iterations: 4659"}
{"test_case": 158, "data": "MetropolisHasting 158: robots/4-4-4.pl, test_cost: 0, train_cost: 0, time: 0.007977317999999956, length: 23, iterations: 684"}
{"test_case": 159, "data": "MetropolisHasting 159: robots/4-4-5.pl, test_cost: 0, train_cost: 0, time: 0.030884776000000003, length: 87, iterations: 1853"}
{"test_case": 160, "data": "MetropolisHasting 160: robots/4-4-6.pl, test_cost: 0, train_cost: 0, time: 0.025276431, length: 125, iterations: 1258"}
{"test_case": 161, "data": "MetropolisHasting 161: robots/4-4-7.pl, test_cost: 0, train_cost: 0, time: 0.071658191, length: 255, iterations: 3174"}
{"test_case": 162, "data": "MetropolisHasting 162: robots/4-4-8.pl, test_cost: 0, train_cost: 0, time: 0.002346899999999999, length: 17, iterations: 194"}
{"test_case": 163, "data": "MetropolisHasting 163: robots/4-4-9.pl, test_cost: 0, train_cost: 0, time: 0.033189567, length: 105, iterations: 1849"}
{"test_case": 164, "data": "MetropolisHasting 164: robots/4-4-10.pl, test_cost: 0, train_cost: 0, time: 0.015580236999999997, length: 80, iterations: 943"}
{"test_case": 165, "data": "MetropolisHasting 165: robots/4-5-0.pl, test_cost: 0, train_cost: 0, time: 0.012107566000000014, length: 31, iterations: 879"}
{"test_case": 166, "data": "MetropolisHasting 166: robots/4-5-1.pl, test_cost: 0, train_cost: 0, time: 0.0003640789999999894, length: 8, iterations: 35"}
{"test_case": 167, "data": "MetropolisHasting 167: robots/4-5-2.pl, test_cost: 0, train_cost: 0, time: 0.0019689430000000008, length: 7, iterations: 168"}
{"test_case": 168, "data": "MetropolisHasting 168: robots/4-5-3.pl, test_cost: 0, train_cost: 0, time: 0.059364949, length: 126, iterations: 2817"}
{"test_case": 169, "data": "MetropolisHasting 169: robots/4-5-4.pl, test_cost: 0, train_cost: 0, time: 0.006867715999999996, length: 11, iterations: 541"}
{"test_case": 240, "data": "MetropolisHasting 240: robots/6-1-9.pl, test_cost: 0, train_cost: 0, time: 0.312954142, length: 526, iterations: 6293"}
{"test_case": 241, "data": "MetropolisHasting 241: robots/6-1-10.pl, test_cost: 0, train_cost: 0, time: 0.18550850500000005, length: 413, iterations: 5017"}
{"test_case": 242, "data": "MetropolisHasting 242: robots/6-2-0.pl, test_cost: 0, train_cost: 0, time: 4.2764488510000005, length: 3141, iterations: 18154"}
{"test_case": 243, "data": "MetropolisHasting 243: robots/6-2-1.pl, test_cost: 0, train_cost: 0, time: 0.011998479999999923, length: 91, iterations: 623"}
{"test_case": 244, "data": "MetropolisHasting 244: robots/6-2-2.pl, test_cost: 0, train_cost: 0, time: 0.13693454100000046, length: 335, iterations: 4404"}
{"test_case": 245, "data": "MetropolisHasting 245: robots/6-2-3.pl, test_cost: 0, train_cost: 0, time: 0.704057486, length: 1001, iterations: 8478"}
{"test_case": 246, "data": "MetropolisHasting 246: robots/6-2-4.pl, test_cost: 0, train_cost: 0, time: 0.02046555300000019, length: 109, iterations: 992"}
{"test_case": 247, "data": "MetropolisHasting 247: robots/6-2-5.pl, test_cost: 0, train_cost: 0, time: 0.045581031000000216, length: 198, iterations: 1707"}
{"test_case": 248, "data": "MetropolisHasting 248: robots/6-2-6.pl, test_cost: 0, train_cost: 0, time: 0.06894398599999985, length: 309, iterations: 2359"}
{"test_case": 249, "data": "MetropolisHasting 249: robots/6-2-7.pl, test_cost: 0, train_cost: 0, time: 0.04743764299999942, length: 216, iterations: 1707"}
{"test_case": 170, "data": "MetropolisHasting 170: robots/4-5-5.pl, test_cost: 0, train_cost: 0, time: 0.323326963, length: 487, iterations: 7458"}
{"test_case": 171, "data": "MetropolisHasting 171: robots/4-5-6.pl, test_cost: 0, train_cost: 0, time: 0.007172257999999987, length: 25, iterations: 585"}
{"test_case": 172, "data": "MetropolisHasting 172: robots/4-5-7.pl, test_cost: 0, train_cost: 0, time: 0.246340836, length: 534, iterations: 5040"}
{"test_case": 173, "data": "MetropolisHasting 173: robots/4-5-8.pl, test_cost: 0, train_cost: 0, time: 0.01486574900000004, length: 134, iterations: 758"}
{"test_case": 174, "data": "MetropolisHasting 174: robots/4-5-9.pl, test_cost: 0, train_cost: 0, time: 8.91896453, length: 3240, iterations: 41172"}
{"test_case": 175, "data": "MetropolisHasting 175: robots/4-5-10.pl, test_cost: 0, train_cost: 0, time: 0.0022893110000001826, length: 29, iterations: 185"}
{"test_case": 176, "data": "MetropolisHasting 176: robots/4-6-0.pl, test_cost: 0, train_cost: 0, time: 0.002827992000000279, length: 35, iterations: 201"}
{"test_case": 177, "data": "MetropolisHasting 177: robots/4-6-1.pl, test_cost: 0, train_cost: 0, time: 0.00031547500000073114, length: 11, iterations: 25"}
{"test_case": 178, "data": "MetropolisHasting 178: robots/4-6-2.pl, test_cost: 0, train_cost: 0, time: 0.0258832120000001, length: 20, iterations: 1979"}
{"test_case": 179, "data": "MetropolisHasting 179: robots/4-6-3.pl, test_cost: 0, train_cost: 0, time: 0.0002540790000011839, length: 11, iterations: 21"}
{"test_case": 180, "data": "MetropolisHasting 180: robots/4-6-4.pl, test_cost: 0, train_cost: 0, time: 0.00500675, length: 38, iterations: 380"}
{"test_case": 181, "data": "MetropolisHasting 181: robots/4-6-5.pl, test_cost: 0, train_cost: 0, time: 0.02353351, length: 52, iterations: 1410"}
{"test_case": 182, "data": "MetropolisHasting 182: robots/4-6-6.pl, test_cost: 0, train_cost: 0, time: 0.019807676000000003, length: 137, iterations: 1015"}
{"test_case": 183, "data": "MetropolisHasting 183: robots/4-6-7.pl, test_cost: 0, train_cost: 0, time: 0.025680906000000003, length: 121, iterations: 1425"}
{"test_case": 184, "data": "MetropolisHasting 184: robots/4-6-8.pl, test_cost: 0, train_cost: 0, time: 0.056720325, length: 272, iterations: 1978"}
{"test_case": 185, "data": "MetropolisHasting 185: robots/4-6-9.pl, test_cost: 0, train_cost: 0, time: 0.051369572, length: 37, iterations: 3749"}
{"test_case": 186, "data": "MetropolisHasting 186: robots/4-6-10.pl, test_cost: 0, train_cost: 0, time: 0.03082505199999999, length: 64, iterations: 1962"}
{"test_case": 187, "data": "MetropolisHasting 187: robots/4-7-0.pl, test_cost: 0, train_cost: 0, time: 0.0003467389999999848, length: 5, iterations: 29"}
{"test_case": 188, "data": "MetropolisHasting 188: robots/4-7-1.pl, test_cost: 0, train_cost: 0, time: 0.020705764999999987, length: 90, iterations: 1122"}
{"test_case": 189, "data": "MetropolisHasting 189: robots/4-7-2.pl, test_cost: 0, train_cost: 0, time: 0.13648990600000002, length: 247, iterations: 3715"}
{"test_case": 190, "data": "MetropolisHasting 190: robots/4-7-3.pl, test_cost: 0, train_cost: 0, time: 0.015176416, length: 33, iterations: 1059"}
{"test_case": 191, "data": "MetropolisHasting 191: robots/4-7-4.pl, test_cost: 0, train_cost: 0, time: 0.092888764, length: 98, iterations: 5286"}
{"test_case": 192, "data": "MetropolisHasting 192: robots/4-7-5.pl, test_cost: 0, train_cost: 0, time: 0.01267561099999999, length: 65, iterations: 968"}
{"test_case": 193, "data": "MetropolisHasting 193: robots/4-7-6.pl, test_cost: 0, train_cost: 0, time: 0.003121577999999986, length: 23, iterations: 214"}
{"test_case": 194, "data": "MetropolisHasting 194: robots/4-7-7.pl, test_cost: 0, train_cost: 0, time: 0.001461628999999992, length: 7, iterations: 134"}
{"test_case": 195, "data": "MetropolisHasting 195: robots/4-7-8.pl, test_cost: 0, train_cost: 0, time: 0.049628054000000005, length: 27, iterations: 2893"}
{"test_case": 196, "data": "MetropolisHasting 196: robots/4-7-9.pl, test_cost: 0, train_cost: 0, time: 0.014832272000000007, length: 105, iterations: 828"}
{"test_case": 197, "data": "MetropolisHasting 197: robots/4-7-10.pl, test_cost: 0, train_cost: 0, time: 0.003989191000000003, length: 27, iterations: 298"}
{"test_case": 198, "data": "MetropolisHasting 198: robots/4-8-0.pl, test_cost: 0, train_cost: 0, time: 0.10079300899999999, length: 61, iterations: 5182"}
{"test_case": 199, "data": "MetropolisHasting 199: robots/4-8-1.pl, test_cost: 0, train_cost: 0, time: 0.00425441700000001, length: 49, iterations: 276"}
{"test_case": 200, "data": "MetropolisHasting 200: robots/4-8-2.pl, test_cost: 0, train_cost: 0, time: 0.029444217999999998, length: 72, iterations: 1991"}
{"test_case": 201, "data": "MetropolisHasting 201: robots/4-8-3.pl, test_cost: 0, train_cost: 0, time: 0.005825410999999996, length: 41, iterations: 413"}
{"test_case": 202, "data": "MetropolisHasting 202: robots/4-8-4.pl, test_cost: 0, train_cost: 0, time: 0.020120801, length: 23, iterations: 1621"}
{"test_case": 203, "data": "MetropolisHasting 203: robots/4-8-5.pl, test_cost: 0, train_cost: 0, time: 0.150537843, length: 302, iterations: 5570"}
{"test_case": 204, "data": "MetropolisHasting 204: robots/4-8-6.pl, test_cost: 0, train_cost: 0, time: 0.006408636999999995, length: 45, iterations: 441"}
{"test_case": 205, "data": "MetropolisHasting 205: robots/4-8-7.pl, test_cost: 0, train_cost: 0, time: 0.011858901000000005, length: 82, iterations: 696"}
{"test_case": 206, "data": "MetropolisHasting 206: robots/4-8-8.pl, test_cost: 0, train_cost: 0, time: 0.047638387000000004, length: 83, iterations: 3677"}
{"test_case": 207, "data": "MetropolisHasting 207: robots/4-8-9.pl, test_cost: 0, train_cost: 0, time: 0.11024119300000002, length: 297, iterations: 3400"}
{"test_case": 208, "data": "MetropolisHasting 208: robots/4-8-10.pl, test_cost: 0, train_cost: 0, time: 0.018045548000000022, length: 84, iterations: 1016"}
{"test_case": 209, "data": "MetropolisHasting 209: robots/4-9-0.pl, test_cost: 0, train_cost: 0, time: 0.10139405600000007, length: 274, iterations: 3461"}
{"test_case": 210, "data": "MetropolisHasting 210: robots/4-9-1.pl, test_cost: 0, train_cost: 0, time: 0.00041212599999999964, length: 10, iterations: 15"}
{"test_case": 211, "data": "MetropolisHasting 211: robots/4-9-2.pl, test_cost: 0, train_cost: 0, time: 0.0060389549999999995, length: 66, iterations: 407"}
{"test_case": 212, "data": "MetropolisHasting 212: robots/4-9-3.pl, test_cost: 0, train_cost: 0, time: 0.009876123, length: 35, iterations: 750"}
{"test_case": 213, "data": "MetropolisHasting 213: robots/4-9-4.pl, test_cost: 0, train_cost: 0, time: 0.02725892, length: 83, iterations: 1864"}
{"test_case": 214, "data": "MetropolisHasting 214: robots/4-9-5.pl, test_cost: 0, train_cost: 0, time: 0.048426717, length: 100, iterations: 3098"}
{"test_case": 215, "data": "MetropolisHasting 215: robots/4-9-6.pl, test_cost: 0, train_cost: 0, time: 0.0072959460000000115, length: 13, iterations: 536"}
{"test_case": 216, "data": "MetropolisHasting 216: robots/4-9-7.pl, test_cost: 0, train_cost: 0, time: 0.009990285000000002, length: 101, iterations: 559"}
{"test_case": 217, "data": "MetropolisHasting 217: robots/4-9-8.pl, test_cost: 0, train_cost: 0, time: 0.037337917, length: 65, iterations: 2169"}
{"test_case": 218, "data": "MetropolisHasting 218: robots/4-9-9.pl, test_cost: 0, train_cost: 0, time: 0.04621062200000001, length: 164, iterations: 2291"}
{"test_case": 219, "data": "MetropolisHasting 219: robots/4-9-10.pl, test_cost: 0, train_cost: 0, time: 0.02917699800000001, length: 77, iterations: 1849"}
{"test_case": 220, "data": "MetropolisHasting 220: robots/6-0-0.pl, test_cost: 0, train_cost: 0, time: 0.12488806400000001, length: 252, iterations: 4430"}
{"test_case": 221, "data": "MetropolisHasting 221: robots/6-0-1.pl, test_cost: 0, train_cost: 0, time: 0.42339099700000005, length: 815, iterations: 6894"}
{"test_case": 222, "data": "MetropolisHasting 222: robots/6-0-2.pl, test_cost: 0, train_cost: 0, time: 0.01835023400000002, length: 92, iterations: 868"}
{"test_case": 223, "data": "MetropolisHasting 223: robots/6-0-3.pl, test_cost: 0, train_cost: 0, time: 0.048824402000000044, length: 194, iterations: 2071"}
{"test_case": 224, "data": "MetropolisHasting 224: robots/6-0-4.pl, test_cost: 0, train_cost: 0, time: 0.021320000000000006, length: 53, iterations: 1662"}
{"test_case": 225, "data": "MetropolisHasting 225: robots/6-0-5.pl, test_cost: 0, train_cost: 0, time: 3.205551822, length: 250, iterations: 22671"}
{"test_case": 226, "data": "MetropolisHasting 226: robots/6-0-6.pl, test_cost: 0, train_cost: 0, time: 0.017873089000000064, length: 67, iterations: 1038"}
{"test_case": 227, "data": "MetropolisHasting 227: robots/6-0-7.pl, test_cost: 0, train_cost: 0, time: 0.06346799800000014, length: 240, iterations: 2123"}
{"test_case": 228, "data": "MetropolisHasting 228: robots/6-0-8.pl, test_cost: 0, train_cost: 0, time: 0.04272662099999991, length: 199, iterations: 2003"}
{"test_case": 229, "data": "MetropolisHasting 229: robots/6-0-9.pl, test_cost: 0, train_cost: 0, time: 0.0002223550000000074, length: 6, iterations: 18"}
{"test_case": 230, "data": "MetropolisHasting 230: robots/6-0-10.pl, test_cost: 0, train_cost: 0, time: 0.010460896000000004, length: 82, iterations: 641"}
{"test_case": 231, "data": "MetropolisHasting 231: robots/6-1-0.pl, test_cost: 0, train_cost: 0, time: 0.46881537799999995, length: 607, iterations: 8117"}
{"test_case": 232, "data": "MetropolisHasting 232: robots/6-1-1.pl, test_cost: 0, train_cost: 0, time: 0.03826657999999994, length: 44, iterations: 2238"}
{"test_case": 233, "data": "MetropolisHasting 233: robots/6-1-2.pl, test_cost: 0, train_cost: 0, time: 0.021765962000000028, length: 31, iterations: 1880"}
{"test_case": 234, "data": "MetropolisHasting 234: robots/6-1-3.pl, test_cost: 0, train_cost: 0, time: 0.23415869499999997, length: 509, iterations: 4803"}
{"test_case": 235, "data": "MetropolisHasting 235: robots/6-1-4.pl, test_cost: 0, train_cost: 0, time: 0.014641526999999988, length: 103, iterations: 702"}
{"test_case": 236, "data": "MetropolisHasting 236: robots/6-1-5.pl, test_cost: 0, train_cost: 0, time: 0.06848411900000007, length: 229, iterations: 2370"}
{"test_case": 237, "data": "MetropolisHasting 237: robots/6-1-6.pl, test_cost: 0, train_cost: 0, time: 0.065603988, length: 31, iterations: 4117"}
{"test_case": 238, "data": "MetropolisHasting 238: robots/6-1-7.pl, test_cost: 0, train_cost: 0, time: 0.0686569560000001, length: 246, iterations: 2235"}
{"test_case": 239, "data": "MetropolisHasting 239: robots/6-1-8.pl, test_cost: 0, train_cost: 0, time: 0.004375327999999845, length: 8, iterations: 342"}
{"test_case": 240, "data": "MetropolisHasting 240: robots/6-1-9.pl, test_cost: 0, train_cost: 0, time: 0.049553322000000004, length: 241, iterations: 1688"}
{"test_case": 241, "data": "MetropolisHasting 241: robots/6-1-10.pl, test_cost: 0, train_cost: 0, time: 0.031526482, length: 152, iterations: 1335"}
{"test_case": 242, "data": "MetropolisHasting 242: robots/6-2-0.pl, test_cost: 0, train_cost: 0, time: 0.053110431999999985, length: 220, iterations: 1875"}
{"test_case": 243, "data": "MetropolisHasting 243: robots/6-2-1.pl, test_cost: 0, train_cost: 0, time: 1.732083188, length: 714, iterations: 16908"}
{"test_case": 244, "data": "MetropolisHasting 244: robots/6-2-2.pl, test_cost: 0, train_cost: 0, time: 1.2664856789999999, length: 376, iterations: 13937"}
{"test_case": 245, "data": "MetropolisHasting 245: robots/6-2-3.pl, test_cost: 0, train_cost: 0, time: 0.047829119999999836, length: 200, iterations: 2562"}
{"test_case": 246, "data": "MetropolisHasting 246: robots/6-2-4.pl, test_cost: 0, train_cost: 0, time: 1.1665879209999996, length: 1095, iterations: 13922"}
{"test_case": 247, "data": "MetropolisHasting 247: robots/6-2-5.pl, test_cost: 0, train_cost: 0, time: 0.05906980399999995, length: 275, iterations: 1948"}
{"test_case": 248, "data": "MetropolisHasting 248: robots/6-2-6.pl, test_cost: 0, train_cost: 0, time: 0.07867863400000008, length: 310, iterations: 2449"}
{"test_case": 249, "data": "MetropolisHasting 249: robots/6-2-7.pl, test_cost: 0, train_cost: 0, time: 9.033221512, length: 3786, iterations: 40752"}
{"test_case": 250, "data": "MetropolisHasting 250: robots/6-2-8.pl, test_cost: 0, train_cost: 0, time: 0.009173993999999998, length: 57, iterations: 614"}
{"test_case": 251, "data": "MetropolisHasting 251: robots/6-2-9.pl, test_cost: 0, train_cost: 0, time: 0.23673922399999997, length: 504, iterations: 4490"}
{"test_case": 252, "data": "MetropolisHasting 252: robots/6-2-10.pl, test_cost: 0, train_cost: 0, time: 0.04500981799999998, length: 144, iterations: 1922"}
{"test_case": 253, "data": "MetropolisHasting 253: robots/6-3-0.pl, test_cost: 0, train_cost: 0, time: 0.09461824499999999, length: 398, iterations: 2312"}
{"test_case": 254, "data": "MetropolisHasting 254: robots/6-3-1.pl, test_cost: 0, train_cost: 0, time: 0.377490347, length: 769, iterations: 5294"}
{"test_case": 255, "data": "MetropolisHasting 255: robots/6-3-2.pl, test_cost: 0, train_cost: 0, time: 0.03001293500000002, length: 34, iterations: 1867"}
{"test_case": 256, "data": "MetropolisHasting 256: robots/6-3-3.pl, test_cost: 0, train_cost: 0, time: 0.303415843, length: 552, iterations: 6893"}
{"test_case": 257, "data": "MetropolisHasting 257: robots/6-3-4.pl, test_cost: 0, train_cost: 0, time: 0.013107529000000007, length: 88, iterations: 730"}
{"test_case": 258, "data": "MetropolisHasting 258: robots/6-3-5.pl, test_cost: 0, train_cost: 0, time: 11.04433923, length: 237, iterations: 40835"}
{"test_case": 259, "data": "MetropolisHasting 259: robots/6-3-6.pl, test_cost: 0, train_cost: 0, time: 4.842953114, length: 2529, iterations: 27043"}
{"test_case": 260, "data": "MetropolisHasting 260: robots/6-3-7.pl, test_cost: 0, train_cost: 0, time: 0.015925301, length: 107, iterations: 764"}
{"test_case": 261, "data": "MetropolisHasting 261: robots/6-3-8.pl, test_cost: 0, train_cost: 0, time: 0.18259582000000002, length: 414, iterations: 3871"}
{"test_case": 262, "data": "MetropolisHasting 262: robots/6-3-9.pl, test_cost: 0, train_cost: 0, time: 0.001976091000000013, length: 28, iterations: 156"}
{"test_case": 263, "data": "MetropolisHasting 263: robots/6-3-10.pl, test_cost: 0, train_cost: 0, time: 2.7510392169999998, length: 1992, iterations: 16965"}
{"test_case": 264, "data": "MetropolisHasting 264: robots/6-4-0.pl, test_cost: 0, train_cost: 0, time: 0.09024236600000002, length: 345, iterations: 2109"}
{"test_case": 265, "data": "MetropolisHasting 265: robots/6-4-1.pl, test_cost: 0, train_cost: 0, time: 0.0303561779999999, length: 91, iterations: 1737"}
{"test_case": 266, "data": "MetropolisHasting 266: robots/6-4-2.pl, test_cost: 0, train_cost: 0, time: 0.01935601000000009, length: 87, iterations: 1018"}
{"test_case": 267, "data": "MetropolisHasting 267: robots/6-4-3.pl, test_cost: 0, train_cost: 0, time: 0.028696631999999944, length: 97, iterations: 1389"}
{"test_case": 268, "data": "MetropolisHasting 268: robots/6-4-4.pl, test_cost: 0, train_cost: 0, time: 0.06687729800000008, length: 253, iterations: 2355"}
{"test_case": 269, "data": "MetropolisHasting 269: robots/6-4-5.pl, test_cost: 0, train_cost: 0, time: 0.006373663999999835, length: 31, iterations: 525"}
{"test_case": 250, "data": "MetropolisHasting 250: robots/6-2-8.pl, test_cost: 0, train_cost: 0, time: 0.004230965, length: 23, iterations: 283"}
{"test_case": 251, "data": "MetropolisHasting 251: robots/6-2-9.pl, test_cost: 0, train_cost: 0, time: 0.045569171, length: 191, iterations: 1586"}
{"test_case": 252, "data": "MetropolisHasting 252: robots/6-2-10.pl, test_cost: 0, train_cost: 0, time: 0.039426518, length: 35, iterations: 2720"}
{"test_case": 253, "data": "MetropolisHasting 253: robots/6-3-0.pl, test_cost: 0, train_cost: 0, time: 0.06998621000000001, length: 347, iterations: 1750"}
{"test_case": 254, "data": "MetropolisHasting 254: robots/6-3-1.pl, test_cost: 0, train_cost: 0, time: 0.025702739000000002, length: 171, iterations: 1010"}
{"test_case": 255, "data": "MetropolisHasting 255: robots/6-3-2.pl, test_cost: 0, train_cost: 0, time: 0.012569098, length: 55, iterations: 886"}
{"test_case": 256, "data": "MetropolisHasting 256: robots/6-3-3.pl, test_cost: 0, train_cost: 0, time: 0.025191186999999976, length: 79, iterations: 1289"}
{"test_case": 257, "data": "MetropolisHasting 257: robots/6-3-4.pl, test_cost: 0, train_cost: 0, time: 0.009453916000000007, length: 90, iterations: 506"}
{"test_case": 258, "data": "MetropolisHasting 258: robots/6-3-5.pl, test_cost: 6, train_cost: 6, time: 60.001227820000004, length: 10806, iterations: 79808"}
{"test_case": 259, "data": "MetropolisHasting 259: robots/6-3-6.pl, test_cost: 0, train_cost: 0, time: 0.03634511299999588, length: 163, iterations: 1454"}
{"test_case": 260, "data": "MetropolisHasting 260: robots/6-3-7.pl, test_cost: 0, train_cost: 0, time: 0.010340206, length: 68, iterations: 625"}
{"test_case": 261, "data": "MetropolisHasting 261: robots/6-3-8.pl, test_cost: 0, train_cost: 0, time: 2.9003390390000003, length: 2487, iterations: 17525"}
{"test_case": 262, "data": "MetropolisHasting 262: robots/6-3-9.pl, test_cost: 0, train_cost: 0, time: 0.030164452000000175, length: 16, iterations: 1432"}
{"test_case": 263, "data": "MetropolisHasting 263: robots/6-3-10.pl, test_cost: 0, train_cost: 0, time: 0.021397993999999976, length: 160, iterations: 795"}
{"test_case": 264, "data": "MetropolisHasting 264: robots/6-4-0.pl, test_cost: 0, train_cost: 0, time: 0.13656275900000026, length: 326, iterations: 3741"}
{"test_case": 265, "data": "MetropolisHasting 265: robots/6-4-1.pl, test_cost: 0, train_cost: 0, time: 0.03220586499999989, length: 192, iterations: 1303"}
{"test_case": 266, "data": "MetropolisHasting 266: robots/6-4-2.pl, test_cost: 0, train_cost: 0, time: 0.39254066200000004, length: 504, iterations: 9028"}
{"test_case": 267, "data": "MetropolisHasting 267: robots/6-4-3.pl, test_cost: 0, train_cost: 0, time: 0.176698633, length: 482, iterations: 3650"}
{"test_case": 268, "data": "MetropolisHasting 268: robots/6-4-4.pl, test_cost: 0, train_cost: 0, time: 0.007603349999999676, length: 61, iterations: 480"}
{"test_case": 269, "data": "MetropolisHasting 269: robots/6-4-5.pl, test_cost: 0, train_cost: 0, time: 0.011252872000000025, length: 21, iterations: 958"}
{"test_case": 270, "data": "MetropolisHasting 270: robots/6-4-6.pl, test_cost: 0, train_cost: 0, time: 0.15078919, length: 251, iterations: 5175"}
{"test_case": 271, "data": "MetropolisHasting 271: robots/6-4-7.pl, test_cost: 0, train_cost: 0, time: 0.04717036399999999, length: 214, iterations: 2031"}
{"test_case": 272, "data": "MetropolisHasting 272: robots/6-4-8.pl, test_cost: 0, train_cost: 0, time: 0.01774922100000001, length: 129, iterations: 950"}
{"test_case": 273, "data": "MetropolisHasting 273: robots/6-4-9.pl, test_cost: 0, train_cost: 0, time: 0.03517957799999999, length: 119, iterations: 2149"}
{"test_case": 274, "data": "MetropolisHasting 274: robots/6-4-10.pl, test_cost: 0, train_cost: 0, time: 2.4456415590000002, length: 1541, iterations: 19111"}
{"test_case": 275, "data": "MetropolisHasting 275: robots/6-5-0.pl, test_cost: 0, train_cost: 0, time: 0.01310398200000007, length: 91, iterations: 767"}
{"test_case": 276, "data": "MetropolisHasting 276: robots/6-5-1.pl, test_cost: 0, train_cost: 0, time: 0.001375180999999781, length: 25, iterations: 106"}
{"test_case": 277, "data": "MetropolisHasting 277: robots/6-5-2.pl, test_cost: 0, train_cost: 0, time: 0.004929665999999777, length: 38, iterations: 324"}
{"test_case": 278, "data": "MetropolisHasting 278: robots/6-5-3.pl, test_cost: 0, train_cost: 0, time: 0.1923236909999999, length: 370, iterations: 4820"}
{"test_case": 279, "data": "MetropolisHasting 279: robots/6-5-4.pl, test_cost: 0, train_cost: 0, time: 0.872198204, length: 249, iterations: 14829"}
{"test_case": 280, "data": "MetropolisHasting 280: robots/6-5-5.pl, test_cost: 0, train_cost: 0, time: 0.061621367999999996, length: 109, iterations: 2632"}
{"test_case": 281, "data": "MetropolisHasting 281: robots/6-5-6.pl, test_cost: 0, train_cost: 0, time: 0.772250993, length: 949, iterations: 8435"}
{"test_case": 282, "data": "MetropolisHasting 282: robots/6-5-7.pl, test_cost: 0, train_cost: 0, time: 0.08552083599999993, length: 285, iterations: 2315"}
{"test_case": 283, "data": "MetropolisHasting 283: robots/6-5-8.pl, test_cost: 0, train_cost: 0, time: 0.004270778999999947, length: 21, iterations: 358"}
{"test_case": 284, "data": "MetropolisHasting 284: robots/6-5-9.pl, test_cost: 0, train_cost: 0, time: 0.09385121899999993, length: 254, iterations: 2637"}
{"test_case": 285, "data": "MetropolisHasting 285: robots/6-5-10.pl, test_cost: 0, train_cost: 0, time: 0.04053122499999984, length: 165, iterations: 1597"}
{"test_case": 286, "data": "MetropolisHasting 286: robots/6-6-0.pl, test_cost: 0, train_cost: 0, time: 0.10394589800000009, length: 81, iterations: 3774"}
{"test_case": 287, "data": "MetropolisHasting 287: robots/6-6-1.pl, test_cost: 0, train_cost: 0, time: 0.007046585999999966, length: 41, iterations: 527"}
{"test_case": 288, "data": "MetropolisHasting 288: robots/6-6-2.pl, test_cost: 0, train_cost: 0, time: 0.32699225499999995, length: 217, iterations: 7580"}
{"test_case": 289, "data": "MetropolisHasting 289: robots/6-6-3.pl, test_cost: 0, train_cost: 0, time: 1.012111506, length: 521, iterations: 17064"}
{"test_case": 290, "data": "MetropolisHasting 290: robots/6-6-4.pl, test_cost: 0, train_cost: 0, time: 0.014781555000000002, length: 88, iterations: 885"}
{"test_case": 291, "data": "MetropolisHasting 291: robots/6-6-5.pl, test_cost: 0, train_cost: 0, time: 0.03766345, length: 103, iterations: 2116"}
{"test_case": 292, "data": "MetropolisHasting 292: robots/6-6-6.pl, test_cost: 0, train_cost: 0, time: 0.058089568999999994, length: 262, iterations: 1602"}
{"test_case": 293, "data": "MetropolisHasting 293: robots/6-6-7.pl, test_cost: 0, train_cost: 0, time: 0.36016976999999994, length: 712, iterations: 5163"}
{"test_case": 294, "data": "MetropolisHasting 294: robots/6-6-8.pl, test_cost: 0, train_cost: 0, time: 0.039145167000000036, length: 142, iterations: 1496"}
{"test_case": 295, "data": "MetropolisHasting 295: robots/6-6-9.pl, test_cost: 0, train_cost: 0, time: 0.23600882200000006, length: 522, iterations: 4349"}
{"test_case": 296, "data": "MetropolisHasting 296: robots/6-6-10.pl, test_cost: 0, train_cost: 0, time: 0.01462514700000006, length: 89, iterations: 844"}
{"test_case": 297, "data": "MetropolisHasting 297: robots/6-7-0.pl, test_cost: 0, train_cost: 0, time: 0.08209076900000001, length: 161, iterations: 3803"}
{"test_case": 298, "data": "MetropolisHasting 298: robots/6-7-1.pl, test_cost: 0, train_cost: 0, time: 0.06332553600000002, length: 217, iterations: 2127"}
{"test_case": 299, "data": "MetropolisHasting 299: robots/6-7-2.pl, test_cost: 0, train_cost: 0, time: 0.163063269, length: 425, iterations: 3627"}
{"test_case": 300, "data": "MetropolisHasting 300: robots/6-7-3.pl, test_cost: 0, train_cost: 0, time: 0.011877399, length: 96, iterations: 631"}
{"test_case": 301, "data": "MetropolisHasting 301: robots/6-7-4.pl, test_cost: 0, train_cost: 0, time: 0.03645556, length: 82, iterations: 1894"}
{"test_case": 302, "data": "MetropolisHasting 302: robots/6-7-5.pl, test_cost: 0, train_cost: 0, time: 0.22019288599999998, length: 479, iterations: 5470"}
{"test_case": 303, "data": "MetropolisHasting 303: robots/6-7-6.pl, test_cost: 0, train_cost: 0, time: 48.718474447, length: 9378, iterations: 81579"}
{"test_case": 304, "data": "MetropolisHasting 304: robots/6-7-7.pl, test_cost: 0, train_cost: 0, time: 0.007611713000002851, length: 63, iterations: 541"}
{"test_case": 305, "data": "MetropolisHasting 305: robots/6-7-8.pl, test_cost: 0, train_cost: 0, time: 0.4359667270000003, length: 600, iterations: 9037"}
{"test_case": 306, "data": "MetropolisHasting 306: robots/6-7-9.pl, test_cost: 0, train_cost: 0, time: 0.008422290999995141, length: 90, iterations: 544"}
{"test_case": 307, "data": "MetropolisHasting 307: robots/6-7-10.pl, test_cost: 0, train_cost: 0, time: 0.21731018199999852, length: 494, iterations: 4250"}
{"test_case": 308, "data": "MetropolisHasting 308: robots/6-8-0.pl, test_cost: 0, train_cost: 0, time: 0.627953166999994, length: 1148, iterations: 7492"}
{"test_case": 309, "data": "MetropolisHasting 309: robots/6-8-1.pl, test_cost: 0, train_cost: 0, time: 0.00688204099999723, length: 71, iterations: 497"}
{"test_case": 270, "data": "MetropolisHasting 270: robots/6-4-6.pl, test_cost: 0, train_cost: 0, time: 0.012184127999999999, length: 49, iterations: 892"}
{"test_case": 271, "data": "MetropolisHasting 271: robots/6-4-7.pl, test_cost: 0, train_cost: 0, time: 0.008938394999999998, length: 88, iterations: 533"}
{"test_case": 272, "data": "MetropolisHasting 272: robots/6-4-8.pl, test_cost: 0, train_cost: 0, time: 0.13568717, length: 494, iterations: 3102"}
{"test_case": 273, "data": "MetropolisHasting 273: robots/6-4-9.pl, test_cost: 0, train_cost: 0, time: 0.012191861000000026, length: 51, iterations: 884"}
{"test_case": 274, "data": "MetropolisHasting 274: robots/6-4-10.pl, test_cost: 0, train_cost: 0, time: 0.17139680599999998, length: 448, iterations: 3535"}
{"test_case": 275, "data": "MetropolisHasting 275: robots/6-5-0.pl, test_cost: 0, train_cost: 0, time: 0.003107597999999989, length: 41, iterations: 223"}
{"test_case": 276, "data": "MetropolisHasting 276: robots/6-5-1.pl, test_cost: 0, train_cost: 0, time: 0.0005682959999999682, length: 11, iterations: 45"}
{"test_case": 277, "data": "MetropolisHasting 277: robots/6-5-2.pl, test_cost: 0, train_cost: 0, time: 0.013449869000000003, length: 18, iterations: 1038"}
{"test_case": 278, "data": "MetropolisHasting 278: robots/6-5-3.pl, test_cost: 4, train_cost: 4, time: 60.000530384, length: 6957, iterations: 116425"}
{"test_case": 279, "data": "MetropolisHasting 279: robots/6-5-4.pl, test_cost: 0, train_cost: 0, time: 0.018361417000001268, length: 162, iterations: 781"}
{"test_case": 280, "data": "MetropolisHasting 280: robots/6-5-5.pl, test_cost: 0, train_cost: 0, time: 0.041937301999999996, length: 158, iterations: 1717"}
{"test_case": 281, "data": "MetropolisHasting 281: robots/6-5-6.pl, test_cost: 0, train_cost: 0, time: 0.023750135999999998, length: 133, iterations: 1385"}
{"test_case": 282, "data": "MetropolisHasting 282: robots/6-5-7.pl, test_cost: 0, train_cost: 0, time: 0.007784849999999996, length: 44, iterations: 563"}
{"test_case": 283, "data": "MetropolisHasting 283: robots/6-5-8.pl, test_cost: 0, train_cost: 0, time: 0.115414528, length: 37, iterations: 3920"}
{"test_case": 284, "data": "MetropolisHasting 284: robots/6-5-9.pl, test_cost: 0, train_cost: 0, time: 0.8768403680000001, length: 1236, iterations: 10059"}
{"test_case": 285, "data": "MetropolisHasting 285: robots/6-5-10.pl, test_cost: 0, train_cost: 0, time: 0.024658467000000073, length: 162, iterations: 1050"}
{"test_case": 286, "data": "MetropolisHasting 286: robots/6-6-0.pl, test_cost: 0, train_cost: 0, time: 0.16252698, length: 338, iterations: 4880"}
{"test_case": 287, "data": "MetropolisHasting 287: robots/6-6-1.pl, test_cost: 0, train_cost: 0, time: 0.027552092999999944, length: 125, iterations: 1304"}
{"test_case": 288, "data": "MetropolisHasting 288: robots/6-6-2.pl, test_cost: 0, train_cost: 0, time: 0.05289562799999992, length: 92, iterations: 3172"}
{"test_case": 289, "data": "MetropolisHasting 289: robots/6-6-3.pl, test_cost: 0, train_cost: 0, time: 0.052143834, length: 220, iterations: 1673"}
{"test_case": 290, "data": "MetropolisHasting 290: robots/6-6-4.pl, test_cost: 0, train_cost: 0, time: 0.010921013999999993, length: 72, iterations: 702"}
{"test_case": 291, "data": "MetropolisHasting 291: robots/6-6-5.pl, test_cost: 0, train_cost: 0, time: 0.024541609000000006, length: 70, iterations: 1825"}
{"test_case": 292, "data": "MetropolisHasting 292: robots/6-6-6.pl, test_cost: 0, train_cost: 0, time: 0.318068851, length: 627, iterations: 5749"}
{"test_case": 293, "data": "MetropolisHasting 293: robots/6-6-7.pl, test_cost: 0, train_cost: 0, time: 2.611941524, length: 1950, iterations: 16308"}
{"test_case": 294, "data": "MetropolisHasting 294: robots/6-6-8.pl, test_cost: 0, train_cost: 0, time: 0.02300725399999992, length: 124, iterations: 1027"}
{"test_case": 295, "data": "MetropolisHasting 295: robots/6-6-9.pl, test_cost: 0, train_cost: 0, time: 0.018802883000000215, length: 81, iterations: 962"}
{"test_case": 296, "data": "MetropolisHasting 296: robots/6-6-10.pl, test_cost: 0, train_cost: 0, time: 0.054315396999999876, length: 245, iterations: 1694"}
{"test_case": 297, "data": "MetropolisHasting 297: robots/6-7-0.pl, test_cost: 0, train_cost: 0, time: 0.02200021800000007, length: 157, iterations: 883"}
{"test_case": 298, "data": "MetropolisHasting 298: robots/6-7-1.pl, test_cost: 0, train_cost: 0, time: 0.27740332499999987, length: 111, iterations: 5417"}
{"test_case": 299, "data": "MetropolisHasting 299: robots/6-7-2.pl, test_cost: 0, train_cost: 0, time: 0.22926133300000018, length: 445, iterations: 4587"}
{"test_case": 300, "data": "MetropolisHasting 300: robots/6-7-3.pl, test_cost: 0, train_cost: 0, time: 0.040648466, length: 59, iterations: 1517"}
{"test_case": 301, "data": "MetropolisHasting 301: robots/6-7-4.pl, test_cost: 0, train_cost: 0, time: 0.032896204000000005, length: 139, iterations: 1525"}
{"test_case": 302, "data": "MetropolisHasting 302: robots/6-7-5.pl, test_cost: 0, train_cost: 0, time: 0.057947843, length: 256, iterations: 2121"}
{"test_case": 303, "data": "MetropolisHasting 303: robots/6-7-6.pl, test_cost: 0, train_cost: 0, time: 0.086176805, length: 378, iterations: 2286"}
{"test_case": 304, "data": "MetropolisHasting 304: robots/6-7-7.pl, test_cost: 0, train_cost: 0, time: 0.009313984999999997, length: 59, iterations: 661"}
{"test_case": 305, "data": "MetropolisHasting 305: robots/6-7-8.pl, test_cost: 0, train_cost: 0, time: 0.029184407999999967, length: 200, iterations: 1054"}
{"test_case": 306, "data": "MetropolisHasting 306: robots/6-7-9.pl, test_cost: 0, train_cost: 0, time: 0.009075836000000004, length: 83, iterations: 548"}
{"test_case": 307, "data": "MetropolisHasting 307: robots/6-7-10.pl, test_cost: 0, train_cost: 0, time: 0.859898515, length: 998, iterations: 9097"}
{"test_case": 308, "data": "MetropolisHasting 308: robots/6-8-0.pl, test_cost: 0, train_cost: 0, time: 2.219836893, length: 2033, iterations: 15007"}
{"test_case": 309, "data": "MetropolisHasting 309: robots/6-8-1.pl, test_cost: 0, train_cost: 0, time: 0.011270407999999676, length: 62, iterations: 787"}
{"test_case": 310, "data": "MetropolisHasting 310: robots/6-8-2.pl, test_cost: 0, train_cost: 0, time: 0.07016498, length: 243, iterations: 2679"}
{"test_case": 311, "data": "MetropolisHasting 311: robots/6-8-3.pl, test_cost: 0, train_cost: 0, time: 0.05323799399999998, length: 238, iterations: 2098"}
{"test_case": 312, "data": "MetropolisHasting 312: robots/6-8-4.pl, test_cost: 0, train_cost: 0, time: 0.7320312680000001, length: 956, iterations: 8562"}
{"test_case": 313, "data": "MetropolisHasting 313: robots/6-8-5.pl, test_cost: 0, train_cost: 0, time: 0.008060652999999918, length: 53, iterations: 589"}
{"test_case": 314, "data": "MetropolisHasting 314: robots/6-8-6.pl, test_cost: 0, train_cost: 0, time: 0.04542615900000002, length: 178, iterations: 2067"}
{"test_case": 315, "data": "MetropolisHasting 315: robots/6-8-7.pl, test_cost: 0, train_cost: 0, time: 0.005446546999999913, length: 67, iterations: 336"}
{"test_case": 316, "data": "MetropolisHasting 316: robots/6-8-8.pl, test_cost: 0, train_cost: 0, time: 0.922959201, length: 1203, iterations: 9113"}
{"test_case": 317, "data": "MetropolisHasting 317: robots/6-8-9.pl, test_cost: 0, train_cost: 0, time: 0.3241348179999999, length: 258, iterations: 7043"}
{"test_case": 318, "data": "MetropolisHasting 318: robots/6-8-10.pl, test_cost: 0, train_cost: 0, time: 0.08397603100000017, length: 226, iterations: 3096"}
{"test_case": 319, "data": "MetropolisHasting 319: robots/6-9-0.pl, test_cost: 0, train_cost: 0, time: 0.1246247389999997, length: 297, iterations: 4262"}
{"test_case": 320, "data": "MetropolisHasting 320: robots/6-9-1.pl, test_cost: 0, train_cost: 0, time: 0.008927320999999998, length: 70, iterations: 535"}
{"test_case": 321, "data": "MetropolisHasting 321: robots/6-9-2.pl, test_cost: 0, train_cost: 0, time: 0.050198604, length: 225, iterations: 1823"}
{"test_case": 322, "data": "MetropolisHasting 322: robots/6-9-3.pl, test_cost: 0, train_cost: 0, time: 0.06973104900000002, length: 264, iterations: 2253"}
{"test_case": 323, "data": "MetropolisHasting 323: robots/6-9-4.pl, test_cost: 0, train_cost: 0, time: 3.9471534829999997, length: 2629, iterations: 21829"}
{"test_case": 324, "data": "MetropolisHasting 324: robots/6-9-5.pl, test_cost: 0, train_cost: 0, time: 2.362627913, length: 312, iterations: 19781"}
{"test_case": 325, "data": "MetropolisHasting 325: robots/6-9-6.pl, test_cost: 0, train_cost: 0, time: 0.022082404999999916, length: 128, iterations: 1046"}
{"test_case": 326, "data": "MetropolisHasting 326: robots/6-9-7.pl, test_cost: 0, train_cost: 0, time: 0.021429432999999776, length: 119, iterations: 1063"}
{"test_case": 327, "data": "MetropolisHasting 327: robots/6-9-8.pl, test_cost: 0, train_cost: 0, time: 0.026361947999999913, length: 128, iterations: 1151"}
{"test_case": 328, "data": "MetropolisHasting 328: robots/6-9-9.pl, test_cost: 0, train_cost: 0, time: 0.02457726500000046, length: 109, iterations: 1180"}
{"test_case": 329, "data": "MetropolisHasting 329: robots/6-9-10.pl, test_cost: 0, train_cost: 0, time: 0.020294480000000448, length: 122, iterations: 1062"}
{"test_case": 310, "data": "MetropolisHasting 310: robots/6-8-2.pl, test_cost: 0, train_cost: 0, time: 0.10108276000000001, length: 391, iterations: 2205"}
{"test_case": 311, "data": "MetropolisHasting 311: robots/6-8-3.pl, test_cost: 11, train_cost: 11, time: 60.001131054, length: 9938, iterations: 82998"}
{"test_case": 312, "data": "MetropolisHasting 312: robots/6-8-4.pl, test_cost: 0, train_cost: 0, time: 0.07042496300000067, length: 350, iterations: 1785"}
{"test_case": 313, "data": "MetropolisHasting 313: robots/6-8-5.pl, test_cost: 0, train_cost: 0, time: 0.005135934000001896, length: 48, iterations: 355"}
{"test_case": 314, "data": "MetropolisHasting 314: robots/6-8-6.pl, test_cost: 0, train_cost: 0, time: 0.5008834930000035, length: 773, iterations: 7105"}
{"test_case": 315, "data": "MetropolisHasting 315: robots/6-8-7.pl, test_cost: 0, train_cost: 0, time: 2.2750372289999987, length: 172, iterations: 17968"}
{"test_case": 316, "data": "MetropolisHasting 316: robots/6-8-8.pl, test_cost: 0, train_cost: 0, time: 0.18208415600000194, length: 478, iterations: 4154"}
{"test_case": 317, "data": "MetropolisHasting 317: robots/6-8-9.pl, test_cost: 0, train_cost: 0, time: 1.1202334340000064, length: 1285, iterations: 9346"}
{"test_case": 318, "data": "MetropolisHasting 318: robots/6-8-10.pl, test_cost: 0, train_cost: 0, time: 0.1452271060000072, length: 311, iterations: 4682"}
{"test_case": 319, "data": "MetropolisHasting 319: robots/6-9-0.pl, test_cost: 0, train_cost: 0, time: 0.10843810499999051, length: 369, iterations: 3083"}
{"test_case": 320, "data": "MetropolisHasting 320: robots/6-9-1.pl, test_cost: 0, train_cost: 0, time: 0.02269205099999999, length: 54, iterations: 1374"}
{"test_case": 321, "data": "MetropolisHasting 321: robots/6-9-2.pl, test_cost: 0, train_cost: 0, time: 0.016263837000000003, length: 76, iterations: 1254"}
{"test_case": 322, "data": "MetropolisHasting 322: robots/6-9-3.pl, test_cost: 0, train_cost: 0, time: 0.020452928999999995, length: 111, iterations: 890"}
{"test_case": 323, "data": "MetropolisHasting 323: robots/6-9-4.pl, test_cost: 0, train_cost: 0, time: 0.04247342399999998, length: 148, iterations: 1562"}
{"test_case": 324, "data": "MetropolisHasting 324: robots/6-9-5.pl, test_cost: 0, train_cost: 0, time: 0.621170903, length: 133, iterations: 8585"}
{"test_case": 325, "data": "MetropolisHasting 325: robots/6-9-6.pl, test_cost: 0, train_cost: 0, time: 0.05611035200000003, length: 190, iterations: 3013"}
{"test_case": 326, "data": "MetropolisHasting 326: robots/6-9-7.pl, test_cost: 0, train_cost: 0, time: 0.03332655799999995, length: 176, iterations: 1436"}
{"test_case": 327, "data": "MetropolisHasting 327: robots/6-9-8.pl, test_cost: 0, train_cost: 0, time: 0.1628620650000001, length: 432, iterations: 3456"}
{"test_case": 328, "data": "MetropolisHasting 328: robots/6-9-9.pl, test_cost: 0, train_cost: 0, time: 0.073799124, length: 285, iterations: 1971"}
{"test_case": 329, "data": "MetropolisHasting 329: robots/6-9-10.pl, test_cost: 0, train_cost: 0, time: 0.2728541710000001, length: 643, iterations: 4170"}
{"test_case": 330, "data": "MetropolisHasting 330: robots/8-0-0.pl, test_cost: 0, train_cost: 0, time: 0.064137049, length: 164, iterations: 2894"}
{"test_case": 331, "data": "MetropolisHasting 331: robots/8-0-1.pl, test_cost: 0, train_cost: 0, time: 0.04028052, length: 202, iterations: 1486"}
{"test_case": 332, "data": "MetropolisHasting 332: robots/8-0-2.pl, test_cost: 0, train_cost: 0, time: 0.028990180000000004, length: 147, iterations: 1394"}
{"test_case": 333, "data": "MetropolisHasting 333: robots/8-0-3.pl, test_cost: 0, train_cost: 0, time: 0.023546853000000006, length: 105, iterations: 1050"}
{"test_case": 334, "data": "MetropolisHasting 334: robots/8-0-4.pl, test_cost: 3, train_cost: 3, time: 60.000303022000004, length: 11076, iterations: 75508"}
{"test_case": 335, "data": "MetropolisHasting 335: robots/8-0-5.pl, test_cost: 0, train_cost: 0, time: 0.037091724999996245, length: 167, iterations: 1650"}
{"test_case": 336, "data": "MetropolisHasting 336: robots/8-0-6.pl, test_cost: 0, train_cost: 0, time: 3.7926775720000094, length: 2918, iterations: 17904"}
{"test_case": 337, "data": "MetropolisHasting 337: robots/8-0-7.pl, test_cost: 0, train_cost: 0, time: 0.1368154689999983, length: 356, iterations: 3308"}
{"test_case": 338, "data": "MetropolisHasting 338: robots/8-0-8.pl, test_cost: 0, train_cost: 0, time: 0.10040189599999394, length: 412, iterations: 2923"}
{"test_case": 339, "data": "MetropolisHasting 339: robots/8-0-9.pl, test_cost: 0, train_cost: 0, time: 0.3824669250000028, length: 98, iterations: 5658"}
{"test_case": 340, "data": "MetropolisHasting 340: robots/8-0-10.pl, test_cost: 0, train_cost: 0, time: 0.028652672, length: 171, iterations: 1230"}
{"test_case": 341, "data": "MetropolisHasting 341: robots/8-1-0.pl, test_cost: 0, train_cost: 0, time: 9.696057676, length: 4460, iterations: 29262"}
{"test_case": 342, "data": "MetropolisHasting 342: robots/8-1-1.pl, test_cost: 0, train_cost: 0, time: 0.03411693999999876, length: 201, iterations: 1237"}
{"test_case": 343, "data": "MetropolisHasting 343: robots/8-1-2.pl, test_cost: 3, train_cost: 3, time: 60.001484528999995, length: 11116, iterations: 71254"}
{"test_case": 344, "data": "MetropolisHasting 344: robots/8-1-3.pl, test_cost: 0, train_cost: 0, time: 2.432488524000007, length: 1660, iterations: 19497"}
{"test_case": 345, "data": "MetropolisHasting 345: robots/8-1-4.pl, test_cost: 0, train_cost: 0, time: 0.06237105700000711, length: 212, iterations: 2219"}
{"test_case": 346, "data": "MetropolisHasting 346: robots/8-1-5.pl, test_cost: 0, train_cost: 0, time: 0.06417936399999746, length: 225, iterations: 2492"}
{"test_case": 347, "data": "MetropolisHasting 347: robots/8-1-6.pl, test_cost: 0, train_cost: 0, time: 0.05281972499999199, length: 161, iterations: 2463"}
{"test_case": 348, "data": "MetropolisHasting 348: robots/8-1-7.pl, test_cost: 0, train_cost: 0, time: 0.5833305409999952, length: 1148, iterations: 5257"}
{"test_case": 349, "data": "MetropolisHasting 349: robots/8-1-8.pl, test_cost: 0, train_cost: 0, time: 0.0418527599999976, length: 82, iterations: 2098"}
{"test_case": 330, "data": "MetropolisHasting 330: robots/8-0-0.pl, test_cost: 0, train_cost: 0, time: 0.17597607499999998, length: 359, iterations: 4956"}
{"test_case": 331, "data": "MetropolisHasting 331: robots/8-0-1.pl, test_cost: 0, train_cost: 0, time: 0.012515551999999985, length: 101, iterations: 722"}
{"test_case": 332, "data": "MetropolisHasting 332: robots/8-0-2.pl, test_cost: 0, train_cost: 0, time: 0.09832360999999998, length: 400, iterations: 2484"}
{"test_case": 333, "data": "MetropolisHasting 333: robots/8-0-3.pl, test_cost: 0, train_cost: 0, time: 0.08560313000000003, length: 303, iterations: 3030"}
{"test_case": 334, "data": "MetropolisHasting 334: robots/8-0-4.pl, test_cost: 3, train_cost: 3, time: 60.000339323, length: 10407, iterations: 84795"}
{"test_case": 335, "data": "MetropolisHasting 335: robots/8-0-5.pl, test_cost: 0, train_cost: 0, time: 0.3152196050000029, length: 793, iterations: 5017"}
{"test_case": 336, "data": "MetropolisHasting 336: robots/8-0-6.pl, test_cost: 0, train_cost: 0, time: 28.298858505, length: 7383, iterations: 54881"}
{"test_case": 337, "data": "MetropolisHasting 337: robots/8-0-7.pl, test_cost: 0, train_cost: 0, time: 0.03663054599999782, length: 179, iterations: 1619"}
{"test_case": 338, "data": "MetropolisHasting 338: robots/8-0-8.pl, test_cost: 0, train_cost: 0, time: 0.03559783299999708, length: 168, iterations: 1522"}
{"test_case": 339, "data": "MetropolisHasting 339: robots/8-0-9.pl, test_cost: 0, train_cost: 0, time: 0.49223923499999955, length: 906, iterations: 5890"}
{"test_case": 340, "data": "MetropolisHasting 340: robots/8-0-10.pl, test_cost: 0, train_cost: 0, time: 0.020424584, length: 121, iterations: 907"}
{"test_case": 341, "data": "MetropolisHasting 341: robots/8-1-0.pl, test_cost: 0, train_cost: 0, time: 0.06302508300000001, length: 227, iterations: 1949"}
{"test_case": 342, "data": "MetropolisHasting 342: robots/8-1-1.pl, test_cost: 0, train_cost: 0, time: 0.185409062, length: 395, iterations: 3849"}
{"test_case": 343, "data": "MetropolisHasting 343: robots/8-1-2.pl, test_cost: 0, train_cost: 0, time: 0.208474702, length: 446, iterations: 5685"}
{"test_case": 344, "data": "MetropolisHasting 344: robots/8-1-3.pl, test_cost: 0, train_cost: 0, time: 0.743265204, length: 897, iterations: 7974"}
{"test_case": 345, "data": "MetropolisHasting 345: robots/8-1-4.pl, test_cost: 0, train_cost: 0, time: 2.019107321, length: 1966, iterations: 13435"}
{"test_case": 346, "data": "MetropolisHasting 346: robots/8-1-5.pl, test_cost: 4, train_cost: 4, time: 60.0016225, length: 10224, iterations: 77611"}
{"test_case": 347, "data": "MetropolisHasting 347: robots/8-1-6.pl, test_cost: 0, train_cost: 0, time: 0.046407788999999866, length: 158, iterations: 2395"}
{"test_case": 348, "data": "MetropolisHasting 348: robots/8-1-7.pl, test_cost: 0, train_cost: 0, time: 0.07114560200000142, length: 303, iterations: 2216"}
{"test_case": 349, "data": "MetropolisHasting 349: robots/8-1-8.pl, test_cost: 0, train_cost: 0, time: 0.5955220430000026, length: 936, iterations: 9254"}
{"test_case": 350, "data": "MetropolisHasting 350: robots/8-1-9.pl, test_cost: 0, train_cost: 0, time: 0.081082387, length: 296, iterations: 2483"}
{"test_case": 351, "data": "MetropolisHasting 351: robots/8-1-10.pl, test_cost: 0, train_cost: 0, time: 5.213991818999999, length: 3494, iterations: 20158"}
{"test_case": 352, "data": "MetropolisHasting 352: robots/8-2-0.pl, test_cost: 0, train_cost: 0, time: 0.06404202399999992, length: 273, iterations: 2180"}
{"test_case": 353, "data": "MetropolisHasting 353: robots/8-2-1.pl, test_cost: 0, train_cost: 0, time: 1.8428658029999996, length: 1429, iterations: 15316"}
{"test_case": 354, "data": "MetropolisHasting 354: robots/8-2-2.pl, test_cost: 0, train_cost: 0, time: 2.3750448349999997, length: 2256, iterations: 15234"}
{"test_case": 355, "data": "MetropolisHasting 355: robots/8-2-3.pl, test_cost: 0, train_cost: 0, time: 0.3027848679999998, length: 633, iterations: 4816"}
{"test_case": 356, "data": "MetropolisHasting 356: robots/8-2-4.pl, test_cost: 0, train_cost: 0, time: 0.11585021500000003, length: 335, iterations: 2732"}
{"test_case": 357, "data": "MetropolisHasting 357: robots/8-2-5.pl, test_cost: 0, train_cost: 0, time: 0.012933267999999387, length: 62, iterations: 939"}
{"test_case": 358, "data": "MetropolisHasting 358: robots/8-2-6.pl, test_cost: 0, train_cost: 0, time: 0.0664835239999988, length: 133, iterations: 3259"}
{"test_case": 359, "data": "MetropolisHasting 359: robots/8-2-7.pl, test_cost: 0, train_cost: 0, time: 0.09034697899999955, length: 288, iterations: 2825"}
{"test_case": 360, "data": "MetropolisHasting 360: robots/8-2-8.pl, test_cost: 2, train_cost: 2, time: 60.000990714000004, length: 9758, iterations: 79054"}
{"test_case": 361, "data": "MetropolisHasting 361: robots/8-2-9.pl, test_cost: 0, train_cost: 0, time: 0.03556495199999432, length: 200, iterations: 1581"}
{"test_case": 362, "data": "MetropolisHasting 362: robots/8-2-10.pl, test_cost: 0, train_cost: 0, time: 0.07675230299999924, length: 319, iterations: 2160"}
{"test_case": 363, "data": "MetropolisHasting 363: robots/8-3-0.pl, test_cost: 0, train_cost: 0, time: 0.38012449299999673, length: 911, iterations: 4799"}
{"test_case": 364, "data": "MetropolisHasting 364: robots/8-3-1.pl, test_cost: 0, train_cost: 0, time: 0.28250066100000026, length: 645, iterations: 5236"}
{"test_case": 365, "data": "MetropolisHasting 365: robots/8-3-2.pl, test_cost: 0, train_cost: 0, time: 3.0541979019999985, length: 2350, iterations: 16020"}
{"test_case": 366, "data": "MetropolisHasting 366: robots/8-3-3.pl, test_cost: 0, train_cost: 0, time: 0.03180776099999605, length: 190, iterations: 1276"}
{"test_case": 367, "data": "MetropolisHasting 367: robots/8-3-4.pl, test_cost: 0, train_cost: 0, time: 0.8810756499999925, length: 1278, iterations: 8070"}
{"test_case": 368, "data": "MetropolisHasting 368: robots/8-3-5.pl, test_cost: 0, train_cost: 0, time: 4.776087933999989, length: 3025, iterations: 21581"}
{"test_case": 369, "data": "MetropolisHasting 369: robots/8-3-6.pl, test_cost: 0, train_cost: 0, time: 0.03482641200000103, length: 123, iterations: 2053"}
{"test_case": 370, "data": "MetropolisHasting 370: robots/8-3-7.pl, test_cost: 0, train_cost: 0, time: 1.051943979, length: 1319, iterations: 9768"}
{"test_case": 371, "data": "MetropolisHasting 371: robots/8-3-8.pl, test_cost: 0, train_cost: 0, time: 0.0034733950000001013, length: 32, iterations: 298"}
{"test_case": 372, "data": "MetropolisHasting 372: robots/8-3-9.pl, test_cost: 0, train_cost: 0, time: 0.32637327299999996, length: 824, iterations: 4580"}
{"test_case": 373, "data": "MetropolisHasting 373: robots/8-3-10.pl, test_cost: 0, train_cost: 0, time: 0.05089715700000008, length: 220, iterations: 1672"}
{"test_case": 374, "data": "MetropolisHasting 374: robots/8-4-0.pl, test_cost: 0, train_cost: 0, time: 0.5685563899999997, length: 821, iterations: 9112"}
{"test_case": 375, "data": "MetropolisHasting 375: robots/8-4-1.pl, test_cost: 0, train_cost: 0, time: 0.854277578, length: 344, iterations: 13010"}
{"test_case": 376, "data": "MetropolisHasting 376: robots/8-4-2.pl, test_cost: 0, train_cost: 0, time: 4.720074481999999, length: 468, iterations: 22336"}
{"test_case": 377, "data": "MetropolisHasting 377: robots/8-4-3.pl, test_cost: 0, train_cost: 0, time: 31.296127413000004, length: 7604, iterations: 50588"}
{"test_case": 378, "data": "MetropolisHasting 378: robots/8-4-4.pl, test_cost: 0, train_cost: 0, time: 0.0935248030000011, length: 281, iterations: 2715"}
{"test_case": 379, "data": "MetropolisHasting 379: robots/8-4-5.pl, test_cost: 0, train_cost: 0, time: 0.27937484899999987, length: 596, iterations: 4788"}
{"test_case": 380, "data": "MetropolisHasting 380: robots/8-4-6.pl, test_cost: 0, train_cost: 0, time: 0.180072535, length: 577, iterations: 3613"}
{"test_case": 381, "data": "MetropolisHasting 381: robots/8-4-7.pl, test_cost: 0, train_cost: 0, time: 14.629558752, length: 5668, iterations: 42171"}
{"test_case": 382, "data": "MetropolisHasting 382: robots/8-4-8.pl, test_cost: 0, train_cost: 0, time: 0.2649530759999994, length: 243, iterations: 6012"}
{"test_case": 383, "data": "MetropolisHasting 383: robots/8-4-9.pl, test_cost: 0, train_cost: 0, time: 5.007789528, length: 3153, iterations: 23727"}
{"test_case": 384, "data": "MetropolisHasting 384: robots/8-4-10.pl, test_cost: 0, train_cost: 0, time: 1.1840734340000019, length: 1389, iterations: 11085"}
{"test_case": 385, "data": "MetropolisHasting 385: robots/8-5-0.pl, test_cost: 0, train_cost: 0, time: 0.05157237200000253, length: 84, iterations: 2576"}
{"test_case": 386, "data": "MetropolisHasting 386: robots/8-5-1.pl, test_cost: 0, train_cost: 0, time: 0.5710956510000003, length: 1133, iterations: 6039"}
{"test_case": 387, "data": "MetropolisHasting 387: robots/8-5-2.pl, test_cost: 0, train_cost: 0, time: 0.016318308999998976, length: 104, iterations: 807"}
{"test_case": 388, "data": "MetropolisHasting 388: robots/8-5-3.pl, test_cost: 0, train_cost: 0, time: 0.27085907699999723, length: 527, iterations: 5011"}
{"test_case": 389, "data": "MetropolisHasting 389: robots/8-5-4.pl, test_cost: 0, train_cost: 0, time: 0.008451746000002203, length: 77, iterations: 547"}
{"test_case": 390, "data": "MetropolisHasting 390: robots/8-5-5.pl, test_cost: 0, train_cost: 0, time: 0.014318657999999998, length: 83, iterations: 953"}
{"test_case": 391, "data": "MetropolisHasting 391: robots/8-5-6.pl, test_cost: 0, train_cost: 0, time: 0.20187165299999998, length: 101, iterations: 5025"}
{"test_case": 392, "data": "MetropolisHasting 392: robots/8-5-7.pl, test_cost: 0, train_cost: 0, time: 12.19301773, length: 4866, iterations: 32310"}
{"test_case": 393, "data": "MetropolisHasting 393: robots/8-5-8.pl, test_cost: 0, train_cost: 0, time: 39.932123356, length: 8920, iterations: 60246"}
{"test_case": 394, "data": "MetropolisHasting 394: robots/8-5-9.pl, test_cost: 0, train_cost: 0, time: 0.03686509399999949, length: 117, iterations: 2247"}
{"test_case": 395, "data": "MetropolisHasting 395: robots/8-5-10.pl, test_cost: 0, train_cost: 0, time: 0.052760400000003926, length: 228, iterations: 1909"}
{"test_case": 396, "data": "MetropolisHasting 396: robots/8-6-0.pl, test_cost: 0, train_cost: 0, time: 0.025649968999999828, length: 150, iterations: 1021"}
{"test_case": 397, "data": "MetropolisHasting 397: robots/8-6-1.pl, test_cost: 0, train_cost: 0, time: 0.7629957010000012, length: 1083, iterations: 8541"}
{"test_case": 398, "data": "MetropolisHasting 398: robots/8-6-2.pl, test_cost: 0, train_cost: 0, time: 0.009309587000004171, length: 57, iterations: 623"}
{"test_case": 399, "data": "MetropolisHasting 399: robots/8-6-3.pl, test_cost: 0, train_cost: 0, time: 0.016416479000000095, length: 72, iterations: 1005"}
{"test_case": 400, "data": "MetropolisHasting 400: robots/8-6-4.pl, test_cost: 0, train_cost: 0, time: 0.016784625, length: 76, iterations: 1254"}
{"test_case": 401, "data": "MetropolisHasting 401: robots/8-6-5.pl, test_cost: 12, train_cost: 12, time: 60.000860908, length: 10310, iterations: 75303"}
{"test_case": 402, "data": "MetropolisHasting 402: robots/8-6-6.pl, test_cost: 0, train_cost: 0, time: 0.05465889999999973, length: 210, iterations: 2074"}
{"test_case": 403, "data": "MetropolisHasting 403: robots/8-6-7.pl, test_cost: 0, train_cost: 0, time: 0.1844640730000009, length: 377, iterations: 4303"}
{"test_case": 404, "data": "MetropolisHasting 404: robots/8-6-8.pl, test_cost: 0, train_cost: 0, time: 2.1735817770000025, length: 1847, iterations: 14441"}
{"test_case": 405, "data": "MetropolisHasting 405: robots/8-6-9.pl, test_cost: 0, train_cost: 0, time: 0.03691233499999669, length: 180, iterations: 1554"}
{"test_case": 406, "data": "MetropolisHasting 406: robots/8-6-10.pl, test_cost: 0, train_cost: 0, time: 0.23339554399999685, length: 625, iterations: 3929"}
{"test_case": 407, "data": "MetropolisHasting 407: robots/8-7-0.pl, test_cost: 0, train_cost: 0, time: 0.019013667000002954, length: 125, iterations: 951"}
{"test_case": 408, "data": "MetropolisHasting 408: robots/8-7-1.pl, test_cost: 0, train_cost: 0, time: 0.21331102199999918, length: 541, iterations: 4183"}
{"test_case": 409, "data": "MetropolisHasting 409: robots/8-7-2.pl, test_cost: 6, train_cost: 6, time: 60.00042633899999, length: 11862, iterations: 81031"}
{"test_case": 410, "data": "MetropolisHasting 410: robots/8-7-3.pl, test_cost: 0, train_cost: 0, time: 0.015798596, length: 79, iterations: 907"}
{"test_case": 411, "data": "MetropolisHasting 411: robots/8-7-4.pl, test_cost: 0, train_cost: 0, time: 0.697607925, length: 1017, iterations: 8838"}
{"test_case": 412, "data": "MetropolisHasting 412: robots/8-7-5.pl, test_cost: 0, train_cost: 0, time: 0.09183628300000002, length: 341, iterations: 2486"}
{"test_case": 413, "data": "MetropolisHasting 413: robots/8-7-6.pl, test_cost: 0, train_cost: 0, time: 0.16697457599999999, length: 257, iterations: 4368"}
{"test_case": 414, "data": "MetropolisHasting 414: robots/8-7-7.pl, test_cost: 0, train_cost: 0, time: 0.01490419799999998, length: 77, iterations: 906"}
{"test_case": 415, "data": "MetropolisHasting 415: robots/8-7-8.pl, test_cost: 0, train_cost: 0, time: 0.745257074, length: 1138, iterations: 7781"}
{"test_case": 416, "data": "MetropolisHasting 416: robots/8-7-9.pl, test_cost: 0, train_cost: 0, time: 7.475720158, length: 3082, iterations: 30208"}
{"test_case": 417, "data": "MetropolisHasting 417: robots/8-7-10.pl, test_cost: 0, train_cost: 0, time: 15.549135781999999, length: 5695, iterations: 38721"}
{"test_case": 418, "data": "MetropolisHasting 418: robots/8-8-0.pl, test_cost: 0, train_cost: 0, time: 27.400798754000004, length: 5851, iterations: 75308"}
{"test_case": 419, "data": "MetropolisHasting 419: robots/8-8-1.pl, test_cost: 0, train_cost: 0, time: 0.005045393999999703, length: 39, iterations: 375"}
{"test_case": 420, "data": "MetropolisHasting 420: robots/8-8-2.pl, test_cost: 0, train_cost: 0, time: 0.15765290099999998, length: 437, iterations: 3891"}
{"test_case": 421, "data": "MetropolisHasting 421: robots/8-8-3.pl, test_cost: 0, train_cost: 0, time: 0.27345290899999997, length: 659, iterations: 5762"}
{"test_case": 422, "data": "MetropolisHasting 422: robots/8-8-4.pl, test_cost: 0, train_cost: 0, time: 0.12199448999999996, length: 206, iterations: 3453"}
{"test_case": 423, "data": "MetropolisHasting 423: robots/8-8-5.pl, test_cost: 0, train_cost: 0, time: 0.31420062800000004, length: 680, iterations: 5461"}
{"test_case": 424, "data": "MetropolisHasting 424: robots/8-8-6.pl, test_cost: 0, train_cost: 0, time: 0.023222825000000058, length: 130, iterations: 978"}
{"test_case": 425, "data": "MetropolisHasting 425: robots/8-8-7.pl, test_cost: 0, train_cost: 0, time: 0.468688298, length: 832, iterations: 7032"}
{"test_case": 426, "data": "MetropolisHasting 426: robots/8-8-8.pl, test_cost: 0, train_cost: 0, time: 0.08544260700000006, length: 297, iterations: 2508"}
{"test_case": 427, "data": "MetropolisHasting 427: robots/8-8-9.pl, test_cost: 0, train_cost: 0, time: 1.6219117210000003, length: 1201, iterations: 16317"}
{"test_case": 428, "data": "MetropolisHasting 428: robots/8-8-10.pl, test_cost: 0, train_cost: 0, time: 0.08179363800000017, length: 215, iterations: 2876"}
{"test_case": 429, "data": "MetropolisHasting 429: robots/8-9-0.pl, test_cost: 0, train_cost: 0, time: 0.5317059679999998, length: 1062, iterations: 7203"}
{"test_case": 430, "data": "MetropolisHasting 430: robots/8-9-1.pl, test_cost: 0, train_cost: 0, time: 0.014431956, length: 21, iterations: 1066"}
{"test_case": 431, "data": "MetropolisHasting 431: robots/8-9-2.pl, test_cost: 0, train_cost: 0, time: 0.092585355, length: 334, iterations: 2369"}
{"test_case": 432, "data": "MetropolisHasting 432: robots/8-9-3.pl, test_cost: 0, train_cost: 0, time: 1.5760237540000002, length: 180, iterations: 15565"}
{"test_case": 433, "data": "MetropolisHasting 433: robots/8-9-4.pl, test_cost: 0, train_cost: 0, time: 0.18147478900000014, length: 489, iterations: 3467"}
{"test_case": 434, "data": "MetropolisHasting 434: robots/8-9-5.pl, test_cost: 0, train_cost: 0, time: 0.014107678000000012, length: 50, iterations: 676"}
{"test_case": 435, "data": "MetropolisHasting 435: robots/8-9-6.pl, test_cost: 0, train_cost: 0, time: 0.2459359200000002, length: 671, iterations: 4151"}
{"test_case": 436, "data": "MetropolisHasting 436: robots/8-9-7.pl, test_cost: 0, train_cost: 0, time: 18.379234111000002, length: 5940, iterations: 46756"}
{"test_case": 437, "data": "MetropolisHasting 437: robots/8-9-8.pl, test_cost: 0, train_cost: 0, time: 0.09882995500000291, length: 371, iterations: 2242"}
{"test_case": 438, "data": "MetropolisHasting 438: robots/8-9-9.pl, test_cost: 0, train_cost: 0, time: 0.736207696000001, length: 1206, iterations: 7152"}
{"test_case": 439, "data": "MetropolisHasting 439: robots/8-9-10.pl, test_cost: 0, train_cost: 0, time: 5.682782150000001, length: 3120, iterations: 23422"}
{"test_case": 440, "data": "MetropolisHasting 440: robots/10-0-0.pl, test_cost: 0, train_cost: 0, time: 0.022910195, length: 34, iterations: 1868"}
{"test_case": 441, "data": "MetropolisHasting 441: robots/10-0-1.pl, test_cost: 0, train_cost: 0, time: 35.709485480999994, length: 9453, iterations: 51727"}
{"test_case": 442, "data": "MetropolisHasting 442: robots/10-0-2.pl, test_cost: 0, train_cost: 0, time: 0.785537803000004, length: 1181, iterations: 7563"}
{"test_case": 443, "data": "MetropolisHasting 443: robots/10-0-3.pl, test_cost: 0, train_cost: 0, time: 0.6459163960000041, length: 866, iterations: 8576"}
{"test_case": 444, "data": "MetropolisHasting 444: robots/10-0-4.pl, test_cost: 0, train_cost: 0, time: 0.6429074050000025, length: 722, iterations: 7541"}
{"test_case": 445, "data": "MetropolisHasting 445: robots/10-0-5.pl, test_cost: 0, train_cost: 0, time: 0.09391206200000113, length: 303, iterations: 3158"}
{"test_case": 446, "data": "MetropolisHasting 446: robots/10-0-6.pl, test_cost: 0, train_cost: 0, time: 0.04403105800000162, length: 188, iterations: 1763"}
{"test_case": 447, "data": "MetropolisHasting 447: robots/10-0-7.pl, test_cost: 0, train_cost: 0, time: 0.03974357399999917, length: 70, iterations: 2674"}
{"test_case": 448, "data": "MetropolisHasting 448: robots/10-0-8.pl, test_cost: 0, train_cost: 0, time: 0.9299306320000014, length: 1223, iterations: 8165"}
{"test_case": 449, "data": "MetropolisHasting 449: robots/10-0-9.pl, test_cost: 13, train_cost: 13, time: 60.002511005, length: 11912, iterations: 67459"}
{"test_case": 450, "data": "MetropolisHasting 450: robots/10-0-10.pl, test_cost: 0, train_cost: 0, time: 0.09377922899999999, length: 303, iterations: 2782"}
{"test_case": 451, "data": "MetropolisHasting 451: robots/10-1-0.pl, test_cost: 0, train_cost: 0, time: 1.2132714930000001, length: 1033, iterations: 11022"}
{"test_case": 452, "data": "MetropolisHasting 452: robots/10-1-1.pl, test_cost: 0, train_cost: 0, time: 0.10983059500000003, length: 490, iterations: 2035"}
{"test_case": 453, "data": "MetropolisHasting 453: robots/10-1-2.pl, test_cost: 0, train_cost: 0, time: 0.8110010430000001, length: 1021, iterations: 7781"}
{"test_case": 454, "data": "MetropolisHasting 454: robots/10-1-3.pl, test_cost: 0, train_cost: 0, time: 0.17489903799999995, length: 493, iterations: 3353"}
{"test_case": 455, "data": "MetropolisHasting 455: robots/10-1-4.pl, test_cost: 0, train_cost: 0, time: 0.21270546200000018, length: 358, iterations: 4124"}
{"test_case": 456, "data": "MetropolisHasting 456: robots/10-1-5.pl, test_cost: 0, train_cost: 0, time: 7.747797430999999, length: 4645, iterations: 22096"}
{"test_case": 457, "data": "MetropolisHasting 457: robots/10-1-6.pl, test_cost: 0, train_cost: 0, time: 0.28719916499999876, length: 130, iterations: 6323"}
{"test_case": 458, "data": "MetropolisHasting 458: robots/10-1-7.pl, test_cost: 0, train_cost: 0, time: 3.3401679570000002, length: 2622, iterations: 14000"}
{"test_case": 459, "data": "MetropolisHasting 459: robots/10-1-8.pl, test_cost: 0, train_cost: 0, time: 0.05572465600000065, length: 277, iterations: 1885"}
{"test_case": 460, "data": "MetropolisHasting 460: robots/10-1-9.pl, test_cost: 0, train_cost: 0, time: 1.46764715, length: 1055, iterations: 13254"}
{"test_case": 461, "data": "MetropolisHasting 461: robots/10-1-10.pl, test_cost: 0, train_cost: 0, time: 0.24993898999999997, length: 685, iterations: 3392"}
{"test_case": 462, "data": "MetropolisHasting 462: robots/10-2-0.pl, test_cost: 0, train_cost: 0, time: 0.11854989900000001, length: 318, iterations: 3128"}
{"test_case": 463, "data": "MetropolisHasting 463: robots/10-2-1.pl, test_cost: 0, train_cost: 0, time: 0.3331498690000001, length: 529, iterations: 5825"}
{"test_case": 464, "data": "MetropolisHasting 464: robots/10-2-2.pl, test_cost: 0, train_cost: 0, time: 0.1597939290000001, length: 299, iterations: 4769"}
{"test_case": 465, "data": "MetropolisHasting 465: robots/10-2-3.pl, test_cost: 0, train_cost: 0, time: 0.16011920800000023, length: 342, iterations: 3379"}
{"test_case": 466, "data": "MetropolisHasting 466: robots/10-2-4.pl, test_cost: 0, train_cost: 0, time: 2.1072344979999995, length: 1855, iterations: 14488"}
{"test_case": 467, "data": "MetropolisHasting 467: robots/10-2-5.pl, test_cost: 0, train_cost: 0, time: 0.018161639000000562, length: 138, iterations: 764"}
{"test_case": 468, "data": "MetropolisHasting 468: robots/10-2-6.pl, test_cost: 0, train_cost: 0, time: 0.06944313300000005, length: 337, iterations: 1975"}
{"test_case": 469, "data": "MetropolisHasting 469: robots/10-2-7.pl, test_cost: 0, train_cost: 0, time: 0.18553713900000002, length: 476, iterations: 3865"}
{"test_case": 470, "data": "MetropolisHasting 470: robots/10-2-8.pl, test_cost: 0, train_cost: 0, time: 0.679900662, length: 1121, iterations: 6481"}
{"test_case": 471, "data": "MetropolisHasting 471: robots/10-2-9.pl, test_cost: 0, train_cost: 0, time: 0.05702980499999999, length: 207, iterations: 2229"}
{"test_case": 472, "data": "MetropolisHasting 472: robots/10-2-10.pl, test_cost: 0, train_cost: 0, time: 0.07969952400000002, length: 160, iterations: 4059"}
{"test_case": 473, "data": "MetropolisHasting 473: robots/10-3-0.pl, test_cost: 0, train_cost: 0, time: 0.1719385229999999, length: 212, iterations: 4410"}
{"test_case": 474, "data": "MetropolisHasting 474: robots/10-3-1.pl, test_cost: 0, train_cost: 0, time: 0.06836151200000007, length: 217, iterations: 2460"}
{"test_case": 475, "data": "MetropolisHasting 475: robots/10-3-2.pl, test_cost: 0, train_cost: 0, time: 0.04446477800000004, length: 206, iterations: 1507"}
{"test_case": 476, "data": "MetropolisHasting 476: robots/10-3-3.pl, test_cost: 0, train_cost: 0, time: 0.3144161780000001, length: 863, iterations: 3821"}
{"test_case": 477, "data": "MetropolisHasting 477: robots/10-3-4.pl, test_cost: 0, train_cost: 0, time: 0.03544193399999984, length: 184, iterations: 1259"}
{"test_case": 478, "data": "MetropolisHasting 478: robots/10-3-5.pl, test_cost: 0, train_cost: 0, time: 0.22263173999999997, length: 414, iterations: 5790"}
{"test_case": 479, "data": "MetropolisHasting 479: robots/10-3-6.pl, test_cost: 0, train_cost: 0, time: 12.081520321, length: 5828, iterations: 26199"}
{"test_case": 480, "data": "MetropolisHasting 480: robots/10-3-7.pl, test_cost: 0, train_cost: 0, time: 3.754717558, length: 2326, iterations: 19183"}
{"test_case": 481, "data": "MetropolisHasting 481: robots/10-3-8.pl, test_cost: 0, train_cost: 0, time: 0.09817925900000013, length: 319, iterations: 2756"}
{"test_case": 482, "data": "MetropolisHasting 482: robots/10-3-9.pl, test_cost: 0, train_cost: 0, time: 0.2208253210000004, length: 431, iterations: 4802"}
{"test_case": 483, "data": "MetropolisHasting 483: robots/10-3-10.pl, test_cost: 0, train_cost: 0, time: 6.555341021, length: 2775, iterations: 28846"}
{"test_case": 484, "data": "MetropolisHasting 484: robots/10-4-0.pl, test_cost: 7, train_cost: 7, time: 60.00153442399999, length: 12037, iterations: 73974"}
{"test_case": 485, "data": "MetropolisHasting 485: robots/10-4-1.pl, test_cost: 0, train_cost: 0, time: 0.036338940999996794, length: 159, iterations: 1871"}
{"test_case": 486, "data": "MetropolisHasting 486: robots/10-4-2.pl, test_cost: 0, train_cost: 0, time: 0.09534559600000136, length: 166, iterations: 4552"}
{"test_case": 487, "data": "MetropolisHasting 487: robots/10-4-3.pl, test_cost: 0, train_cost: 0, time: 0.29329033700000195, length: 575, iterations: 5060"}
{"test_case": 488, "data": "MetropolisHasting 488: robots/10-4-4.pl, test_cost: 0, train_cost: 0, time: 0.4444533120000074, length: 569, iterations: 7048"}
{"test_case": 489, "data": "MetropolisHasting 489: robots/10-4-5.pl, test_cost: 0, train_cost: 0, time: 0.11204796900000247, length: 375, iterations: 2900"}
{"test_case": 490, "data": "MetropolisHasting 490: robots/10-4-6.pl, test_cost: 0, train_cost: 0, time: 1.5110853249999998, length: 1997, iterations: 11451"}
{"test_case": 491, "data": "MetropolisHasting 491: robots/10-4-7.pl, test_cost: 0, train_cost: 0, time: 0.07334087200000017, length: 307, iterations: 2133"}
{"test_case": 492, "data": "MetropolisHasting 492: robots/10-4-8.pl, test_cost: 0, train_cost: 0, time: 0.073782821, length: 333, iterations: 1872"}
{"test_case": 493, "data": "MetropolisHasting 493: robots/10-4-9.pl, test_cost: 0, train_cost: 0, time: 5.200237925000001, length: 3092, iterations: 20526"}
{"test_case": 494, "data": "MetropolisHasting 494: robots/10-4-10.pl, test_cost: 0, train_cost: 0, time: 13.292639680999997, length: 5273, iterations: 36438"}
{"test_case": 495, "data": "MetropolisHasting 495: robots/10-5-0.pl, test_cost: 0, train_cost: 0, time: 0.07559236899999888, length: 314, iterations: 2254"}
{"test_case": 496, "data": "MetropolisHasting 496: robots/10-5-1.pl, test_cost: 0, train_cost: 0, time: 0.09221461399999953, length: 260, iterations: 3143"}
{"test_case": 497, "data": "MetropolisHasting 497: robots/10-5-2.pl, test_cost: 0, train_cost: 0, time: 0.04581702100000129, length: 211, iterations: 1513"}
{"test_case": 498, "data": "MetropolisHasting 498: robots/10-5-3.pl, test_cost: 0, train_cost: 0, time: 0.10028692199999867, length: 308, iterations: 2911"}
{"test_case": 499, "data": "MetropolisHasting 499: robots/10-5-4.pl, test_cost: 0, train_cost: 0, time: 0.026815205999998426, length: 148, iterations: 1153"}
{"test_case": 500, "data": "MetropolisHasting 500: robots/10-5-5.pl, test_cost: 0, train_cost: 0, time: 0.056356197, length: 238, iterations: 1579"}
{"test_case": 501, "data": "MetropolisHasting 501: robots/10-5-6.pl, test_cost: 0, train_cost: 0, time: 1.203284544, length: 1458, iterations: 7964"}
{"test_case": 502, "data": "MetropolisHasting 502: robots/10-5-7.pl, test_cost: 0, train_cost: 0, time: 0.039481740999999904, length: 184, iterations: 1549"}
{"test_case": 503, "data": "MetropolisHasting 503: robots/10-5-8.pl, test_cost: 0, train_cost: 0, time: 0.3575958370000001, length: 831, iterations: 4629"}
{"test_case": 504, "data": "MetropolisHasting 504: robots/10-5-9.pl, test_cost: 0, train_cost: 0, time: 0.25791786800000005, length: 510, iterations: 4963"}
{"test_case": 505, "data": "MetropolisHasting 505: robots/10-5-10.pl, test_cost: 0, train_cost: 0, time: 0.48248239000000015, length: 944, iterations: 6226"}
{"test_case": 506, "data": "MetropolisHasting 506: robots/10-6-0.pl, test_cost: 0, train_cost: 0, time: 0.03783490399999989, length: 172, iterations: 1406"}
{"test_case": 507, "data": "MetropolisHasting 507: robots/10-6-1.pl, test_cost: 0, train_cost: 0, time: 0.02040279399999978, length: 62, iterations: 1213"}
{"test_case": 508, "data": "MetropolisHasting 508: robots/10-6-2.pl, test_cost: 0, train_cost: 0, time: 0.1067951039999997, length: 291, iterations: 3940"}
{"test_case": 509, "data": "MetropolisHasting 509: robots/10-6-3.pl, test_cost: 0, train_cost: 0, time: 0.3815444130000003, length: 777, iterations: 5935"}
{"test_case": 510, "data": "MetropolisHasting 510: robots/10-6-4.pl, test_cost: 0, train_cost: 0, time: 0.795443449, length: 1075, iterations: 8334"}
{"test_case": 511, "data": "MetropolisHasting 511: robots/10-6-5.pl, test_cost: 0, train_cost: 0, time: 0.191719498, length: 679, iterations: 3603"}
{"test_case": 512, "data": "MetropolisHasting 512: robots/10-6-6.pl, test_cost: 0, train_cost: 0, time: 1.768336881, length: 1899, iterations: 14356"}
{"test_case": 513, "data": "MetropolisHasting 513: robots/10-6-7.pl, test_cost: 0, train_cost: 0, time: 0.06993712000000007, length: 255, iterations: 2127"}
{"test_case": 514, "data": "MetropolisHasting 514: robots/10-6-8.pl, test_cost: 0, train_cost: 0, time: 48.241359472999996, length: 9502, iterations: 65166"}
{"test_case": 515, "data": "MetropolisHasting 515: robots/10-6-9.pl, test_cost: 0, train_cost: 0, time: 0.711467196000001, length: 1060, iterations: 7726"}
{"test_case": 516, "data": "MetropolisHasting 516: robots/10-6-10.pl, test_cost: 0, train_cost: 0, time: 0.06589044999999771, length: 337, iterations: 1715"}
{"test_case": 517, "data": "MetropolisHasting 517: robots/10-7-0.pl, test_cost: 0, train_cost: 0, time: 0.17163447800000142, length: 333, iterations: 4174"}
{"test_case": 518, "data": "MetropolisHasting 518: robots/10-7-1.pl, test_cost: 0, train_cost: 0, time: 0.02010376000000491, length: 106, iterations: 1064"}
{"test_case": 519, "data": "MetropolisHasting 519: robots/10-7-2.pl, test_cost: 10, train_cost: 10, time: 60.000434338999995, length: 12367, iterations: 74831"}
{"test_case": 520, "data": "MetropolisHasting 520: robots/10-7-3.pl, test_cost: 0, train_cost: 0, time: 4.286843483, length: 2726, iterations: 19998"}
{"test_case": 521, "data": "MetropolisHasting 521: robots/10-7-4.pl, test_cost: 0, train_cost: 0, time: 1.313257321, length: 1400, iterations: 9735"}
{"test_case": 522, "data": "MetropolisHasting 522: robots/10-7-5.pl, test_cost: 0, train_cost: 0, time: 22.278215128000003, length: 7450, iterations: 37594"}
{"test_case": 523, "data": "MetropolisHasting 523: robots/10-7-6.pl, test_cost: 0, train_cost: 0, time: 2.564504975000002, length: 1833, iterations: 17185"}
{"test_case": 524, "data": "MetropolisHasting 524: robots/10-7-7.pl, test_cost: 0, train_cost: 0, time: 0.04214063299999893, length: 178, iterations: 1834"}
{"test_case": 525, "data": "MetropolisHasting 525: robots/10-7-8.pl, test_cost: 0, train_cost: 0, time: 0.02096029599999838, length: 133, iterations: 967"}
{"test_case": 526, "data": "MetropolisHasting 526: robots/10-7-9.pl, test_cost: 0, train_cost: 0, time: 0.2647034779999977, length: 490, iterations: 4000"}
{"test_case": 527, "data": "MetropolisHasting 527: robots/10-7-10.pl, test_cost: 0, train_cost: 0, time: 0.04174620199999879, length: 211, iterations: 1527"}
{"test_case": 528, "data": "MetropolisHasting 528: robots/10-8-0.pl, test_cost: 0, train_cost: 0, time: 0.026794695999999618, length: 137, iterations: 1177"}
{"test_case": 529, "data": "MetropolisHasting 529: robots/10-8-1.pl, test_cost: 4, train_cost: 4, time: 60.00013793999999, length: 10035, iterations: 70983"}
{"test_case": 350, "data": "MetropolisHasting 350: robots/8-1-9.pl, test_cost: 1, train_cost: 1, time: 60.002058872, length: 10772, iterations: 80363"}
{"test_case": 351, "data": "MetropolisHasting 351: robots/8-1-10.pl, test_cost: 0, train_cost: 0, time: 0.8119996919999934, length: 1265, iterations: 8378"}
{"test_case": 352, "data": "MetropolisHasting 352: robots/8-2-0.pl, test_cost: 0, train_cost: 0, time: 0.10489001500000228, length: 253, iterations: 3173"}
{"test_case": 353, "data": "MetropolisHasting 353: robots/8-2-1.pl, test_cost: 0, train_cost: 0, time: 0.39830556800000494, length: 754, iterations: 5544"}
{"test_case": 354, "data": "MetropolisHasting 354: robots/8-2-2.pl, test_cost: 9, train_cost: 9, time: 60.000618462, length: 11182, iterations: 78436"}
{"test_case": 355, "data": "MetropolisHasting 355: robots/8-2-3.pl, test_cost: 0, train_cost: 0, time: 2.3794641210000123, length: 2423, iterations: 12902"}
{"test_case": 356, "data": "MetropolisHasting 356: robots/8-2-4.pl, test_cost: 0, train_cost: 0, time: 7.035720829999988, length: 3908, iterations: 23705"}
{"test_case": 357, "data": "MetropolisHasting 357: robots/8-2-5.pl, test_cost: 0, train_cost: 0, time: 0.04149841599999604, length: 205, iterations: 1475"}
{"test_case": 358, "data": "MetropolisHasting 358: robots/8-2-6.pl, test_cost: 0, train_cost: 0, time: 0.02894032700001503, length: 85, iterations: 1728"}
{"test_case": 359, "data": "MetropolisHasting 359: robots/8-2-7.pl, test_cost: 0, train_cost: 0, time: 0.11110317300000361, length: 272, iterations: 2933"}
{"test_case": 360, "data": "MetropolisHasting 360: robots/8-2-8.pl, test_cost: 0, train_cost: 0, time: 0.047193322, length: 219, iterations: 1714"}
{"test_case": 361, "data": "MetropolisHasting 361: robots/8-2-9.pl, test_cost: 0, train_cost: 0, time: 0.023594825000000007, length: 128, iterations: 1373"}
{"test_case": 362, "data": "MetropolisHasting 362: robots/8-2-10.pl, test_cost: 0, train_cost: 0, time: 0.007616641999999993, length: 85, iterations: 441"}
{"test_case": 363, "data": "MetropolisHasting 363: robots/8-3-0.pl, test_cost: 0, train_cost: 0, time: 2.096213029, length: 1999, iterations: 12884"}
{"test_case": 364, "data": "MetropolisHasting 364: robots/8-3-1.pl, test_cost: 0, train_cost: 0, time: 0.10414368399999985, length: 406, iterations: 2939"}
{"test_case": 365, "data": "MetropolisHasting 365: robots/8-3-2.pl, test_cost: 0, train_cost: 0, time: 2.2417725839999996, length: 1903, iterations: 14926"}
{"test_case": 366, "data": "MetropolisHasting 366: robots/8-3-3.pl, test_cost: 0, train_cost: 0, time: 0.9327394899999994, length: 1552, iterations: 8445"}
{"test_case": 367, "data": "MetropolisHasting 367: robots/8-3-4.pl, test_cost: 11, train_cost: 11, time: 60.00187296000001, length: 10632, iterations: 79873"}
{"test_case": 368, "data": "MetropolisHasting 368: robots/8-3-5.pl, test_cost: 0, train_cost: 0, time: 0.29034525300001235, length: 543, iterations: 5093"}
{"test_case": 369, "data": "MetropolisHasting 369: robots/8-3-6.pl, test_cost: 0, train_cost: 0, time: 0.22952837900000134, length: 588, iterations: 3942"}
{"test_case": 370, "data": "MetropolisHasting 370: robots/8-3-7.pl, test_cost: 0, train_cost: 0, time: 0.824040269, length: 1402, iterations: 7636"}
{"test_case": 371, "data": "MetropolisHasting 371: robots/8-3-8.pl, test_cost: 0, train_cost: 0, time: 0.004010665999999996, length: 59, iterations: 252"}
{"test_case": 372, "data": "MetropolisHasting 372: robots/8-3-9.pl, test_cost: 0, train_cost: 0, time: 0.32784273900000005, length: 723, iterations: 5217"}
{"test_case": 373, "data": "MetropolisHasting 373: robots/8-3-10.pl, test_cost: 0, train_cost: 0, time: 0.03025311899999994, length: 144, iterations: 1325"}
{"test_case": 374, "data": "MetropolisHasting 374: robots/8-4-0.pl, test_cost: 0, train_cost: 0, time: 1.1802595120000001, length: 1489, iterations: 9584"}
{"test_case": 375, "data": "MetropolisHasting 375: robots/8-4-1.pl, test_cost: 0, train_cost: 0, time: 0.15220893700000016, length: 83, iterations: 4108"}
{"test_case": 376, "data": "MetropolisHasting 376: robots/8-4-2.pl, test_cost: 0, train_cost: 0, time: 0.07444006299999995, length: 186, iterations: 2986"}
{"test_case": 377, "data": "MetropolisHasting 377: robots/8-4-3.pl, test_cost: 0, train_cost: 0, time: 23.947672509, length: 7430, iterations: 44840"}
{"test_case": 378, "data": "MetropolisHasting 378: robots/8-4-4.pl, test_cost: 0, train_cost: 0, time: 0.1444118259999989, length: 380, iterations: 3568"}
{"test_case": 379, "data": "MetropolisHasting 379: robots/8-4-5.pl, test_cost: 0, train_cost: 0, time: 0.021798585999999176, length: 183, iterations: 970"}
{"test_case": 380, "data": "MetropolisHasting 380: robots/8-4-6.pl, test_cost: 0, train_cost: 0, time: 0.866190766, length: 1096, iterations: 9613"}
{"test_case": 381, "data": "MetropolisHasting 381: robots/8-4-7.pl, test_cost: 0, train_cost: 0, time: 0.5314354880000001, length: 543, iterations: 9803"}
{"test_case": 382, "data": "MetropolisHasting 382: robots/8-4-8.pl, test_cost: 0, train_cost: 0, time: 0.017120615999999922, length: 123, iterations: 980"}
{"test_case": 383, "data": "MetropolisHasting 383: robots/8-4-9.pl, test_cost: 0, train_cost: 0, time: 0.04777766100000003, length: 181, iterations: 1982"}
{"test_case": 384, "data": "MetropolisHasting 384: robots/8-4-10.pl, test_cost: 0, train_cost: 0, time: 0.305681925, length: 677, iterations: 4899"}
{"test_case": 385, "data": "MetropolisHasting 385: robots/8-5-0.pl, test_cost: 0, train_cost: 0, time: 0.4729239490000001, length: 813, iterations: 6548"}
{"test_case": 386, "data": "MetropolisHasting 386: robots/8-5-1.pl, test_cost: 0, train_cost: 0, time: 14.272397005000002, length: 4939, iterations: 40401"}
{"test_case": 387, "data": "MetropolisHasting 387: robots/8-5-2.pl, test_cost: 0, train_cost: 0, time: 0.19818038500000057, length: 466, iterations: 4218"}
{"test_case": 388, "data": "MetropolisHasting 388: robots/8-5-3.pl, test_cost: 0, train_cost: 0, time: 0.14912165300000169, length: 520, iterations: 3049"}
{"test_case": 389, "data": "MetropolisHasting 389: robots/8-5-4.pl, test_cost: 0, train_cost: 0, time: 0.0031076930000004666, length: 27, iterations: 233"}
{"test_case": 390, "data": "MetropolisHasting 390: robots/8-5-5.pl, test_cost: 0, train_cost: 0, time: 0.011776848, length: 35, iterations: 769"}
{"test_case": 391, "data": "MetropolisHasting 391: robots/8-5-6.pl, test_cost: 0, train_cost: 0, time: 0.043106932, length: 187, iterations: 1786"}
{"test_case": 392, "data": "MetropolisHasting 392: robots/8-5-7.pl, test_cost: 0, train_cost: 0, time: 0.423721208, length: 725, iterations: 5879"}
{"test_case": 393, "data": "MetropolisHasting 393: robots/8-5-8.pl, test_cost: 0, train_cost: 0, time: 0.013633795000000004, length: 99, iterations: 789"}
{"test_case": 394, "data": "MetropolisHasting 394: robots/8-5-9.pl, test_cost: 0, train_cost: 0, time: 0.03430052599999994, length: 153, iterations: 1580"}
{"test_case": 395, "data": "MetropolisHasting 395: robots/8-5-10.pl, test_cost: 0, train_cost: 0, time: 0.021779944999999912, length: 132, iterations: 995"}
{"test_case": 396, "data": "MetropolisHasting 396: robots/8-6-0.pl, test_cost: 9, train_cost: 9, time: 60.000101657, length: 11143, iterations: 80010"}
{"test_case": 397, "data": "MetropolisHasting 397: robots/8-6-1.pl, test_cost: 0, train_cost: 0, time: 0.563202785999998, length: 1104, iterations: 7411"}
{"test_case": 398, "data": "MetropolisHasting 398: robots/8-6-2.pl, test_cost: 0, train_cost: 0, time: 0.4984676970000024, length: 311, iterations: 8999"}
{"test_case": 399, "data": "MetropolisHasting 399: robots/8-6-3.pl, test_cost: 0, train_cost: 0, time: 0.13770276799999692, length: 410, iterations: 3538"}
{"test_case": 400, "data": "MetropolisHasting 400: robots/8-6-4.pl, test_cost: 0, train_cost: 0, time: 0.018900902, length: 79, iterations: 1323"}
{"test_case": 401, "data": "MetropolisHasting 401: robots/8-6-5.pl, test_cost: 0, train_cost: 0, time: 0.009619628000000002, length: 104, iterations: 540"}
{"test_case": 402, "data": "MetropolisHasting 402: robots/8-6-6.pl, test_cost: 0, train_cost: 0, time: 7.986640912, length: 3390, iterations: 32723"}
{"test_case": 403, "data": "MetropolisHasting 403: robots/8-6-7.pl, test_cost: 0, train_cost: 0, time: 30.626606897000002, length: 7994, iterations: 58319"}
{"test_case": 404, "data": "MetropolisHasting 404: robots/8-6-8.pl, test_cost: 6, train_cost: 6, time: 60.001782231, length: 10566, iterations: 81354"}
{"test_case": 405, "data": "MetropolisHasting 405: robots/8-6-9.pl, test_cost: 0, train_cost: 0, time: 3.142610043999994, length: 2423, iterations: 17862"}
{"test_case": 406, "data": "MetropolisHasting 406: robots/8-6-10.pl, test_cost: 0, train_cost: 0, time: 0.03515807200000154, length: 155, iterations: 1602"}
{"test_case": 407, "data": "MetropolisHasting 407: robots/8-7-0.pl, test_cost: 0, train_cost: 0, time: 0.06334343700000034, length: 175, iterations: 2376"}
{"test_case": 408, "data": "MetropolisHasting 408: robots/8-7-1.pl, test_cost: 0, train_cost: 0, time: 0.5456803550000018, length: 776, iterations: 6938"}
{"test_case": 409, "data": "MetropolisHasting 409: robots/8-7-2.pl, test_cost: 0, train_cost: 0, time: 20.188680694, length: 6889, iterations: 42871"}
{"test_case": 410, "data": "MetropolisHasting 410: robots/8-7-3.pl, test_cost: 0, train_cost: 0, time: 0.071412084, length: 255, iterations: 2522"}
{"test_case": 411, "data": "MetropolisHasting 411: robots/8-7-4.pl, test_cost: 0, train_cost: 0, time: 2.207816603, length: 1660, iterations: 15003"}
{"test_case": 412, "data": "MetropolisHasting 412: robots/8-7-5.pl, test_cost: 0, train_cost: 0, time: 0.011522526999999894, length: 92, iterations: 567"}
{"test_case": 413, "data": "MetropolisHasting 413: robots/8-7-6.pl, test_cost: 0, train_cost: 0, time: 0.025899050000000035, length: 166, iterations: 1253"}
{"test_case": 414, "data": "MetropolisHasting 414: robots/8-7-7.pl, test_cost: 0, train_cost: 0, time: 0.07761339099999987, length: 195, iterations: 3320"}
{"test_case": 415, "data": "MetropolisHasting 415: robots/8-7-8.pl, test_cost: 0, train_cost: 0, time: 0.12730245799999995, length: 272, iterations: 3284"}
{"test_case": 416, "data": "MetropolisHasting 416: robots/8-7-9.pl, test_cost: 0, train_cost: 0, time: 0.08491298900000022, length: 250, iterations: 2905"}
{"test_case": 417, "data": "MetropolisHasting 417: robots/8-7-10.pl, test_cost: 0, train_cost: 0, time: 0.08867324399999976, length: 248, iterations: 2607"}
{"test_case": 418, "data": "MetropolisHasting 418: robots/8-8-0.pl, test_cost: 0, train_cost: 0, time: 0.029691095, length: 140, iterations: 1309"}
{"test_case": 419, "data": "MetropolisHasting 419: robots/8-8-1.pl, test_cost: 0, train_cost: 0, time: 0.043694992999999904, length: 137, iterations: 2162"}
{"test_case": 420, "data": "MetropolisHasting 420: robots/8-8-2.pl, test_cost: 0, train_cost: 0, time: 0.173763986, length: 450, iterations: 3505"}
{"test_case": 421, "data": "MetropolisHasting 421: robots/8-8-3.pl, test_cost: 0, train_cost: 0, time: 3.7143965310000002, length: 2773, iterations: 18192"}
{"test_case": 422, "data": "MetropolisHasting 422: robots/8-8-4.pl, test_cost: 0, train_cost: 0, time: 0.2990827840000003, length: 555, iterations: 5903"}
{"test_case": 423, "data": "MetropolisHasting 423: robots/8-8-5.pl, test_cost: 0, train_cost: 0, time: 0.026914941000000248, length: 107, iterations: 1846"}
{"test_case": 424, "data": "MetropolisHasting 424: robots/8-8-6.pl, test_cost: 0, train_cost: 0, time: 0.5715247049999999, length: 958, iterations: 7076"}
{"test_case": 425, "data": "MetropolisHasting 425: robots/8-8-7.pl, test_cost: 0, train_cost: 0, time: 0.2663036030000008, length: 580, iterations: 4786"}
{"test_case": 426, "data": "MetropolisHasting 426: robots/8-8-8.pl, test_cost: 0, train_cost: 0, time: 0.6264266049999998, length: 876, iterations: 9791"}
{"test_case": 427, "data": "MetropolisHasting 427: robots/8-8-9.pl, test_cost: 0, train_cost: 0, time: 4.970166921, length: 2700, iterations: 23519"}
{"test_case": 428, "data": "MetropolisHasting 428: robots/8-8-10.pl, test_cost: 0, train_cost: 0, time: 0.15014342399999947, length: 210, iterations: 5652"}
{"test_case": 429, "data": "MetropolisHasting 429: robots/8-9-0.pl, test_cost: 0, train_cost: 0, time: 0.07884767100000012, length: 281, iterations: 2492"}
{"test_case": 430, "data": "MetropolisHasting 430: robots/8-9-1.pl, test_cost: 0, train_cost: 0, time: 0.0055374940000000004, length: 28, iterations: 404"}
{"test_case": 431, "data": "MetropolisHasting 431: robots/8-9-2.pl, test_cost: 0, train_cost: 0, time: 0.16998831399999997, length: 468, iterations: 3614"}
{"test_case": 432, "data": "MetropolisHasting 432: robots/8-9-3.pl, test_cost: 0, train_cost: 0, time: 0.027709079999999997, length: 96, iterations: 1251"}
{"test_case": 433, "data": "MetropolisHasting 433: robots/8-9-4.pl, test_cost: 0, train_cost: 0, time: 0.026088683, length: 164, iterations: 1017"}
{"test_case": 434, "data": "MetropolisHasting 434: robots/8-9-5.pl, test_cost: 0, train_cost: 0, time: 0.004210798000000016, length: 56, iterations: 274"}
{"test_case": 435, "data": "MetropolisHasting 435: robots/8-9-6.pl, test_cost: 0, train_cost: 0, time: 0.015352162999999974, length: 93, iterations: 756"}
{"test_case": 436, "data": "MetropolisHasting 436: robots/8-9-7.pl, test_cost: 0, train_cost: 0, time: 0.585841085, length: 907, iterations: 7734"}
{"test_case": 437, "data": "MetropolisHasting 437: robots/8-9-8.pl, test_cost: 0, train_cost: 0, time: 0.06835557999999997, length: 177, iterations: 2331"}
{"test_case": 438, "data": "MetropolisHasting 438: robots/8-9-9.pl, test_cost: 0, train_cost: 0, time: 11.375474195999999, length: 4877, iterations: 34761"}
{"test_case": 439, "data": "MetropolisHasting 439: robots/8-9-10.pl, test_cost: 0, train_cost: 0, time: 0.0752800260000015, length: 296, iterations: 1962"}
{"test_case": 440, "data": "MetropolisHasting 440: robots/10-0-0.pl, test_cost: 0, train_cost: 0, time: 0.0077216559999999995, length: 24, iterations: 577"}
{"test_case": 441, "data": "MetropolisHasting 441: robots/10-0-1.pl, test_cost: 0, train_cost: 0, time: 0.021621177, length: 220, iterations: 696"}
{"test_case": 442, "data": "MetropolisHasting 442: robots/10-0-2.pl, test_cost: 0, train_cost: 0, time: 0.283430419, length: 533, iterations: 4794"}
{"test_case": 443, "data": "MetropolisHasting 443: robots/10-0-3.pl, test_cost: 0, train_cost: 0, time: 0.030903663999999997, length: 161, iterations: 1278"}
{"test_case": 444, "data": "MetropolisHasting 444: robots/10-0-4.pl, test_cost: 0, train_cost: 0, time: 0.012551460999999986, length: 86, iterations: 662"}
{"test_case": 445, "data": "MetropolisHasting 445: robots/10-0-5.pl, test_cost: 0, train_cost: 0, time: 0.00788386200000002, length: 97, iterations: 437"}
{"test_case": 446, "data": "MetropolisHasting 446: robots/10-0-6.pl, test_cost: 0, train_cost: 0, time: 0.237749775, length: 611, iterations: 4281"}
{"test_case": 447, "data": "MetropolisHasting 447: robots/10-0-7.pl, test_cost: 0, train_cost: 0, time: 0.05180314400000008, length: 142, iterations: 2201"}
{"test_case": 448, "data": "MetropolisHasting 448: robots/10-0-8.pl, test_cost: 0, train_cost: 0, time: 1.269374123, length: 1956, iterations: 8909"}
{"test_case": 449, "data": "MetropolisHasting 449: robots/10-0-9.pl, test_cost: 0, train_cost: 0, time: 3.829024467, length: 1949, iterations: 23599"}
{"test_case": 450, "data": "MetropolisHasting 450: robots/10-0-10.pl, test_cost: 0, train_cost: 0, time: 0.10757169400000001, length: 363, iterations: 2563"}
{"test_case": 451, "data": "MetropolisHasting 451: robots/10-1-0.pl, test_cost: 0, train_cost: 0, time: 0.19231115699999998, length: 334, iterations: 4744"}
{"test_case": 452, "data": "MetropolisHasting 452: robots/10-1-1.pl, test_cost: 0, train_cost: 0, time: 0.003110579000000002, length: 60, iterations: 172"}
{"test_case": 453, "data": "MetropolisHasting 453: robots/10-1-2.pl, test_cost: 0, train_cost: 0, time: 0.016694207000000016, length: 78, iterations: 963"}
{"test_case": 454, "data": "MetropolisHasting 454: robots/10-1-3.pl, test_cost: 0, train_cost: 0, time: 21.058682955, length: 5899, iterations: 44962"}
{"test_case": 455, "data": "MetropolisHasting 455: robots/10-1-4.pl, test_cost: 0, train_cost: 0, time: 0.358928370000001, length: 587, iterations: 5998"}
{"test_case": 456, "data": "MetropolisHasting 456: robots/10-1-5.pl, test_cost: 0, train_cost: 0, time: 4.819686033, length: 3989, iterations: 16016"}
{"test_case": 457, "data": "MetropolisHasting 457: robots/10-1-6.pl, test_cost: 0, train_cost: 0, time: 0.48116582100000116, length: 981, iterations: 5323"}
{"test_case": 458, "data": "MetropolisHasting 458: robots/10-1-7.pl, test_cost: 0, train_cost: 0, time: 20.517615902999996, length: 6134, iterations: 43352"}
{"test_case": 459, "data": "MetropolisHasting 459: robots/10-1-8.pl, test_cost: 0, train_cost: 0, time: 0.18707868500000302, length: 475, iterations: 3924"}
{"test_case": 460, "data": "MetropolisHasting 460: robots/10-1-9.pl, test_cost: 0, train_cost: 0, time: 6.70774723, length: 3230, iterations: 28632"}
{"test_case": 461, "data": "MetropolisHasting 461: robots/10-1-10.pl, test_cost: 0, train_cost: 0, time: 0.042347572999999805, length: 264, iterations: 1297"}
{"test_case": 462, "data": "MetropolisHasting 462: robots/10-2-0.pl, test_cost: 0, train_cost: 0, time: 0.6700569009999997, length: 1024, iterations: 7402"}
{"test_case": 463, "data": "MetropolisHasting 463: robots/10-2-1.pl, test_cost: 0, train_cost: 0, time: 0.012466156000000339, length: 82, iterations: 780"}
{"test_case": 464, "data": "MetropolisHasting 464: robots/10-2-2.pl, test_cost: 0, train_cost: 0, time: 0.490551988, length: 1176, iterations: 4958"}
{"test_case": 465, "data": "MetropolisHasting 465: robots/10-2-3.pl, test_cost: 0, train_cost: 0, time: 0.5525651529999989, length: 880, iterations: 7202"}
{"test_case": 466, "data": "MetropolisHasting 466: robots/10-2-4.pl, test_cost: 8, train_cost: 8, time: 60.001763273, length: 12225, iterations: 71139"}
{"test_case": 467, "data": "MetropolisHasting 467: robots/10-2-5.pl, test_cost: 0, train_cost: 0, time: 13.980138111000002, length: 6096, iterations: 33098"}
{"test_case": 468, "data": "MetropolisHasting 468: robots/10-2-6.pl, test_cost: 0, train_cost: 0, time: 0.03817740899999933, length: 198, iterations: 1467"}
{"test_case": 469, "data": "MetropolisHasting 469: robots/10-2-7.pl, test_cost: 0, train_cost: 0, time: 0.08420050000000856, length: 230, iterations: 2505"}
{"test_case": 530, "data": "MetropolisHasting 530: robots/10-8-2.pl, test_cost: 0, train_cost: 0, time: 6.789086493, length: 4352, iterations: 22209"}
{"test_case": 531, "data": "MetropolisHasting 531: robots/10-8-3.pl, test_cost: 0, train_cost: 0, time: 0.27800479799999955, length: 799, iterations: 4136"}
{"test_case": 532, "data": "MetropolisHasting 532: robots/10-8-4.pl, test_cost: 0, train_cost: 0, time: 0.10322529000000014, length: 318, iterations: 2857"}
{"test_case": 533, "data": "MetropolisHasting 533: robots/10-8-5.pl, test_cost: 0, train_cost: 0, time: 0.28007423900000017, length: 518, iterations: 6094"}
{"test_case": 534, "data": "MetropolisHasting 534: robots/10-8-6.pl, test_cost: 4, train_cost: 4, time: 60.00204480699999, length: 12731, iterations: 70800"}
{"test_case": 535, "data": "MetropolisHasting 535: robots/10-8-7.pl, test_cost: 4, train_cost: 4, time: 60.00054751500001, length: 12738, iterations: 72632"}
{"test_case": 536, "data": "MetropolisHasting 536: robots/10-8-8.pl, test_cost: 0, train_cost: 0, time: 1.1951068340000148, length: 1576, iterations: 9283"}
{"test_case": 537, "data": "MetropolisHasting 537: robots/10-8-9.pl, test_cost: 0, train_cost: 0, time: 0.06234561100001201, length: 156, iterations: 3287"}
{"test_case": 538, "data": "MetropolisHasting 538: robots/10-8-10.pl, test_cost: 0, train_cost: 0, time: 4.832461256000016, length: 3360, iterations: 21372"}
{"test_case": 539, "data": "MetropolisHasting 539: robots/10-9-0.pl, test_cost: 0, train_cost: 0, time: 4.9731357, length: 3321, iterations: 22210"}
{"test_case": 540, "data": "MetropolisHasting 540: robots/10-9-1.pl, test_cost: 0, train_cost: 0, time: 40.716670525, length: 8765, iterations: 70754"}
{"test_case": 541, "data": "MetropolisHasting 541: robots/10-9-2.pl, test_cost: 0, train_cost: 0, time: 0.522306485999998, length: 956, iterations: 6942"}
{"test_case": 542, "data": "MetropolisHasting 542: robots/10-9-3.pl, test_cost: 0, train_cost: 0, time: 0.04379345299999926, length: 184, iterations: 1987"}
{"test_case": 543, "data": "MetropolisHasting 543: robots/10-9-4.pl, test_cost: 0, train_cost: 0, time: 0.08006243599999863, length: 255, iterations: 2799"}
{"test_case": 544, "data": "MetropolisHasting 544: robots/10-9-5.pl, test_cost: 0, train_cost: 0, time: 0.06356517200000411, length: 290, iterations: 2534"}
{"test_case": 545, "data": "MetropolisHasting 545: robots/10-9-6.pl, test_cost: 0, train_cost: 0, time: 0.5187559649999969, length: 723, iterations: 7598"}
{"test_case": 546, "data": "MetropolisHasting 546: robots/10-9-7.pl, test_cost: 0, train_cost: 0, time: 1.162375927999996, length: 1166, iterations: 12623"}
{"test_case": 547, "data": "MetropolisHasting 547: robots/10-9-8.pl, test_cost: 0, train_cost: 0, time: 0.8974979520000019, length: 1538, iterations: 7809"}
{"test_case": 548, "data": "MetropolisHasting 548: robots/10-9-9.pl, test_cost: 0, train_cost: 0, time: 1.5883160300000014, length: 1653, iterations: 12060"}
{"test_case": 549, "data": "MetropolisHasting 549: robots/10-9-10.pl, test_cost: 0, train_cost: 0, time: 0.1040265720000022, length: 375, iterations: 2319"}
{"domain": "robot", "params": {"type": "metropolis", "alpha": 1, "add_token_end": 0, "add_token_random": 30, "remove_token_end": 0, "remove_token_random": 30, "add_loop_end": 0, "add_loop_random": 30, "add_if_statement_end": 0, "add_if_statement_random": 30, "start_over": 6}, "files": "([2, 4, 6, 8, 10], range(0, 10), range(0, 11))", "cases_solved": "537 / 550 (97.6%)", "average": {"test_cost": 0.15636363636363634, "train_cost": 0.15636363636363634, "execution_time": 2.5403163178872736, "program_length": 820.8999999999997, "number_of_explored_programs": 6739.127272727269, "number_of_iterations": 6739.127272727269}, "average_correct": {"test_cost": 0.0, "train_cost": 0.0, "execution_time": 1.1492740524208567, "program_length": 570.5214152700187, "number_of_explored_programs": 5056.314711359408, "number_of_iterations": 5056.314711359408}, "average_failed": {"test_cost": 6.615384615384615, "train_cost": 6.615384615384615, "execution_time": 60.00106220676923, "program_length": 11163.461538461537, "number_of_explored_programs": 76252.23076923077, "number_of_iterations": 76252.23076923077}, "variance": {"test_cost": 1.3088392117900312, "train_cost": 1.3088392117900312, "execution_time": 104.84867763405593, "program_length": 4343162.436247723, "number_of_explored_programs": 214715243.81619474, "number_of_iterations": 214715243.81619474}, "variance_correct": {"test_cost": 0.0, "train_cost": 0.0, "execution_time": 25.37359074592156, "program_length": 1762840.9179173962, "number_of_explored_programs": 99293545.39144364, "number_of_iterations": 99293545.39144364}, "variance_failed": {"test_cost": 13.589743589743591, "train_cost": 13.589743589743591, "execution_time": 5.099600513201707e-07, "program_length": 1271474.1025641027, "number_of_explored_programs": 26640872.192307696, "number_of_iterations": 26640872.192307696}, "best_results": {"file": "robots/10-9-10.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.1040265720000022, "program_length": 375, "number_of_explored_programs": 2319, "program": "Program([If(NotAtBottom [MoveUp] [MoveLeft]), LoopWhile(NotAtTop [MoveDown]), If(AtLeft [MoveDown] [MoveDown]), If(AtRight [MoveDown] [MoveDown]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtLeft [MoveUp]), If(NotAtTop [MoveDown] [Drop]), MoveUp, MoveDown, MoveDown, If(NotAtTop [MoveUp] [MoveDown]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtTop [Drop]), MoveRight, LoopWhile(AtBottom [Drop]), MoveDown, If(AtLeft [Grab] [MoveDown]), If(AtTop [Grab] [MoveDown]), LoopWhile(AtLeft [MoveRight]), MoveUp, If(AtRight [MoveDown] [Grab]), MoveUp, LoopWhile(NotAtRight [MoveLeft]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtRight [MoveRight]), If(NotAtTop [MoveUp] [Grab]), MoveLeft, If(AtBottom [MoveUp] [MoveDown]), MoveUp, If(AtLeft [Grab] [MoveUp]), If(NotAtTop [MoveDown] [Grab]), If(NotAtBottom [MoveLeft] [Drop]), MoveRight, MoveLeft, LoopWhile(AtTop [MoveLeft]), MoveLeft, MoveUp, If(AtTop [Drop] [MoveUp]), MoveUp, MoveRight, LoopWhile(AtRight [MoveLeft]), MoveDown, If(NotAtRight [MoveUp] [MoveRight]), LoopWhile(AtLeft [Drop]), MoveLeft, LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [MoveRight]), If(NotAtBottom [MoveRight] [MoveLeft]), If(AtTop [Drop] [MoveLeft]), LoopWhile(AtBottom [MoveDown]), MoveDown, If(AtLeft [Grab] [MoveRight]), MoveDown, MoveLeft, If(NotAtRight [MoveDown] [MoveUp]), If(AtRight [MoveDown] [MoveDown]), MoveDown, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [Drop]), MoveRight, MoveRight, MoveLeft, MoveDown, MoveLeft, MoveUp, LoopWhile(AtTop [Drop]), LoopWhile(AtTop [MoveDown]), If(NotAtLeft [MoveLeft] [MoveRight]), If(NotAtRight [MoveLeft] [MoveRight]), If(AtRight [Drop] [MoveUp]), LoopWhile(AtRight [Grab]), MoveRight, LoopWhile(AtTop [MoveDown]), MoveDown, If(AtRight [MoveRight] [MoveRight]), If(NotAtBottom [MoveRight] [MoveDown]), If(AtBottom [Drop] [MoveUp]), LoopWhile(AtLeft [MoveUp]), MoveRight, LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtLeft [MoveRight]), If(AtLeft [MoveUp] [MoveUp]), LoopWhile(AtBottom [Drop]), MoveUp, MoveUp, LoopWhile(AtRight [Drop]), MoveUp, If(NotAtTop [MoveUp] [MoveRight]), If(AtLeft [MoveUp] [MoveDown]), MoveRight, If(NotAtLeft [MoveRight] [MoveDown]), LoopWhile(NotAtRight [MoveLeft]), LoopWhile(NotAtBottom [MoveDown]), If(AtTop [MoveUp] [Grab]), MoveLeft, LoopWhile(AtLeft [MoveUp]), If(AtBottom [MoveLeft] [MoveLeft]), If(AtRight [Drop] [MoveRight]), MoveLeft, If(AtTop [Drop] [MoveLeft]), If(AtBottom [MoveRight] [Drop]), If(NotAtBottom [MoveDown] [MoveRight]), LoopWhile(AtTop [Grab]), MoveLeft, MoveUp, MoveRight, LoopWhile(AtLeft [MoveDown]), MoveUp, MoveLeft, MoveLeft, If(NotAtLeft [MoveUp] [MoveRight]), MoveUp, LoopWhile(AtBottom [Grab]), MoveLeft, MoveUp, LoopWhile(AtTop [MoveRight]), LoopWhile(AtBottom [MoveRight]), MoveLeft, LoopWhile(NotAtRight [MoveRight]), MoveUp, MoveLeft, MoveRight, LoopWhile(AtTop [Grab]), MoveLeft, LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtTop [MoveRight]), If(AtLeft [MoveRight] [MoveUp]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [MoveUp]), MoveDown, LoopWhile(AtBottom [Grab]), If(AtRight [Grab] [MoveLeft]), If(NotAtRight [MoveUp] [MoveLeft]), MoveUp, MoveLeft, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [MoveLeft]), If(AtRight [MoveLeft] [MoveDown]), If(NotAtLeft [MoveDown] [MoveRight]), MoveLeft, MoveDown, LoopWhile(AtBottom [Drop]), If(NotAtTop [MoveRight] [Grab]), LoopWhile(AtRight [MoveLeft]), If(AtLeft [MoveLeft] [MoveDown]), If(NotAtTop [MoveUp] [Drop]), LoopWhile(AtTop [MoveUp]), If(NotAtTop [MoveUp] [MoveRight]), MoveRight, LoopWhile(AtLeft [MoveLeft]), MoveLeft, MoveDown, LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [MoveLeft]), If(NotAtTop [MoveLeft] [Drop]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [MoveRight]), If(AtLeft [Drop] [MoveLeft]), LoopWhile(AtTop [Grab]), LoopWhile(AtTop [Grab]), MoveLeft, LoopWhile(AtRight [Drop]), LoopWhile(AtRight [MoveUp]), If(NotAtBottom [Drop] [MoveDown]), MoveRight, MoveLeft, If(AtBottom [Drop] [MoveUp]), If(AtBottom [Drop] [MoveRight]), MoveUp, MoveRight, If(NotAtRight [MoveDown] [MoveDown]), If(NotAtTop [MoveUp] [MoveLeft]), LoopWhile(AtRight [Grab]), If(AtLeft [MoveUp] [MoveLeft]), If(AtLeft [Drop] [MoveLeft]), If(AtBottom [MoveLeft] [MoveLeft]), If(AtRight [MoveUp] [MoveDown]), MoveUp, LoopWhile(AtBottom [MoveDown]), LoopWhile(NotAtBottom [MoveDown]), MoveLeft, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [MoveUp]), MoveUp, LoopWhile(AtBottom [Drop]), MoveUp, MoveRight, If(NotAtLeft [MoveDown] [Grab]), If(AtTop [MoveRight] [MoveLeft])])", "cost_per_iteration": [[1, 27], [3, 26], [6, 25], [8, 26], [15, 25], [22, 26], [29, 25], [31, 26], [36, 25], [46, 26], [49, 25], [50, 24], [51, 25], [56, 24], [61, 25], [62, 24], [67, 23], [70, 24], [71, 25], [72, 24], [73, 23], [75, 24], [83, 25], [96, 26], [100, 25], [108, 27], [110, 26], [111, 25], [114, 26], [116, 25], [118, 26], [120, 25], [126, 24], [136, 25], [137, 26], [138, 25], [140, 26], [141, 27], [143, 26], [157, 27], [165, 26], [166, 27], [171, 26], [172, 27], [173, 26], [177, 27], [180, 26], [182, 27], [183, 26], [193, 27], [195, 28], [196, 27], [197, 19], [203, 20], [215, 19], [222, 16], [248, 17], [261, 16], [342, 15], [355, 14], [364, 13], [365, 12], [375, 11], [378, 12], [389, 11], [392, 10], [397, 11], [400, 10], [402, 11], [404, 10], [405, 11], [409, 10], [413, 11], [415, 10], [417, 11], [429, 10], [431, 9], [433, 10], [435, 9], [437, 8], [438, 7], [440, 8], [444, 7], [455, 8], [462, 7], [468, 8], [477, 7], [478, 8], [481, 9], [487, 10], [492, 9], [493, 8], [495, 9], [496, 8], [497, 9], [502, 8], [506, 9], [516, 8], [524, 7], [541, 5], [546, 7], [547, 8], [550, 7], [553, 5], [624, 7], [626, 8], [627, 9], [635, 10], [641, 9], [645, 10], [646, 9], [662, 10], [670, 9], [680, 8], [682, 9], [684, 10], [685, 9], [687, 10], [691, 11], [695, 10], [697, 11], [699, 10], [704, 9], [717, 8], [722, 7], [723, 5], [759, 7], [761, 8], [773, 9], [774, 8], [783, 7], [790, 8], [795, 9], [802, 8], [808, 7], [832, 5], [900, 7], [904, 8], [905, 7], [916, 5], [931, 4], [1143, 3], [1151, 2], [1246, 3], [1267, 4], [1310, 3], [1421, 4], [1506, 3], [1521, 2], [1545, 1], [1589, 2], [1596, 3], [1601, 4], [1617, 3], [1654, 2], [1658, 3], [1680, 2], [1732, 3], [1739, 4], [1740, 3], [1768, 2], [1853, 3], [1859, 2], [2013, 3], [2041, 4], [2048, 5], [2051, 4], [2079, 3], [2095, 2], [2118, 3], [2119, 2], [2160, 3], [2184, 2], [2255, 1], [2319, 0]], "number_of_iterations": 2319}}
{"test_case": 470, "data": "MetropolisHasting 470: robots/10-2-8.pl, test_cost: 0, train_cost: 0, time: 0.136002582, length: 458, iterations: 2874"}
{"test_case": 471, "data": "MetropolisHasting 471: robots/10-2-9.pl, test_cost: 0, train_cost: 0, time: 0.06089250500000001, length: 264, iterations: 2200"}
{"test_case": 472, "data": "MetropolisHasting 472: robots/10-2-10.pl, test_cost: 0, train_cost: 0, time: 2.4367378769999997, length: 2190, iterations: 13033"}
{"test_case": 473, "data": "MetropolisHasting 473: robots/10-3-0.pl, test_cost: 0, train_cost: 0, time: 0.119364939, length: 362, iterations: 4021"}
{"test_case": 474, "data": "MetropolisHasting 474: robots/10-3-1.pl, test_cost: 0, train_cost: 0, time: 0.07109086999999992, length: 212, iterations: 2713"}
{"test_case": 475, "data": "MetropolisHasting 475: robots/10-3-2.pl, test_cost: 8, train_cost: 8, time: 60.000239222999994, length: 11788, iterations: 66473"}
{"test_case": 476, "data": "MetropolisHasting 476: robots/10-3-3.pl, test_cost: 7, train_cost: 7, time: 60.001113527, length: 10169, iterations: 78403"}
{"test_case": 477, "data": "MetropolisHasting 477: robots/10-3-4.pl, test_cost: 0, train_cost: 0, time: 0.07365819999999701, length: 282, iterations: 2589"}
{"test_case": 478, "data": "MetropolisHasting 478: robots/10-3-5.pl, test_cost: 0, train_cost: 0, time: 0.18172968500000763, length: 425, iterations: 5116"}
{"test_case": 479, "data": "MetropolisHasting 479: robots/10-3-6.pl, test_cost: 19, train_cost: 19, time: 60.00087265900001, length: 12689, iterations: 69846"}
{"test_case": 480, "data": "MetropolisHasting 480: robots/10-3-7.pl, test_cost: 0, train_cost: 0, time: 0.18046469399999998, length: 505, iterations: 3499"}
{"test_case": 481, "data": "MetropolisHasting 481: robots/10-3-8.pl, test_cost: 0, train_cost: 0, time: 0.05563416199999999, length: 190, iterations: 1985"}
{"test_case": 482, "data": "MetropolisHasting 482: robots/10-3-9.pl, test_cost: 0, train_cost: 0, time: 0.01781202300000001, length: 82, iterations: 1103"}
{"test_case": 483, "data": "MetropolisHasting 483: robots/10-3-10.pl, test_cost: 0, train_cost: 0, time: 0.08238874000000002, length: 292, iterations: 2358"}
{"test_case": 484, "data": "MetropolisHasting 484: robots/10-4-0.pl, test_cost: 0, train_cost: 0, time: 4.378648182, length: 3211, iterations: 18691"}
{"test_case": 485, "data": "MetropolisHasting 485: robots/10-4-1.pl, test_cost: 0, train_cost: 0, time: 0.6897745190000002, length: 1066, iterations: 7272"}
{"test_case": 486, "data": "MetropolisHasting 486: robots/10-4-2.pl, test_cost: 0, train_cost: 0, time: 0.323392224, length: 570, iterations: 5732"}
{"test_case": 487, "data": "MetropolisHasting 487: robots/10-4-3.pl, test_cost: 0, train_cost: 0, time: 2.9696093019999994, length: 1884, iterations: 19412"}
{"test_case": 488, "data": "MetropolisHasting 488: robots/10-4-4.pl, test_cost: 0, train_cost: 0, time: 0.016955422000000553, length: 117, iterations: 766"}
{"test_case": 489, "data": "MetropolisHasting 489: robots/10-4-5.pl, test_cost: 0, train_cost: 0, time: 52.66612986, length: 11307, iterations: 66076"}
{"test_case": 490, "data": "MetropolisHasting 490: robots/10-4-6.pl, test_cost: 0, train_cost: 0, time: 0.193036405, length: 382, iterations: 4178"}
{"test_case": 491, "data": "MetropolisHasting 491: robots/10-4-7.pl, test_cost: 7, train_cost: 7, time: 60.000584067, length: 12819, iterations: 64028"}
{"test_case": 492, "data": "MetropolisHasting 492: robots/10-4-8.pl, test_cost: 0, train_cost: 0, time: 0.3312672829999954, length: 648, iterations: 5579"}
{"test_case": 493, "data": "MetropolisHasting 493: robots/10-4-9.pl, test_cost: 0, train_cost: 0, time: 0.42429361599999993, length: 954, iterations: 4651"}
{"test_case": 494, "data": "MetropolisHasting 494: robots/10-4-10.pl, test_cost: 0, train_cost: 0, time: 29.451610701, length: 7344, iterations: 52474"}
{"test_case": 495, "data": "MetropolisHasting 495: robots/10-5-0.pl, test_cost: 0, train_cost: 0, time: 1.2690091260000003, length: 1363, iterations: 11769"}
{"test_case": 496, "data": "MetropolisHasting 496: robots/10-5-1.pl, test_cost: 0, train_cost: 0, time: 0.04745510700000466, length: 66, iterations: 1768"}
{"test_case": 497, "data": "MetropolisHasting 497: robots/10-5-2.pl, test_cost: 0, train_cost: 0, time: 0.1337784400000004, length: 460, iterations: 3231"}
{"test_case": 498, "data": "MetropolisHasting 498: robots/10-5-3.pl, test_cost: 0, train_cost: 0, time: 0.1105204050000026, length: 336, iterations: 3477"}
{"test_case": 499, "data": "MetropolisHasting 499: robots/10-5-4.pl, test_cost: 0, train_cost: 0, time: 0.7033596630000005, length: 871, iterations: 8744"}
{"test_case": 500, "data": "MetropolisHasting 500: robots/10-5-5.pl, test_cost: 0, train_cost: 0, time: 0.690041771, length: 1231, iterations: 6277"}
{"test_case": 501, "data": "MetropolisHasting 501: robots/10-5-6.pl, test_cost: 0, train_cost: 0, time: 0.21673556900000002, length: 118, iterations: 4254"}
{"test_case": 502, "data": "MetropolisHasting 502: robots/10-5-7.pl, test_cost: 0, train_cost: 0, time: 0.06743659200000007, length: 203, iterations: 2361"}
{"test_case": 503, "data": "MetropolisHasting 503: robots/10-5-8.pl, test_cost: 0, train_cost: 0, time: 0.6153350989999999, length: 1194, iterations: 5853"}
{"test_case": 504, "data": "MetropolisHasting 504: robots/10-5-9.pl, test_cost: 0, train_cost: 0, time: 5.004214349, length: 3823, iterations: 17123"}
{"test_case": 505, "data": "MetropolisHasting 505: robots/10-5-10.pl, test_cost: 0, train_cost: 0, time: 0.28589413799999974, length: 547, iterations: 4708"}
{"test_case": 506, "data": "MetropolisHasting 506: robots/10-6-0.pl, test_cost: 0, train_cost: 0, time: 8.543842493, length: 5243, iterations: 23326"}
{"test_case": 507, "data": "MetropolisHasting 507: robots/10-6-1.pl, test_cost: 0, train_cost: 0, time: 0.03543373399999972, length: 160, iterations: 1826"}
{"test_case": 508, "data": "MetropolisHasting 508: robots/10-6-2.pl, test_cost: 0, train_cost: 0, time: 0.1789159050000002, length: 109, iterations: 5263"}
{"test_case": 509, "data": "MetropolisHasting 509: robots/10-6-3.pl, test_cost: 0, train_cost: 0, time: 0.10384423600000048, length: 326, iterations: 2785"}
{"test_case": 510, "data": "MetropolisHasting 510: robots/10-6-4.pl, test_cost: 5, train_cost: 5, time: 60.001352171, length: 11828, iterations: 71605"}
{"test_case": 511, "data": "MetropolisHasting 511: robots/10-6-5.pl, test_cost: 0, train_cost: 0, time: 0.16984459700000087, length: 38, iterations: 5136"}
{"test_case": 512, "data": "MetropolisHasting 512: robots/10-6-6.pl, test_cost: 0, train_cost: 0, time: 0.19803823400000198, length: 489, iterations: 4234"}
{"test_case": 513, "data": "MetropolisHasting 513: robots/10-6-7.pl, test_cost: 0, train_cost: 0, time: 0.33236560799999637, length: 610, iterations: 5420"}
{"test_case": 514, "data": "MetropolisHasting 514: robots/10-6-8.pl, test_cost: 6, train_cost: 6, time: 60.002089664, length: 10360, iterations: 80622"}
{"test_case": 515, "data": "MetropolisHasting 515: robots/10-6-9.pl, test_cost: 0, train_cost: 0, time: 1.9905563979999954, length: 2043, iterations: 11636"}
{"test_case": 516, "data": "MetropolisHasting 516: robots/10-6-10.pl, test_cost: 0, train_cost: 0, time: 0.15014314799999795, length: 428, iterations: 3374"}
{"test_case": 517, "data": "MetropolisHasting 517: robots/10-7-0.pl, test_cost: 0, train_cost: 0, time: 0.5012668840000032, length: 679, iterations: 8692"}
{"test_case": 518, "data": "MetropolisHasting 518: robots/10-7-1.pl, test_cost: 0, train_cost: 0, time: 0.01411117899999681, length: 114, iterations: 793"}
{"test_case": 519, "data": "MetropolisHasting 519: robots/10-7-2.pl, test_cost: 0, train_cost: 0, time: 13.73737798000002, length: 5980, iterations: 33132"}
{"test_case": 520, "data": "MetropolisHasting 520: robots/10-7-3.pl, test_cost: 0, train_cost: 0, time: 0.099676207, length: 277, iterations: 3139"}
{"test_case": 521, "data": "MetropolisHasting 521: robots/10-7-4.pl, test_cost: 0, train_cost: 0, time: 1.174545097, length: 1102, iterations: 10965"}
{"test_case": 522, "data": "MetropolisHasting 522: robots/10-7-5.pl, test_cost: 0, train_cost: 0, time: 0.06851354500000006, length: 291, iterations: 1746"}
{"test_case": 523, "data": "MetropolisHasting 523: robots/10-7-6.pl, test_cost: 0, train_cost: 0, time: 15.524871894999999, length: 6323, iterations: 35386"}
{"test_case": 524, "data": "MetropolisHasting 524: robots/10-7-7.pl, test_cost: 0, train_cost: 0, time: 8.377115451000002, length: 332, iterations: 26250"}
{"test_case": 525, "data": "MetropolisHasting 525: robots/10-7-8.pl, test_cost: 0, train_cost: 0, time: 0.07390902599999905, length: 296, iterations: 2238"}
{"test_case": 526, "data": "MetropolisHasting 526: robots/10-7-9.pl, test_cost: 0, train_cost: 0, time: 0.1703845219999991, length: 401, iterations: 4463"}
{"test_case": 527, "data": "MetropolisHasting 527: robots/10-7-10.pl, test_cost: 0, train_cost: 0, time: 0.19967821199999847, length: 703, iterations: 3219"}
{"test_case": 528, "data": "MetropolisHasting 528: robots/10-8-0.pl, test_cost: 0, train_cost: 0, time: 0.23259514599999775, length: 460, iterations: 4770"}
{"test_case": 529, "data": "MetropolisHasting 529: robots/10-8-1.pl, test_cost: 0, train_cost: 0, time: 0.5103746119999997, length: 730, iterations: 6961"}
{"test_case": 530, "data": "MetropolisHasting 530: robots/10-8-2.pl, test_cost: 0, train_cost: 0, time: 11.236577853999998, length: 4542, iterations: 30904"}
{"test_case": 531, "data": "MetropolisHasting 531: robots/10-8-3.pl, test_cost: 0, train_cost: 0, time: 2.4804265700000006, length: 2463, iterations: 11967"}
{"test_case": 532, "data": "MetropolisHasting 532: robots/10-8-4.pl, test_cost: 0, train_cost: 0, time: 0.019223603000000367, length: 141, iterations: 872"}
{"test_case": 533, "data": "MetropolisHasting 533: robots/10-8-5.pl, test_cost: 0, train_cost: 0, time: 0.009575121999999325, length: 57, iterations: 636"}
{"test_case": 534, "data": "MetropolisHasting 534: robots/10-8-6.pl, test_cost: 0, train_cost: 0, time: 0.19047501900000086, length: 582, iterations: 3731"}
{"test_case": 535, "data": "MetropolisHasting 535: robots/10-8-7.pl, test_cost: 0, train_cost: 0, time: 2.092946436, length: 1662, iterations: 14859"}
{"test_case": 536, "data": "MetropolisHasting 536: robots/10-8-8.pl, test_cost: 0, train_cost: 0, time: 0.07609310500000177, length: 304, iterations: 1940"}
{"test_case": 537, "data": "MetropolisHasting 537: robots/10-8-9.pl, test_cost: 0, train_cost: 0, time: 0.2729550879999998, length: 194, iterations: 6405"}
{"test_case": 538, "data": "MetropolisHasting 538: robots/10-8-10.pl, test_cost: 0, train_cost: 0, time: 0.1795965939999995, length: 411, iterations: 4372"}
{"test_case": 539, "data": "MetropolisHasting 539: robots/10-9-0.pl, test_cost: 0, train_cost: 0, time: 0.4918500150000007, length: 864, iterations: 6221"}
{"test_case": 540, "data": "MetropolisHasting 540: robots/10-9-1.pl, test_cost: 6, train_cost: 6, time: 60.000884346, length: 12158, iterations: 72027"}
{"test_case": 541, "data": "MetropolisHasting 541: robots/10-9-2.pl, test_cost: 0, train_cost: 0, time: 0.050637641999998095, length: 47, iterations: 3939"}
{"test_case": 542, "data": "MetropolisHasting 542: robots/10-9-3.pl, test_cost: 0, train_cost: 0, time: 0.038152905999993436, length: 161, iterations: 1866"}
{"test_case": 543, "data": "MetropolisHasting 543: robots/10-9-4.pl, test_cost: 0, train_cost: 0, time: 0.11925656500000059, length: 279, iterations: 3842"}
{"test_case": 544, "data": "MetropolisHasting 544: robots/10-9-5.pl, test_cost: 0, train_cost: 0, time: 0.07704114799999928, length: 386, iterations: 1840"}
{"test_case": 545, "data": "MetropolisHasting 545: robots/10-9-6.pl, test_cost: 0, train_cost: 0, time: 1.5399191540000032, length: 1860, iterations: 11333"}
{"test_case": 546, "data": "MetropolisHasting 546: robots/10-9-7.pl, test_cost: 0, train_cost: 0, time: 0.0589658170000007, length: 292, iterations: 1602"}
{"test_case": 547, "data": "MetropolisHasting 547: robots/10-9-8.pl, test_cost: 0, train_cost: 0, time: 2.3653543699999915, length: 2335, iterations: 12839"}
{"test_case": 548, "data": "MetropolisHasting 548: robots/10-9-9.pl, test_cost: 0, train_cost: 0, time: 0.157595563000001, length: 455, iterations: 3398"}
{"test_case": 549, "data": "MetropolisHasting 549: robots/10-9-10.pl, test_cost: 0, train_cost: 0, time: 18.473472032000004, length: 6704, iterations: 40008"}
{"domain": "robot", "params": {"type": "metropolis", "alpha": 1, "add_token_end": 0, "add_token_random": 30, "remove_token_end": 0, "remove_token_random": 30, "add_loop_end": 0, "add_loop_random": 30, "add_if_statement_end": 0, "add_if_statement_random": 30, "start_over": 6}, "files": "([2, 4, 6, 8, 10], range(0, 10), range(0, 11))", "cases_solved": "534 / 550 (97.1%)", "average": {"test_cost": 0.20363636363636367, "train_cost": 0.20363636363636367, "execution_time": 2.6492474082163646, "program_length": 839.4072727272734, "number_of_explored_programs": 6554.825454545452, "number_of_iterations": 6554.825454545452}, "average_correct": {"test_cost": 0.0, "train_cost": 0.0, "execution_time": 0.9308397443295885, "program_length": 532.1985018726593, "number_of_explored_programs": 4434.059925093631, "number_of_iterations": 4434.059925093631}, "average_failed": {"test_cost": 7.0, "train_cost": 7.0, "execution_time": 60.001103190437505, "program_length": 11092.5, "number_of_explored_programs": 77335.375, "number_of_iterations": 77335.375}, "variance": {"test_cost": 1.8491670806424902, "train_cost": 1.8491670806424902, "execution_time": 113.72433974117713, "program_length": 4683942.110693824, "number_of_explored_programs": 221106224.8802252, "number_of_iterations": 221106224.8802252}, "variance_correct": {"test_cost": 0.0, "train_cost": 0.0, "execution_time": 15.44096590644596, "program_length": 1521585.2400727982, "number_of_explored_programs": 68961411.95512645, "number_of_iterations": 68961411.95512645}, "variance_failed": {"test_cost": 16.933333333333334, "train_cost": 16.933333333333334, "execution_time": 4.604465995052207e-07, "program_length": 1871151.8666666667, "number_of_explored_programs": 138064172.65, "number_of_iterations": 138064172.65}, "best_results": {"file": "robots/10-9-10.pl", "test_cost": 0, "train_cost": 0, "execution_time": 18.473472032000004, "program_length": 6704, "number_of_explored_programs": 40008, "program": "Program([If(AtTop [MoveLeft] [MoveLeft]), If(AtLeft [MoveLeft] [MoveDown]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [Grab]), MoveUp, MoveLeft, LoopWhile(AtTop [Grab]), LoopWhile(AtBottom [MoveDown]), If(AtLeft [MoveDown] [MoveLeft]), MoveUp, If(AtBottom [Grab] [MoveDown]), MoveRight, MoveLeft, MoveDown, LoopWhile(AtBottom [Grab]), If(NotAtTop [MoveRight] [MoveUp]), MoveLeft, MoveRight, MoveLeft, LoopWhile(AtLeft [MoveLeft]), If(NotAtLeft [MoveLeft] [MoveDown]), MoveUp, If(NotAtBottom [MoveLeft] [MoveDown]), LoopWhile(AtLeft [Grab]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [MoveLeft]), MoveLeft, LoopWhile(AtTop [Drop]), If(NotAtRight [MoveLeft] [Grab]), If(AtTop [Grab] [MoveDown]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [MoveRight]), If(NotAtRight [MoveDown] [MoveLeft]), If(NotAtLeft [MoveDown] [Grab]), If(NotAtLeft [MoveUp] [MoveLeft]), LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [MoveLeft]), If(AtBottom [Grab] [MoveRight]), If(AtBottom [Drop] [MoveRight]), If(NotAtBottom [MoveDown] [MoveLeft]), LoopWhile(AtRight [Grab]), MoveDown, If(NotAtTop [MoveUp] [MoveUp]), LoopWhile(AtTop [MoveRight]), If(NotAtBottom [MoveLeft] [Drop]), LoopWhile(AtRight [Grab]), MoveRight, LoopWhile(AtRight [MoveRight]), If(AtBottom [MoveLeft] [MoveDown]), MoveLeft, LoopWhile(AtTop [MoveDown]), MoveRight, MoveLeft, If(AtRight [Drop] [MoveRight]), MoveUp, If(AtBottom [MoveLeft] [MoveRight]), LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [Drop]), LoopWhile(AtBottom [MoveUp]), MoveDown, LoopWhile(AtLeft [MoveRight]), If(AtRight [MoveLeft] [MoveDown]), LoopWhile(AtTop [MoveRight]), If(AtLeft [MoveUp] [MoveLeft]), If(AtTop [MoveUp] [MoveDown]), If(AtRight [Grab] [MoveUp]), LoopWhile(AtBottom [Grab]), If(AtRight [Drop] [MoveLeft]), LoopWhile(AtBottom [Grab]), LoopWhile(AtTop [MoveLeft]), If(AtRight [MoveDown] [MoveUp]), If(AtTop [MoveRight] [MoveUp]), If(NotAtLeft [MoveLeft] [MoveDown]), MoveUp, If(AtBottom [MoveUp] [MoveUp]), MoveDown, MoveDown, If(AtLeft [MoveLeft] [MoveDown]), LoopWhile(AtRight [MoveUp]), MoveDown, MoveUp, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveRight]), If(NotAtTop [MoveUp] [MoveRight]), MoveDown, If(NotAtTop [MoveRight] [MoveRight]), LoopWhile(AtBottom [MoveDown]), If(NotAtRight [MoveDown] [MoveUp]), LoopWhile(AtBottom [MoveRight]), MoveDown, If(NotAtLeft [MoveLeft] [Grab]), If(NotAtRight [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveUp]), If(AtRight [Grab] [MoveUp]), If(NotAtRight [MoveDown] [Grab]), If(NotAtLeft [MoveDown] [MoveLeft]), If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtRight [Grab]), MoveUp, If(NotAtBottom [MoveUp] [Drop]), If(AtBottom [Drop] [MoveDown]), If(NotAtTop [MoveRight] [MoveRight]), LoopWhile(AtLeft [MoveDown]), If(NotAtTop [MoveDown] [MoveLeft]), If(NotAtRight [MoveDown] [MoveUp]), If(AtTop [Grab] [MoveRight]), If(AtRight [Drop] [MoveLeft]), MoveUp, If(AtTop [Drop] [MoveUp]), MoveUp, LoopWhile(AtLeft [Grab]), MoveDown, If(AtRight [MoveUp] [MoveRight]), If(AtTop [MoveDown] [MoveUp]), MoveUp, If(AtLeft [Grab] [MoveUp]), MoveUp, If(NotAtLeft [MoveLeft] [MoveUp]), If(AtBottom [MoveRight] [MoveRight]), MoveDown, LoopWhile(AtBottom [Drop]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [Grab]), If(AtBottom [Grab] [MoveLeft]), MoveRight, LoopWhile(AtRight [Drop]), LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [MoveRight]), MoveDown, LoopWhile(AtLeft [MoveRight]), MoveRight, MoveRight, MoveLeft, If(AtRight [Drop] [MoveDown]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveLeft]), If(AtTop [Drop] [MoveUp]), MoveDown, MoveRight, MoveLeft, LoopWhile(AtRight [MoveRight]), If(AtLeft [MoveRight] [MoveUp]), If(NotAtLeft [MoveDown] [MoveRight]), If(NotAtRight [MoveUp] [MoveUp]), If(NotAtBottom [MoveDown] [Drop]), If(NotAtRight [MoveRight] [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), If(AtBottom [MoveLeft] [MoveUp]), MoveRight, MoveUp, LoopWhile(AtTop [MoveRight]), If(NotAtRight [MoveLeft] [Grab]), If(AtRight [MoveDown] [MoveDown]), If(AtRight [MoveRight] [MoveUp]), MoveDown, If(AtRight [Grab] [MoveUp]), MoveLeft, MoveUp, LoopWhile(AtLeft [Drop]), LoopWhile(AtTop [MoveRight]), MoveRight, MoveLeft, If(AtLeft [Drop] [MoveDown]), If(NotAtRight [MoveLeft] [MoveDown]), LoopWhile(AtLeft [Drop]), MoveDown, MoveUp, MoveUp, LoopWhile(AtBottom [MoveLeft]), If(AtBottom [MoveLeft] [MoveLeft]), MoveRight, MoveUp, If(AtBottom [MoveLeft] [MoveDown]), If(NotAtLeft [MoveDown] [Drop]), MoveDown, LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [Grab]), If(AtRight [MoveUp] [MoveLeft]), LoopWhile(AtBottom [MoveUp]), MoveRight, MoveUp, MoveUp, MoveUp, MoveUp, LoopWhile(AtRight [MoveRight]), MoveDown, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtRight [MoveLeft]), If(NotAtBottom [MoveDown] [MoveLeft]), If(AtLeft [Drop] [MoveUp]), LoopWhile(AtRight [Drop]), LoopWhile(AtTop [MoveRight]), If(NotAtTop [MoveUp] [MoveLeft]), If(AtLeft [MoveRight] [MoveLeft]), MoveRight, MoveRight, If(AtLeft [MoveRight] [MoveDown]), MoveDown, MoveUp, MoveUp, If(AtBottom [Grab] [MoveUp]), MoveDown, MoveLeft, LoopWhile(AtTop [Drop]), MoveDown, LoopWhile(AtTop [Grab]), MoveUp, LoopWhile(AtRight [MoveRight]), If(AtBottom [MoveDown] [MoveDown]), MoveRight, If(NotAtLeft [MoveRight] [MoveRight]), MoveUp, MoveDown, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtTop [Grab]), MoveDown, MoveRight, MoveDown, LoopWhile(NotAtTop [MoveUp]), MoveLeft, LoopWhile(NotAtTop [MoveUp]), LoopWhile(AtLeft [MoveRight]), MoveLeft, LoopWhile(AtBottom [Grab]), If(AtRight [Grab] [MoveLeft]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [MoveDown]), MoveDown, MoveDown, If(AtBottom [MoveDown] [MoveDown]), MoveDown, LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtLeft [Drop]), MoveLeft, MoveLeft, MoveRight, MoveUp, LoopWhile(AtLeft [Grab]), If(AtLeft [Drop] [MoveUp]), MoveDown, MoveUp, MoveDown, If(AtBottom [Grab] [MoveUp]), LoopWhile(AtRight [MoveUp]), If(NotAtTop [MoveRight] [MoveRight]), LoopWhile(AtBottom [MoveDown]), MoveUp, If(NotAtTop [MoveLeft] [MoveUp]), LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [MoveDown]), MoveLeft, LoopWhile(AtTop [Grab]), LoopWhile(AtRight [Drop]), MoveDown, MoveRight, If(AtTop [MoveDown] [MoveRight]), MoveDown, MoveDown, MoveDown, MoveUp, MoveUp, LoopWhile(AtBottom [MoveRight]), If(AtRight [Grab] [MoveLeft]), LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [MoveLeft]), If(AtLeft [Drop] [MoveRight]), LoopWhile(AtBottom [MoveLeft]), If(NotAtBottom [MoveRight] [MoveRight]), If(AtBottom [Grab] [MoveRight]), MoveUp, If(NotAtBottom [MoveRight] [MoveDown]), If(NotAtTop [MoveDown] [Drop]), If(NotAtTop [MoveRight] [MoveUp]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtTop [Grab]), MoveDown, LoopWhile(AtLeft [MoveRight]), If(AtTop [MoveDown] [MoveLeft]), If(NotAtRight [MoveDown] [MoveRight]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [Drop]), If(AtTop [Drop] [MoveUp]), MoveDown, If(NotAtBottom [MoveDown] [MoveLeft]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtRight [Drop]), MoveRight, MoveDown, If(NotAtTop [MoveRight] [Drop]), LoopWhile(AtBottom [MoveRight]), If(NotAtRight [MoveLeft] [MoveRight]), MoveRight, MoveRight, MoveDown, MoveLeft, If(AtTop [Grab] [MoveLeft]), LoopWhile(AtTop [Drop]), MoveRight, If(AtRight [MoveLeft] [MoveUp]), LoopWhile(AtTop [Grab]), LoopWhile(AtRight [MoveDown]), If(NotAtBottom [MoveLeft] [Grab]), If(NotAtTop [MoveRight] [MoveLeft]), LoopWhile(AtLeft [Drop]), LoopWhile(AtBottom [MoveLeft]), MoveLeft, MoveUp, LoopWhile(AtRight [MoveDown]), If(AtBottom [MoveRight] [MoveRight]), MoveUp, LoopWhile(AtRight [Grab]), LoopWhile(AtTop [Grab]), LoopWhile(AtTop [MoveDown]), MoveDown, LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [MoveDown]), MoveLeft, MoveUp, MoveUp, LoopWhile(AtRight [MoveRight]), If(NotAtTop [MoveRight] [Grab]), MoveDown, If(NotAtLeft [MoveUp] [MoveUp]), MoveLeft, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [MoveLeft]), If(NotAtBottom [MoveDown] [MoveDown]), If(AtTop [MoveRight] [MoveUp]), LoopWhile(AtBottom [Grab]), MoveRight, MoveUp, If(AtBottom [MoveLeft] [MoveLeft]), If(NotAtTop [MoveLeft] [MoveDown]), MoveLeft, LoopWhile(AtRight [MoveRight]), LoopWhile(AtBottom [Drop]), If(NotAtTop [MoveDown] [MoveUp]), If(NotAtLeft [MoveUp] [MoveLeft]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtLeft [MoveRight]), If(AtRight [MoveUp] [MoveRight]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveLeft, MoveUp, MoveRight, LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [MoveUp]), MoveRight, LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), If(AtBottom [MoveUp] [MoveLeft]), LoopWhile(AtTop [MoveDown]), If(AtBottom [MoveLeft] [MoveLeft]), If(NotAtRight [MoveUp] [Grab]), If(NotAtLeft [MoveLeft] [MoveUp]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveLeft]), MoveLeft, MoveLeft, If(NotAtBottom [MoveRight] [MoveLeft]), LoopWhile(AtRight [MoveUp]), If(AtBottom [MoveUp] [MoveDown]), If(AtLeft [MoveUp] [MoveLeft]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [Grab]), LoopWhile(NotAtLeft [MoveLeft]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtRight [Drop]), LoopWhile(AtRight [MoveUp]), MoveLeft, LoopWhile(AtRight [Grab]), LoopWhile(NotAtLeft [MoveRight]), LoopWhile(AtBottom [Drop]), MoveRight, LoopWhile(AtTop [Grab]), If(NotAtBottom [MoveDown] [Grab]), If(AtLeft [MoveDown] [MoveDown]), If(AtLeft [MoveDown] [MoveRight]), MoveUp, LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [MoveLeft]), If(AtLeft [Drop] [MoveLeft]), If(NotAtRight [MoveUp] [MoveLeft]), MoveRight, If(AtTop [Drop] [MoveRight]), If(AtLeft [MoveDown] [MoveRight]), LoopWhile(AtRight [MoveUp]), If(AtLeft [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [Drop]), LoopWhile(AtTop [MoveDown]), MoveDown, MoveLeft, If(NotAtRight [MoveRight] [MoveUp]), LoopWhile(AtLeft [MoveDown]), If(AtLeft [MoveDown] [MoveRight]), MoveLeft, If(AtBottom [MoveDown] [MoveRight]), If(AtTop [MoveUp] [MoveDown]), MoveDown, LoopWhile(AtLeft [MoveUp]), MoveRight, LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [Drop]), LoopWhile(AtLeft [MoveLeft]), If(NotAtRight [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [MoveDown]), If(NotAtRight [MoveLeft] [Drop]), MoveLeft, MoveRight, MoveUp, LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveLeft, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtRight [MoveUp]), MoveRight, MoveLeft, LoopWhile(AtRight [MoveRight]), If(NotAtRight [MoveRight] [MoveDown]), If(AtTop [Drop] [MoveLeft]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveDown]), MoveRight, LoopWhile(AtBottom [MoveUp]), If(AtLeft [Grab] [MoveDown]), MoveLeft, LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [MoveDown]), If(AtTop [Grab] [MoveLeft]), LoopWhile(AtRight [MoveUp]), MoveUp, LoopWhile(AtBottom [MoveUp]), If(NotAtBottom [MoveRight] [MoveLeft]), LoopWhile(AtRight [MoveDown]), If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [MoveDown]), If(AtBottom [MoveLeft] [MoveUp]), If(NotAtLeft [MoveLeft] [MoveRight]), If(AtBottom [MoveDown] [MoveRight]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [MoveUp]), If(AtBottom [MoveDown] [MoveDown]), LoopWhile(AtRight [Drop]), If(AtBottom [MoveDown] [MoveRight]), If(NotAtLeft [MoveLeft] [MoveUp]), MoveRight, MoveLeft, If(AtBottom [MoveDown] [MoveLeft]), MoveLeft, If(NotAtRight [MoveRight] [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtTop [MoveRight]), MoveRight, MoveUp, LoopWhile(AtLeft [MoveLeft]), MoveDown, MoveRight, LoopWhile(AtTop [MoveUp]), If(NotAtRight [MoveDown] [Grab]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtBottom [MoveUp]), If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtTop [Grab]), If(AtRight [MoveRight] [MoveLeft]), MoveDown, MoveUp, MoveLeft, LoopWhile(AtBottom [MoveUp]), MoveRight, MoveRight, LoopWhile(AtLeft [MoveDown]), If(NotAtTop [MoveRight] [Grab]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [MoveRight]), MoveLeft, If(AtLeft [Drop] [MoveDown]), LoopWhile(AtRight [Grab]), If(AtTop [MoveUp] [MoveRight]), MoveLeft, LoopWhile(AtLeft [MoveLeft]), MoveRight, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtBottom [MoveRight]), MoveLeft, LoopWhile(AtRight [Drop]), MoveUp, MoveUp, LoopWhile(AtBottom [Drop]), MoveLeft, LoopWhile(AtLeft [Grab]), If(AtLeft [Drop] [MoveUp]), MoveRight, LoopWhile(AtRight [Drop]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [Grab]), If(NotAtLeft [MoveDown] [MoveLeft]), MoveDown, LoopWhile(AtBottom [Grab]), If(NotAtTop [MoveLeft] [Drop]), If(NotAtTop [MoveLeft] [Drop]), If(NotAtRight [MoveRight] [MoveLeft]), If(NotAtTop [MoveRight] [MoveDown]), If(AtLeft [MoveDown] [MoveLeft]), If(AtRight [MoveUp] [MoveRight]), LoopWhile(NotAtRight [MoveRight]), MoveLeft, MoveLeft, If(NotAtRight [MoveLeft] [MoveRight]), MoveLeft, LoopWhile(AtLeft [MoveDown]), MoveLeft, MoveRight, If(NotAtLeft [MoveUp] [MoveUp]), MoveRight, MoveUp, If(NotAtTop [MoveDown] [MoveUp]), If(NotAtTop [MoveDown] [MoveUp]), LoopWhile(AtRight [Drop]), LoopWhile(AtBottom [Grab]), If(AtTop [Drop] [MoveDown]), If(AtRight [Drop] [MoveRight]), LoopWhile(AtBottom [Grab]), MoveDown, If(NotAtRight [MoveRight] [MoveDown]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [MoveDown]), If(AtBottom [MoveDown] [MoveLeft]), LoopWhile(AtTop [MoveUp]), If(AtLeft [Drop] [MoveUp]), LoopWhile(AtTop [MoveLeft]), LoopWhile(NotAtRight [MoveRight]), MoveLeft, MoveLeft, If(NotAtLeft [MoveDown] [Drop]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [MoveDown]), If(AtTop [MoveLeft] [MoveRight]), LoopWhile(AtBottom [MoveDown]), If(NotAtRight [MoveUp] [MoveUp]), LoopWhile(AtRight [Drop]), If(NotAtLeft [MoveDown] [Drop]), MoveUp, LoopWhile(AtLeft [MoveDown]), MoveDown, MoveLeft, If(NotAtRight [MoveLeft] [MoveUp]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtRight [MoveUp]), MoveUp, MoveDown, LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtBottom [MoveDown]), MoveUp, MoveDown, LoopWhile(AtLeft [MoveDown]), If(NotAtTop [MoveDown] [Drop]), If(AtLeft [MoveUp] [MoveUp]), MoveRight, LoopWhile(AtRight [Grab]), MoveUp, LoopWhile(AtBottom [MoveUp]), LoopWhile(AtBottom [Drop]), MoveDown, MoveDown, LoopWhile(AtLeft [Drop]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtRight [Grab]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtRight [MoveUp]), If(NotAtBottom [MoveDown] [MoveDown]), LoopWhile(AtRight [Drop]), MoveUp, If(AtRight [MoveRight] [MoveDown]), LoopWhile(AtRight [MoveUp]), MoveRight, If(NotAtBottom [MoveLeft] [MoveDown]), If(NotAtRight [MoveUp] [MoveRight]), LoopWhile(AtLeft [MoveDown]), MoveUp, MoveLeft, LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [MoveRight]), MoveDown, If(NotAtRight [MoveDown] [Grab]), MoveRight, MoveUp, If(AtTop [MoveLeft] [MoveUp]), LoopWhile(AtBottom [MoveDown]), MoveUp, LoopWhile(AtRight [MoveLeft]), MoveDown, MoveLeft, LoopWhile(AtTop [MoveLeft]), MoveUp, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [MoveRight]), If(NotAtTop [MoveUp] [Drop]), If(NotAtLeft [MoveDown] [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveDown, MoveDown, LoopWhile(AtBottom [Drop]), MoveUp, If(AtBottom [MoveDown] [MoveUp]), If(NotAtTop [MoveUp] [MoveDown]), MoveLeft, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [Grab]), MoveUp, LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [Drop]), MoveDown, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveUp]), MoveLeft, If(NotAtBottom [MoveLeft] [MoveDown]), MoveDown, If(NotAtTop [MoveUp] [Grab]), MoveUp, LoopWhile(AtLeft [MoveUp]), MoveRight, MoveUp, LoopWhile(AtLeft [MoveRight]), If(AtTop [MoveDown] [MoveRight]), MoveDown, MoveDown, LoopWhile(AtTop [MoveRight]), If(NotAtRight [MoveRight] [MoveUp]), LoopWhile(AtLeft [Drop]), If(AtLeft [Grab] [MoveRight]), MoveLeft, MoveLeft, LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveUp]), MoveUp, If(AtRight [Grab] [MoveRight]), If(NotAtRight [MoveRight] [MoveUp]), If(AtBottom [MoveLeft] [MoveUp]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [MoveRight]), If(AtLeft [MoveRight] [MoveDown]), MoveRight, LoopWhile(AtRight [Drop]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtRight [MoveRight]), MoveRight, MoveDown, LoopWhile(AtTop [MoveLeft]), LoopWhile(NotAtRight [MoveUp]), If(AtRight [MoveLeft] [MoveUp]), LoopWhile(AtRight [MoveLeft]), If(AtTop [MoveLeft] [MoveLeft]), LoopWhile(AtTop [Drop]), If(NotAtLeft [MoveUp] [Drop]), LoopWhile(AtLeft [MoveUp]), If(NotAtRight [MoveRight] [MoveRight]), LoopWhile(AtRight [MoveLeft]), If(NotAtLeft [MoveLeft] [Grab]), If(AtBottom [Grab] [MoveDown]), LoopWhile(AtLeft [Drop]), LoopWhile(AtBottom [Grab]), MoveUp, LoopWhile(AtRight [MoveRight]), MoveRight, If(NotAtRight [MoveUp] [MoveLeft]), If(NotAtTop [MoveRight] [MoveUp]), LoopWhile(AtTop [Grab]), LoopWhile(AtBottom [MoveUp]), MoveUp, LoopWhile(AtTop [Drop]), LoopWhile(AtTop [MoveRight]), LoopWhile(NotAtRight [MoveLeft]), If(AtRight [MoveLeft] [MoveUp]), MoveDown, LoopWhile(AtLeft [Drop]), If(AtBottom [MoveRight] [MoveUp]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [MoveUp]), MoveLeft, MoveRight, LoopWhile(AtTop [Drop]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtTop [MoveLeft]), MoveLeft, MoveLeft, LoopWhile(AtLeft [MoveUp]), If(AtTop [MoveLeft] [MoveLeft]), LoopWhile(AtTop [Grab]), MoveUp, If(NotAtBottom [MoveDown] [MoveRight]), If(NotAtRight [MoveLeft] [Drop]), If(NotAtTop [MoveDown] [MoveUp]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveLeft]), MoveDown, If(AtBottom [Grab] [MoveLeft]), LoopWhile(AtTop [Grab]), MoveDown, LoopWhile(AtBottom [MoveDown]), If(AtRight [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [Grab]), MoveLeft, LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [MoveUp]), MoveRight, LoopWhile(AtBottom [MoveLeft]), If(NotAtRight [MoveDown] [Grab]), MoveUp, MoveLeft, LoopWhile(AtRight [MoveRight]), MoveUp, LoopWhile(AtRight [MoveLeft]), If(AtBottom [MoveUp] [MoveUp]), MoveDown, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [MoveDown]), If(AtBottom [MoveRight] [MoveLeft]), LoopWhile(AtTop [MoveDown]), If(NotAtBottom [MoveDown] [MoveDown]), If(NotAtLeft [MoveDown] [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), If(NotAtTop [MoveDown] [Drop]), If(AtTop [Drop] [MoveUp]), If(AtRight [Grab] [MoveUp]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [Drop]), MoveDown, LoopWhile(AtBottom [MoveUp]), MoveDown, If(NotAtRight [MoveDown] [MoveDown]), If(NotAtBottom [MoveUp] [Drop]), If(NotAtLeft [MoveUp] [MoveLeft]), If(NotAtRight [MoveUp] [MoveRight]), If(AtBottom [MoveLeft] [MoveUp]), MoveDown, MoveDown, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtTop [MoveLeft]), MoveRight, If(AtRight [Drop] [MoveLeft]), If(AtBottom [Grab] [MoveRight]), MoveLeft, LoopWhile(AtLeft [MoveDown]), MoveUp, MoveDown, LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [Grab]), LoopWhile(AtBottom [Grab]), If(AtRight [MoveUp] [MoveUp]), If(NotAtRight [MoveRight] [Grab]), MoveRight, MoveDown, If(NotAtTop [MoveDown] [Drop]), MoveUp, If(AtBottom [Grab] [MoveRight]), MoveUp, LoopWhile(AtBottom [MoveLeft]), MoveDown, If(NotAtBottom [MoveRight] [Drop]), LoopWhile(AtLeft [MoveLeft]), If(NotAtBottom [MoveDown] [MoveRight]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [MoveDown]), MoveDown, If(AtLeft [MoveLeft] [MoveRight]), LoopWhile(AtTop [MoveLeft]), MoveRight, If(NotAtBottom [MoveLeft] [MoveLeft]), If(NotAtTop [MoveRight] [MoveLeft]), LoopWhile(AtTop [MoveRight]), If(AtBottom [Grab] [MoveRight]), MoveDown, If(AtTop [Drop] [MoveDown]), MoveLeft, MoveUp, If(NotAtRight [MoveLeft] [MoveUp]), If(NotAtTop [MoveLeft] [Grab]), If(AtBottom [MoveDown] [MoveLeft]), LoopWhile(AtRight [MoveUp]), MoveUp, LoopWhile(AtRight [MoveRight]), MoveLeft, If(NotAtTop [MoveUp] [Grab]), If(NotAtBottom [MoveLeft] [Grab]), If(AtLeft [MoveUp] [MoveRight]), MoveRight, LoopWhile(AtLeft [Grab]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [Drop]), If(AtBottom [MoveDown] [MoveRight]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [Drop]), If(AtRight [MoveDown] [MoveLeft]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [MoveLeft]), If(AtRight [Grab] [MoveRight]), MoveRight, If(AtRight [Drop] [MoveDown]), If(AtBottom [MoveLeft] [MoveLeft]), MoveDown, If(NotAtTop [MoveUp] [Drop]), LoopWhile(AtLeft [MoveDown]), If(AtTop [MoveRight] [MoveUp]), If(NotAtRight [MoveDown] [Drop]), LoopWhile(AtRight [Grab]), LoopWhile(AtTop [MoveRight]), If(NotAtRight [MoveRight] [MoveUp]), LoopWhile(AtLeft [Grab]), LoopWhile(AtTop [MoveUp]), If(AtRight [MoveRight] [MoveRight]), MoveDown, MoveDown, LoopWhile(AtLeft [MoveDown]), If(AtRight [MoveRight] [MoveRight]), If(NotAtBottom [MoveLeft] [MoveRight]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [Drop]), If(NotAtBottom [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [MoveRight]), MoveUp, MoveLeft, If(NotAtRight [MoveRight] [MoveDown]), If(NotAtBottom [MoveUp] [Grab]), LoopWhile(AtLeft [MoveRight]), MoveDown, LoopWhile(AtRight [MoveDown]), MoveLeft, LoopWhile(AtLeft [MoveDown]), If(AtBottom [Drop] [MoveLeft]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), If(AtTop [MoveDown] [MoveDown]), MoveRight, LoopWhile(AtBottom [Grab]), MoveUp, If(NotAtTop [MoveDown] [MoveLeft]), LoopWhile(AtLeft [MoveUp]), MoveUp, MoveRight, LoopWhile(AtRight [Drop]), LoopWhile(AtTop [MoveRight]), If(NotAtRight [MoveDown] [MoveDown]), LoopWhile(AtLeft [MoveUp]), MoveUp, LoopWhile(AtRight [MoveUp]), MoveDown, LoopWhile(AtRight [Grab]), MoveUp, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtRight [MoveUp]), MoveUp, MoveUp, MoveUp, MoveDown, If(NotAtBottom [MoveLeft] [Drop]), MoveUp, LoopWhile(AtLeft [Drop]), MoveUp, If(AtTop [MoveLeft] [MoveRight]), If(NotAtRight [MoveRight] [MoveUp]), If(AtTop [MoveRight] [MoveLeft]), LoopWhile(AtTop [MoveDown]), If(NotAtRight [MoveRight] [MoveUp]), MoveUp, If(NotAtBottom [MoveDown] [MoveDown]), LoopWhile(AtLeft [MoveUp]), MoveLeft, If(AtTop [MoveRight] [MoveUp]), LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [MoveDown]), MoveDown, If(AtRight [Drop] [MoveLeft]), LoopWhile(AtTop [Drop]), LoopWhile(AtLeft [MoveDown]), If(NotAtTop [MoveDown] [MoveUp]), If(NotAtTop [MoveUp] [Drop]), If(AtRight [MoveRight] [MoveDown]), If(NotAtTop [MoveRight] [MoveUp]), LoopWhile(AtTop [Grab]), LoopWhile(AtLeft [MoveRight]), If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtLeft [MoveRight]), MoveRight, LoopWhile(AtRight [MoveLeft]), MoveUp, If(NotAtBottom [MoveRight] [Grab]), If(NotAtTop [MoveLeft] [MoveDown]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [MoveUp]), If(AtLeft [MoveUp] [MoveLeft]), LoopWhile(AtBottom [MoveDown]), If(AtRight [MoveLeft] [MoveDown]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtTop [Drop]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [MoveUp]), If(AtBottom [MoveDown] [MoveLeft]), LoopWhile(AtRight [Grab]), MoveRight, If(AtTop [MoveRight] [MoveUp]), LoopWhile(AtRight [MoveDown]), MoveUp, LoopWhile(AtLeft [Drop]), LoopWhile(AtLeft [MoveUp]), MoveRight, MoveUp, LoopWhile(AtLeft [MoveDown]), MoveDown, LoopWhile(AtTop [MoveRight]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [Grab]), If(NotAtLeft [MoveDown] [Grab]), LoopWhile(AtLeft [MoveDown]), If(AtTop [MoveRight] [MoveDown]), MoveDown, MoveLeft, LoopWhile(AtBottom [MoveRight]), MoveDown, If(AtTop [MoveLeft] [MoveRight]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [MoveUp]), If(NotAtBottom [MoveUp] [Grab]), MoveRight, MoveDown, MoveUp, LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [Drop]), MoveUp, MoveUp, MoveDown, If(NotAtRight [MoveDown] [Drop]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtRight [MoveDown]), If(NotAtTop [MoveLeft] [MoveUp]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [Grab]), MoveDown, LoopWhile(AtRight [Grab]), MoveDown, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtTop [Grab]), MoveDown, If(AtBottom [MoveUp] [MoveRight]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [Drop]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [Grab]), MoveUp, If(NotAtLeft [MoveLeft] [MoveUp]), If(NotAtRight [MoveUp] [Grab]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtLeft [Drop]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), MoveDown, MoveDown, LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [Drop]), LoopWhile(AtTop [MoveUp]), MoveUp, MoveDown, If(NotAtLeft [MoveUp] [MoveRight]), LoopWhile(AtLeft [Grab]), MoveDown, MoveDown, MoveUp, If(NotAtRight [MoveLeft] [Grab]), If(NotAtBottom [MoveDown] [MoveRight]), LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [Grab]), LoopWhile(AtTop [MoveRight]), MoveDown, LoopWhile(AtTop [MoveDown]), LoopWhile(AtLeft [MoveUp]), LoopWhile(NotAtBottom [MoveLeft]), LoopWhile(NotAtBottom [Drop]), MoveUp, If(NotAtRight [MoveRight] [MoveLeft]), LoopWhile(AtRight [MoveDown]), MoveLeft, LoopWhile(AtRight [MoveUp]), MoveUp, LoopWhile(AtTop [Drop]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [MoveUp]), MoveUp, MoveLeft, If(AtLeft [Drop] [MoveUp]), MoveLeft, MoveUp, If(AtTop [MoveUp] [MoveDown]), LoopWhile(AtBottom [MoveLeft]), If(AtBottom [Drop] [MoveUp]), MoveUp, MoveUp, MoveDown, MoveDown, MoveUp, If(NotAtLeft [MoveRight] [MoveDown]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtTop [Grab]), LoopWhile(AtRight [MoveUp]), If(NotAtRight [MoveRight] [Drop]), If(AtBottom [Grab] [MoveDown]), If(NotAtLeft [MoveUp] [MoveUp]), MoveLeft, MoveUp, MoveLeft, LoopWhile(NotAtTop [MoveUp]), LoopWhile(AtRight [Grab]), If(NotAtRight [MoveDown] [Drop]), If(AtLeft [MoveUp] [MoveUp]), LoopWhile(AtRight [MoveLeft]), If(NotAtLeft [MoveRight] [MoveLeft]), If(NotAtRight [MoveRight] [MoveUp]), MoveDown, LoopWhile(AtLeft [MoveDown]), LoopWhile(NotAtBottom [MoveDown]), LoopWhile(NotAtBottom [Grab]), MoveUp, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [MoveUp]), If(AtRight [MoveUp] [MoveRight]), MoveUp, MoveLeft, MoveLeft, MoveRight, LoopWhile(AtRight [Grab]), MoveUp, LoopWhile(AtRight [Drop]), MoveRight, If(AtRight [Grab] [MoveRight]), If(NotAtBottom [MoveDown] [MoveRight]), If(NotAtBottom [MoveLeft] [MoveRight]), MoveLeft, If(AtTop [MoveRight] [MoveRight]), If(NotAtTop [MoveRight] [Drop]), LoopWhile(AtBottom [Grab]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [Drop]), LoopWhile(AtTop [Drop]), MoveUp, MoveUp, If(AtRight [Drop] [MoveUp]), If(AtBottom [Grab] [MoveDown]), MoveLeft, If(AtBottom [Grab] [MoveDown]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [Drop]), MoveDown, LoopWhile(AtLeft [MoveDown]), MoveDown, MoveRight, If(AtBottom [MoveDown] [MoveRight]), LoopWhile(NotAtRight [MoveUp]), MoveUp, LoopWhile(NotAtRight [MoveUp]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [MoveLeft]), MoveLeft, If(AtBottom [Drop] [MoveUp]), LoopWhile(AtRight [MoveLeft]), If(NotAtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtBottom [Drop]), If(AtRight [MoveUp] [MoveDown]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtBottom [MoveRight]), MoveUp, LoopWhile(AtBottom [MoveDown]), If(NotAtLeft [MoveLeft] [MoveUp]), LoopWhile(AtLeft [MoveDown]), MoveUp, LoopWhile(AtLeft [Drop]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), If(AtTop [MoveDown] [MoveUp]), If(NotAtRight [MoveDown] [MoveDown]), LoopWhile(AtBottom [Grab]), MoveDown, If(AtRight [MoveDown] [MoveRight]), MoveUp, If(AtBottom [MoveRight] [MoveUp]), If(AtRight [MoveRight] [MoveDown]), MoveLeft, LoopWhile(AtTop [Grab]), LoopWhile(AtRight [MoveLeft]), If(AtRight [MoveRight] [MoveUp]), LoopWhile(AtBottom [Grab]), LoopWhile(AtTop [Grab]), MoveLeft, If(NotAtTop [MoveDown] [MoveUp]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [Grab]), MoveUp, MoveUp, MoveUp, If(AtLeft [Drop] [MoveLeft]), If(NotAtBottom [MoveLeft] [MoveUp]), If(NotAtBottom [MoveRight] [MoveRight]), LoopWhile(AtBottom [MoveRight]), MoveRight, If(AtTop [Grab] [MoveLeft]), MoveLeft, If(AtRight [MoveDown] [MoveLeft]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [MoveUp]), If(NotAtBottom [MoveUp] [Grab]), LoopWhile(AtLeft [MoveUp]), MoveRight, LoopWhile(AtBottom [MoveDown]), MoveLeft, LoopWhile(AtLeft [MoveDown]), If(AtRight [MoveLeft] [MoveDown]), MoveDown, MoveDown, If(NotAtRight [MoveDown] [MoveDown]), LoopWhile(AtBottom [Drop]), If(AtBottom [MoveUp] [MoveLeft]), LoopWhile(AtLeft [Drop]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [Drop]), MoveDown, If(NotAtLeft [MoveDown] [Grab]), If(AtTop [Grab] [MoveRight]), LoopWhile(AtRight [Drop]), MoveDown, LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [Drop]), MoveRight, LoopWhile(AtTop [Grab]), LoopWhile(AtLeft [MoveDown]), If(NotAtLeft [MoveLeft] [MoveRight]), MoveRight, MoveLeft, MoveLeft, LoopWhile(AtTop [Grab]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [MoveRight]), If(NotAtLeft [MoveDown] [MoveLeft]), If(AtRight [MoveUp] [MoveRight]), If(NotAtRight [MoveRight] [MoveRight]), MoveUp, MoveUp, MoveUp, LoopWhile(AtTop [MoveUp]), MoveDown, LoopWhile(AtBottom [Grab]), If(AtBottom [MoveRight] [MoveRight]), If(AtTop [MoveDown] [MoveLeft]), LoopWhile(AtTop [MoveRight]), If(NotAtBottom [MoveUp] [MoveUp]), LoopWhile(AtTop [Drop]), LoopWhile(AtLeft [MoveUp]), If(NotAtLeft [MoveLeft] [MoveUp]), LoopWhile(AtRight [Drop]), MoveUp, MoveDown, LoopWhile(AtLeft [MoveUp]), LoopWhile(AtTop [MoveLeft]), If(NotAtRight [MoveUp] [MoveDown]), If(AtTop [MoveLeft] [MoveDown]), If(AtTop [MoveLeft] [MoveLeft]), LoopWhile(AtTop [Grab]), If(NotAtBottom [MoveUp] [Drop]), MoveRight, If(NotAtBottom [MoveLeft] [MoveDown]), If(NotAtBottom [MoveRight] [MoveDown]), If(AtRight [MoveRight] [MoveDown]), LoopWhile(AtLeft [Drop]), If(NotAtLeft [MoveDown] [MoveDown]), MoveUp, LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [MoveLeft]), If(AtRight [MoveRight] [MoveLeft]), MoveUp, If(AtRight [Drop] [MoveUp]), MoveDown, MoveRight, LoopWhile(AtLeft [MoveRight]), If(NotAtRight [MoveRight] [Grab]), LoopWhile(AtRight [MoveLeft]), If(NotAtTop [MoveDown] [Grab]), If(AtRight [MoveRight] [MoveRight]), MoveUp, MoveUp, If(NotAtBottom [MoveLeft] [MoveLeft]), If(NotAtBottom [MoveRight] [MoveUp]), If(NotAtTop [MoveRight] [MoveLeft]), If(AtBottom [MoveLeft] [MoveDown]), LoopWhile(AtLeft [Grab]), LoopWhile(AtTop [MoveRight]), If(NotAtTop [MoveRight] [Grab]), If(NotAtTop [MoveRight] [Grab]), MoveUp, LoopWhile(AtRight [MoveDown]), MoveUp, MoveDown, LoopWhile(AtLeft [MoveLeft]), If(NotAtBottom [MoveUp] [MoveRight]), If(AtTop [Grab] [MoveLeft]), If(AtLeft [Grab] [MoveUp]), MoveLeft, If(NotAtBottom [MoveRight] [Drop]), LoopWhile(AtBottom [MoveLeft]), MoveRight, MoveRight, If(AtLeft [Drop] [MoveRight]), MoveUp, MoveDown, LoopWhile(AtBottom [MoveUp]), If(AtBottom [MoveLeft] [MoveDown]), If(NotAtLeft [MoveDown] [MoveDown]), MoveDown, If(NotAtBottom [MoveDown] [MoveDown]), MoveUp, If(NotAtBottom [MoveLeft] [MoveUp]), LoopWhile(AtBottom [MoveUp]), If(AtTop [Drop] [MoveUp]), If(AtRight [MoveRight] [MoveDown]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [MoveUp]), If(NotAtBottom [MoveDown] [MoveRight]), If(AtRight [Grab] [MoveUp]), LoopWhile(AtRight [Grab]), LoopWhile(AtTop [Drop]), MoveDown, MoveLeft, If(AtLeft [MoveLeft] [MoveLeft]), If(NotAtRight [MoveRight] [MoveUp]), LoopWhile(AtBottom [MoveLeft]), If(AtBottom [Drop] [MoveLeft]), If(NotAtLeft [MoveLeft] [Drop]), LoopWhile(AtTop [MoveDown]), If(NotAtBottom [MoveUp] [MoveLeft]), LoopWhile(AtBottom [Grab]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtBottom [MoveLeft]), MoveDown, LoopWhile(AtLeft [MoveRight]), MoveUp, MoveLeft, MoveUp, MoveDown, MoveRight, If(AtRight [MoveUp] [MoveLeft]), If(NotAtBottom [MoveRight] [Grab]), If(NotAtBottom [MoveLeft] [MoveDown]), MoveUp, If(NotAtBottom [MoveDown] [MoveDown]), LoopWhile(AtBottom [MoveDown]), If(AtBottom [Drop] [MoveDown]), If(NotAtBottom [MoveDown] [MoveRight]), LoopWhile(AtBottom [MoveRight]), LoopWhile(NotAtBottom [MoveDown]), If(NotAtLeft [MoveLeft] [Drop]), LoopWhile(AtTop [Drop]), LoopWhile(NotAtBottom [Grab]), MoveUp, LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [MoveRight]), MoveLeft, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtBottom [MoveRight]), MoveUp, MoveRight, If(AtTop [MoveUp] [MoveDown]), If(AtLeft [Grab] [MoveUp]), LoopWhile(AtRight [Drop]), MoveUp, LoopWhile(AtRight [MoveRight]), MoveDown, If(AtRight [Drop] [MoveDown]), LoopWhile(AtTop [Grab]), MoveDown, LoopWhile(AtTop [MoveRight]), LoopWhile(NotAtBottom [Grab]), If(NotAtTop [MoveLeft] [MoveUp]), LoopWhile(AtRight [Drop]), If(AtBottom [MoveUp] [Grab]), If(NotAtRight [MoveRight] [MoveRight]), MoveRight, MoveDown, MoveUp, MoveUp, If(NotAtLeft [MoveUp] [MoveDown]), If(AtTop [MoveRight] [MoveDown]), LoopWhile(AtRight [Grab]), MoveUp, MoveDown, If(NotAtTop [MoveDown] [MoveUp]), LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [MoveRight]), If(NotAtBottom [MoveRight] [MoveLeft]), LoopWhile(AtBottom [MoveDown]), MoveUp, If(NotAtLeft [MoveDown] [MoveUp]), If(NotAtBottom [MoveUp] [MoveRight]), If(AtBottom [MoveRight] [MoveUp]), MoveLeft, If(NotAtTop [MoveUp] [Grab]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [MoveUp]), MoveDown, MoveRight, LoopWhile(AtLeft [Grab]), MoveLeft, MoveUp, If(AtRight [MoveUp] [MoveDown]), MoveUp, If(AtTop [MoveLeft] [MoveDown]), LoopWhile(AtRight [Grab]), If(NotAtRight [MoveDown] [Grab]), LoopWhile(AtTop [MoveUp]), MoveLeft, If(NotAtBottom [MoveUp] [Grab]), LoopWhile(AtRight [Drop]), LoopWhile(AtRight [Drop]), If(AtBottom [Drop] [MoveLeft]), If(AtLeft [MoveLeft] [MoveRight]), MoveUp, MoveLeft, LoopWhile(AtRight [Grab]), MoveDown, If(NotAtRight [MoveUp] [Grab]), LoopWhile(AtTop [Drop]), If(NotAtLeft [MoveDown] [Grab]), If(AtLeft [MoveLeft] [MoveDown]), MoveUp, MoveDown, LoopWhile(AtRight [Drop]), MoveRight, LoopWhile(AtTop [Drop]), LoopWhile(AtBottom [MoveRight]), If(AtTop [MoveLeft] [MoveDown]), If(AtBottom [MoveRight] [MoveUp]), MoveUp, If(AtRight [MoveRight] [MoveLeft]), If(NotAtLeft [MoveDown] [MoveDown]), If(AtBottom [MoveUp] [MoveLeft]), If(NotAtLeft [MoveUp] [Drop]), MoveUp, LoopWhile(AtLeft [MoveRight]), If(NotAtRight [MoveDown] [MoveRight]), If(NotAtLeft [MoveDown] [Grab]), LoopWhile(AtRight [Grab]), MoveDown, MoveRight, LoopWhile(AtRight [MoveDown]), If(AtRight [Grab] [MoveUp]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [Drop]), If(NotAtRight [MoveDown] [MoveDown]), MoveUp, LoopWhile(AtBottom [Drop]), If(NotAtBottom [MoveLeft] [MoveDown]), LoopWhile(AtLeft [MoveRight]), If(AtTop [MoveLeft] [MoveLeft]), If(NotAtTop [MoveRight] [MoveRight]), LoopWhile(AtBottom [MoveDown]), If(NotAtLeft [MoveDown] [Drop]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [Drop]), If(NotAtLeft [MoveUp] [MoveRight]), MoveDown, If(AtBottom [Grab] [MoveRight]), LoopWhile(NotAtRight [MoveRight]), MoveUp, LoopWhile(AtRight [MoveLeft]), MoveDown, If(NotAtBottom [MoveUp] [MoveDown]), MoveLeft, If(NotAtLeft [MoveUp] [MoveRight]), If(AtBottom [MoveRight] [MoveDown]), If(NotAtBottom [MoveDown] [Drop]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [MoveRight]), MoveRight, LoopWhile(AtTop [MoveRight]), MoveLeft, LoopWhile(NotAtBottom [MoveDown]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [Drop]), MoveLeft, MoveLeft, MoveLeft, If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtLeft [MoveRight]), If(NotAtLeft [MoveDown] [Grab]), MoveUp, LoopWhile(AtTop [MoveLeft]), If(AtLeft [Drop] [MoveRight]), LoopWhile(AtLeft [MoveDown]), MoveUp, MoveRight, If(NotAtBottom [MoveUp] [MoveDown]), LoopWhile(AtLeft [MoveLeft]), MoveLeft, MoveRight, LoopWhile(AtLeft [Grab]), If(AtBottom [Drop] [MoveLeft]), If(NotAtBottom [MoveRight] [MoveRight]), LoopWhile(AtBottom [MoveRight]), MoveLeft, MoveUp, If(AtLeft [MoveDown] [MoveDown]), MoveRight, LoopWhile(AtRight [MoveRight]), MoveRight, LoopWhile(AtTop [MoveUp]), MoveLeft, If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtRight [MoveUp]), If(NotAtBottom [MoveDown] [MoveRight]), LoopWhile(AtTop [Grab]), If(AtLeft [MoveUp] [MoveUp]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [MoveRight]), MoveRight, LoopWhile(AtRight [Drop]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtLeft [MoveUp]), MoveRight, MoveDown, MoveDown, MoveDown, LoopWhile(AtLeft [MoveUp]), LoopWhile(NotAtBottom [MoveDown]), If(NotAtBottom [Drop] [MoveRight]), LoopWhile(NotAtBottom [MoveLeft]), MoveUp, If(AtTop [MoveUp] [MoveUp]), MoveUp, LoopWhile(AtBottom [MoveLeft]), MoveLeft, If(NotAtRight [MoveDown] [Drop]), LoopWhile(AtLeft [MoveUp]), MoveUp, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [MoveLeft]), MoveUp, MoveDown, If(NotAtTop [MoveDown] [MoveLeft]), If(NotAtTop [MoveUp] [MoveDown]), If(AtRight [Drop] [MoveRight]), LoopWhile(NotAtRight [Grab]), LoopWhile(AtRight [MoveLeft]), If(NotAtLeft [MoveUp] [Grab]), MoveLeft, MoveUp, If(AtLeft [Drop] [MoveLeft]), If(AtTop [MoveRight] [MoveDown]), LoopWhile(NotAtTop [MoveUp]), MoveDown, LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [MoveLeft]), If(AtTop [MoveLeft] [MoveRight]), MoveDown, LoopWhile(AtBottom [MoveLeft]), If(NotAtBottom [MoveDown] [Grab]), If(AtRight [MoveDown] [MoveLeft]), If(AtLeft [Grab] [MoveUp]), If(AtLeft [Drop] [MoveUp]), If(NotAtTop [MoveUp] [MoveUp]), MoveDown, If(NotAtRight [MoveUp] [MoveUp]), If(NotAtTop [MoveUp] [MoveLeft]), If(NotAtLeft [MoveLeft] [Grab]), LoopWhile(AtTop [MoveDown]), MoveRight, MoveLeft, MoveDown, If(NotAtBottom [MoveDown] [Grab]), LoopWhile(AtRight [Grab]), MoveDown, LoopWhile(AtRight [MoveDown]), MoveUp, If(AtBottom [MoveDown] [MoveRight]), MoveUp, LoopWhile(AtBottom [MoveLeft]), MoveUp, If(AtRight [Drop] [MoveDown]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [MoveRight]), If(NotAtTop [MoveUp] [MoveRight]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [Grab]), MoveDown, MoveRight, MoveLeft, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtRight [MoveRight]), MoveRight, MoveDown, MoveLeft, If(AtTop [Grab] [MoveLeft]), MoveDown, If(AtRight [MoveUp] [MoveLeft]), MoveLeft, MoveUp, LoopWhile(AtTop [Drop]), LoopWhile(AtTop [Drop]), MoveUp, MoveLeft, MoveRight, If(AtRight [Drop] [MoveDown]), LoopWhile(AtLeft [Grab]), If(AtTop [Drop] [MoveRight]), LoopWhile(AtTop [MoveLeft]), If(NotAtTop [MoveUp] [MoveUp]), MoveLeft, LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtRight [Drop]), LoopWhile(AtTop [MoveDown]), MoveDown, MoveDown, LoopWhile(AtTop [MoveUp]), If(NotAtRight [MoveLeft] [MoveUp]), If(AtTop [Grab] [MoveUp]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [Grab]), MoveRight, LoopWhile(AtTop [Drop]), LoopWhile(AtBottom [Drop]), LoopWhile(AtTop [Grab]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), If(AtBottom [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), If(AtBottom [MoveUp] [MoveRight]), MoveRight, LoopWhile(AtLeft [Drop]), MoveDown, If(NotAtRight [MoveRight] [Grab]), If(AtRight [Grab] [MoveDown]), MoveRight, MoveLeft, MoveLeft, MoveRight, MoveDown, If(NotAtLeft [MoveLeft] [MoveUp]), If(AtTop [MoveDown] [MoveRight]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveUp]), If(AtTop [MoveDown] [MoveRight]), MoveLeft, MoveRight, MoveUp, LoopWhile(AtLeft [Drop]), If(NotAtRight [MoveRight] [Grab]), If(NotAtRight [MoveUp] [MoveLeft]), If(AtRight [Drop] [MoveRight]), LoopWhile(AtTop [Drop]), If(AtRight [MoveRight] [MoveRight]), MoveUp, MoveLeft, If(NotAtTop [MoveDown] [MoveRight]), MoveUp, MoveDown, MoveDown, MoveDown, LoopWhile(AtRight [MoveRight]), If(AtTop [MoveLeft] [MoveRight]), If(AtRight [Grab] [MoveUp]), LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [MoveRight]), MoveLeft, LoopWhile(AtTop [Grab]), MoveRight, If(NotAtBottom [MoveRight] [MoveDown]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [MoveLeft]), If(AtBottom [MoveUp] [MoveUp]), MoveLeft, If(AtLeft [MoveDown] [MoveDown]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [MoveUp]), MoveUp, MoveLeft, If(NotAtBottom [MoveDown] [MoveUp]), LoopWhile(AtLeft [Drop]), MoveDown, If(AtRight [MoveRight] [MoveRight]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [MoveDown]), If(NotAtTop [MoveRight] [MoveRight]), LoopWhile(AtTop [Drop]), If(NotAtTop [MoveLeft] [MoveLeft]), MoveLeft, MoveRight, If(NotAtRight [MoveUp] [MoveRight]), If(NotAtTop [MoveUp] [Grab]), MoveLeft, MoveDown, LoopWhile(AtLeft [Grab]), If(NotAtBottom [MoveUp] [MoveDown]), MoveUp, LoopWhile(AtLeft [Grab]), LoopWhile(AtBottom [MoveUp]), MoveUp, If(NotAtTop [MoveLeft] [MoveDown]), MoveDown, LoopWhile(AtTop [MoveLeft]), MoveUp, MoveDown, LoopWhile(AtBottom [Grab]), MoveUp, LoopWhile(AtBottom [Grab]), LoopWhile(AtTop [MoveDown]), MoveDown, LoopWhile(AtLeft [Drop]), MoveDown, MoveLeft, MoveDown, LoopWhile(AtBottom [MoveLeft]), If(AtLeft [Drop] [MoveDown]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [MoveDown]), MoveRight, If(AtRight [Grab] [MoveUp]), MoveLeft, If(NotAtLeft [MoveDown] [Grab]), If(NotAtTop [MoveUp] [Drop]), LoopWhile(AtLeft [MoveDown]), MoveDown, LoopWhile(AtBottom [MoveRight]), If(NotAtBottom [MoveLeft] [MoveDown]), MoveUp, If(AtBottom [Drop] [MoveUp]), LoopWhile(AtLeft [Drop]), If(AtRight [Drop] [MoveRight]), If(AtLeft [MoveRight] [MoveRight]), MoveUp, MoveRight, MoveLeft, If(NotAtLeft [MoveRight] [Drop]), MoveLeft, LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [Drop]), MoveDown, MoveRight, MoveDown, MoveRight, MoveLeft, MoveDown, MoveLeft, MoveUp, MoveDown, If(NotAtLeft [MoveDown] [MoveRight]), MoveUp, If(NotAtLeft [MoveLeft] [MoveRight]), MoveRight, If(NotAtRight [MoveLeft] [Grab]), If(NotAtTop [MoveUp] [MoveRight]), MoveLeft, MoveDown, If(AtBottom [Drop] [MoveRight]), MoveLeft, MoveRight, MoveLeft, MoveRight, LoopWhile(AtRight [Grab]), If(NotAtRight [MoveDown] [MoveUp]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [MoveRight]), MoveUp, If(AtBottom [Drop] [MoveUp]), If(AtRight [MoveLeft] [MoveLeft]), MoveUp, If(AtTop [MoveLeft] [MoveDown]), If(AtRight [MoveLeft] [MoveRight]), MoveUp, LoopWhile(AtTop [MoveUp]), If(AtRight [MoveLeft] [MoveUp]), MoveLeft, LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [MoveLeft]), If(NotAtLeft [MoveUp] [Drop]), MoveRight, LoopWhile(AtLeft [Drop]), MoveRight, LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [Grab]), LoopWhile(AtBottom [MoveLeft]), If(AtBottom [MoveDown] [MoveLeft]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [MoveRight]), MoveRight, MoveLeft, MoveLeft, If(AtBottom [MoveDown] [MoveUp]), If(NotAtTop [MoveDown] [Drop]), MoveLeft, If(NotAtTop [MoveDown] [MoveDown]), If(AtBottom [MoveUp] [MoveDown]), If(AtBottom [MoveLeft] [MoveRight]), MoveUp, If(NotAtLeft [MoveDown] [MoveDown]), If(AtLeft [MoveRight] [MoveRight]), MoveDown, LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtLeft [MoveRight]), MoveDown, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [MoveUp]), MoveRight, If(AtRight [Grab] [MoveUp]), If(NotAtTop [MoveLeft] [MoveLeft]), LoopWhile(AtRight [MoveDown]), MoveDown, LoopWhile(AtRight [Drop]), MoveDown, MoveRight, MoveRight, LoopWhile(AtRight [MoveDown]), If(NotAtLeft [MoveRight] [MoveRight]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtLeft [Drop]), If(NotAtRight [MoveRight] [MoveRight]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtRight [Drop]), If(NotAtTop [MoveUp] [MoveRight]), MoveLeft, LoopWhile(AtBottom [Drop]), If(AtTop [MoveLeft] [MoveUp]), LoopWhile(AtLeft [MoveRight]), If(AtRight [MoveDown] [MoveRight]), LoopWhile(AtTop [MoveDown]), If(AtLeft [Drop] [MoveDown]), MoveLeft, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtLeft [MoveUp]), MoveUp, LoopWhile(AtRight [MoveDown]), MoveRight, LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [Drop]), MoveLeft, LoopWhile(AtRight [Drop]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [MoveUp]), MoveLeft, LoopWhile(AtLeft [MoveUp]), MoveRight, If(AtBottom [Drop] [MoveDown]), LoopWhile(AtBottom [MoveDown]), If(NotAtBottom [MoveDown] [MoveRight]), LoopWhile(AtTop [Drop]), MoveLeft, MoveDown, MoveUp, LoopWhile(AtBottom [Grab]), LoopWhile(AtRight [Drop]), MoveLeft, If(AtRight [MoveLeft] [MoveUp]), MoveRight, LoopWhile(AtTop [MoveDown]), MoveUp, If(AtLeft [MoveUp] [MoveLeft]), MoveDown, If(NotAtRight [MoveUp] [Grab]), If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtTop [MoveUp]), If(AtRight [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [Drop]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveRight, If(AtRight [Drop] [MoveUp]), If(AtBottom [MoveDown] [MoveUp]), LoopWhile(AtLeft [Grab]), MoveUp, MoveRight, If(NotAtBottom [MoveLeft] [Drop]), LoopWhile(AtRight [MoveUp]), If(AtTop [MoveLeft] [MoveUp]), If(AtTop [MoveLeft] [MoveUp]), MoveLeft, If(NotAtTop [Grab] [MoveLeft]), LoopWhile(AtBottom [MoveRight]), MoveDown, MoveUp, MoveDown, If(AtLeft [MoveLeft] [MoveRight]), If(NotAtBottom [MoveDown] [MoveRight]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [MoveRight]), MoveDown, If(AtTop [Grab] [MoveDown]), If(NotAtBottom [MoveLeft] [MoveDown]), MoveLeft, MoveLeft, LoopWhile(AtTop [MoveLeft]), If(NotAtLeft [MoveRight] [MoveRight]), MoveDown, MoveRight, LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [MoveDown]), MoveLeft, MoveRight, LoopWhile(AtRight [MoveUp]), If(AtTop [MoveDown] [MoveUp]), If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtTop [MoveLeft]), MoveLeft, If(NotAtLeft [MoveLeft] [MoveUp]), If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtBottom [MoveDown]), MoveUp, If(AtLeft [Grab] [MoveDown]), LoopWhile(AtRight [MoveRight]), MoveUp, If(NotAtBottom [MoveRight] [MoveRight]), MoveDown, LoopWhile(AtBottom [Grab]), LoopWhile(AtRight [Drop]), LoopWhile(AtBottom [Drop]), If(NotAtRight [MoveLeft] [MoveRight]), MoveUp, LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveLeft]), MoveUp, LoopWhile(AtTop [MoveRight]), If(AtRight [MoveLeft] [MoveRight]), MoveDown, LoopWhile(AtLeft [MoveDown]), If(NotAtBottom [MoveDown] [MoveRight]), MoveUp, If(NotAtBottom [MoveRight] [Grab]), If(AtLeft [MoveDown] [MoveRight]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtTop [Drop]), If(NotAtLeft [MoveDown] [MoveDown]), MoveUp, If(NotAtLeft [MoveDown] [MoveDown]), MoveUp, MoveDown, If(AtLeft [Drop] [MoveRight]), MoveDown, LoopWhile(AtBottom [MoveDown]), If(NotAtRight [MoveUp] [Drop]), If(AtTop [MoveRight] [MoveUp]), MoveLeft, LoopWhile(AtLeft [MoveDown]), MoveUp, MoveDown, LoopWhile(AtBottom [MoveRight]), If(AtBottom [MoveLeft] [MoveUp]), MoveLeft, MoveDown, If(NotAtTop [MoveRight] [Drop]), LoopWhile(AtTop [MoveLeft]), MoveLeft, LoopWhile(AtRight [MoveDown]), If(NotAtBottom [MoveDown] [Drop]), If(AtTop [MoveLeft] [MoveDown]), MoveLeft, LoopWhile(AtTop [Drop]), If(AtRight [Drop] [MoveLeft]), MoveRight, If(NotAtLeft [MoveUp] [MoveUp]), If(AtRight [Drop] [MoveUp]), If(NotAtTop [MoveRight] [MoveRight]), If(NotAtTop [MoveDown] [Drop]), MoveRight, LoopWhile(AtBottom [MoveRight]), If(AtBottom [MoveUp] [MoveUp]), LoopWhile(AtBottom [Drop]), MoveDown, MoveUp, LoopWhile(NotAtBottom [MoveDown]), MoveRight, MoveUp, If(AtRight [Drop] [MoveLeft]), MoveLeft, If(AtRight [MoveUp] [MoveUp]), If(AtTop [MoveDown] [MoveDown]), LoopWhile(AtLeft [MoveRight]), MoveLeft, LoopWhile(AtBottom [MoveUp]), MoveRight, If(NotAtBottom [MoveUp] [MoveDown]), LoopWhile(AtBottom [Grab]), If(AtBottom [Grab] [MoveRight]), If(AtRight [MoveRight] [MoveLeft]), LoopWhile(AtLeft [MoveRight]), MoveDown, MoveRight, LoopWhile(NotAtRight [MoveRight]), LoopWhile(NotAtRight [Grab]), MoveUp, MoveUp, If(AtLeft [Grab] [MoveDown]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [MoveRight]), If(NotAtRight [MoveRight] [MoveUp]), LoopWhile(NotAtRight [MoveUp]), MoveUp, If(NotAtRight [MoveDown] [MoveLeft]), MoveUp, LoopWhile(AtLeft [Grab]), LoopWhile(AtTop [Drop]), If(AtLeft [Drop] [MoveLeft]), If(NotAtTop [MoveRight] [Drop]), If(NotAtBottom [MoveLeft] [MoveRight]), LoopWhile(AtBottom [MoveUp]), If(NotAtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [Grab]), If(NotAtRight [MoveRight] [MoveDown]), If(NotAtRight [MoveLeft] [MoveRight]), If(AtLeft [MoveRight] [MoveRight]), If(AtBottom [MoveRight] [MoveLeft]), If(AtTop [Grab] [MoveLeft]), LoopWhile(AtRight [MoveRight]), If(NotAtLeft [MoveDown] [MoveDown]), LoopWhile(AtTop [Grab]), MoveRight, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [Drop]), If(NotAtBottom [MoveDown] [Drop]), MoveLeft, LoopWhile(AtLeft [MoveLeft]), MoveLeft, If(NotAtBottom [MoveRight] [MoveLeft]), LoopWhile(AtRight [MoveLeft]), MoveLeft, If(NotAtLeft [MoveRight] [MoveLeft]), If(AtTop [MoveDown] [MoveRight]), MoveRight, If(NotAtLeft [MoveLeft] [Drop]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveRight]), MoveLeft, LoopWhile(NotAtRight [MoveRight]), MoveUp, If(NotAtRight [Grab] [MoveLeft]), MoveLeft, LoopWhile(AtLeft [MoveRight]), If(NotAtLeft [MoveRight] [Grab]), MoveLeft, LoopWhile(AtTop [MoveRight]), LoopWhile(AtLeft [Drop]), If(AtBottom [MoveDown] [MoveDown]), MoveUp, LoopWhile(AtTop [Grab]), MoveDown, MoveUp, If(NotAtLeft [MoveUp] [MoveLeft]), If(AtBottom [MoveUp] [MoveLeft]), If(AtLeft [MoveRight] [MoveRight]), MoveDown, If(NotAtTop [MoveUp] [MoveLeft]), MoveLeft, LoopWhile(AtRight [MoveRight]), MoveUp, LoopWhile(AtRight [Grab]), LoopWhile(AtTop [Grab]), LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [MoveDown]), If(AtLeft [MoveUp] [MoveDown]), MoveDown, MoveLeft, LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [MoveRight]), If(NotAtTop [MoveRight] [Grab]), LoopWhile(AtBottom [MoveRight]), If(NotAtBottom [MoveDown] [Grab]), LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [Drop]), LoopWhile(AtLeft [MoveLeft]), MoveRight, MoveLeft, LoopWhile(NotAtRight [MoveRight]), If(AtTop [MoveLeft] [MoveLeft]), LoopWhile(AtTop [Drop]), LoopWhile(AtBottom [Drop]), MoveUp, LoopWhile(AtLeft [Grab]), MoveLeft, LoopWhile(AtLeft [MoveRight]), If(NotAtLeft [MoveUp] [MoveUp]), If(AtTop [MoveLeft] [MoveDown]), LoopWhile(AtLeft [MoveDown]), MoveRight, If(AtRight [MoveDown] [MoveDown]), If(AtLeft [Drop] [MoveRight]), MoveLeft, LoopWhile(AtTop [MoveDown]), If(NotAtRight [MoveUp] [MoveLeft]), MoveUp, LoopWhile(AtTop [MoveUp]), MoveLeft, If(NotAtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [MoveDown]), If(AtBottom [Grab] [MoveRight]), MoveLeft, LoopWhile(AtTop [Grab]), If(NotAtBottom [MoveDown] [MoveRight]), MoveLeft, If(AtLeft [MoveRight] [MoveRight]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtLeft [Grab]), MoveLeft, If(NotAtBottom [MoveDown] [MoveRight]), LoopWhile(AtLeft [Drop]), LoopWhile(AtTop [Drop]), MoveUp, If(NotAtTop [MoveDown] [Grab]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [MoveRight]), MoveUp, If(AtBottom [Grab] [MoveUp]), LoopWhile(AtLeft [MoveDown]), MoveUp, If(AtLeft [MoveUp] [MoveUp]), LoopWhile(AtTop [MoveLeft]), If(AtRight [MoveDown] [MoveDown]), MoveDown, LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtRight [MoveDown]), If(AtTop [MoveRight] [MoveUp]), LoopWhile(AtLeft [MoveRight]), If(NotAtTop [MoveDown] [MoveLeft]), MoveLeft, MoveLeft, LoopWhile(AtBottom [MoveRight]), If(NotAtRight [MoveUp] [Drop]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [MoveRight]), If(NotAtRight [MoveDown] [MoveLeft]), LoopWhile(AtTop [MoveDown]), If(AtTop [MoveLeft] [MoveUp]), MoveLeft, MoveDown, MoveUp, If(AtTop [MoveUp] [MoveDown]), If(NotAtTop [MoveDown] [Grab]), If(AtLeft [MoveLeft] [MoveDown]), LoopWhile(AtBottom [MoveUp]), If(AtRight [MoveRight] [MoveRight]), LoopWhile(AtRight [MoveLeft]), MoveUp, If(NotAtBottom [MoveLeft] [MoveDown]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [MoveRight]), If(NotAtTop [MoveRight] [Grab]), MoveUp, LoopWhile(AtTop [Drop]), If(AtLeft [Drop] [MoveUp]), MoveDown, MoveDown, LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [Grab]), LoopWhile(AtTop [MoveDown]), MoveLeft, If(AtRight [MoveLeft] [MoveLeft]), MoveRight, MoveRight, If(NotAtRight [MoveLeft] [MoveUp]), LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtBottom [Drop]), If(NotAtRight [MoveUp] [MoveDown]), MoveRight, LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtTop [MoveDown]), MoveLeft, LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtTop [Grab]), If(AtTop [Grab] [MoveDown]), If(AtTop [MoveUp] [MoveRight]), MoveRight, MoveDown, LoopWhile(AtTop [MoveRight]), MoveLeft, MoveDown, If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [MoveUp]), MoveUp, LoopWhile(AtLeft [Drop]), MoveUp, If(NotAtTop [MoveUp] [Drop]), If(AtTop [Grab] [MoveLeft]), If(AtRight [MoveDown] [MoveDown]), LoopWhile(AtRight [MoveLeft]), MoveLeft, If(NotAtBottom [MoveRight] [Grab]), LoopWhile(AtRight [Drop]), If(AtRight [Grab] [MoveDown]), LoopWhile(AtRight [MoveDown]), If(AtBottom [MoveUp] [MoveDown]), If(NotAtBottom [MoveUp] [Drop]), If(NotAtBottom [MoveDown] [MoveUp]), LoopWhile(AtLeft [Grab]), LoopWhile(AtTop [Drop]), MoveDown, MoveUp, If(NotAtRight [MoveUp] [MoveRight]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtBottom [MoveDown]), If(NotAtLeft [MoveRight] [MoveUp]), MoveDown, MoveUp, LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [MoveRight]), If(NotAtRight [MoveUp] [MoveRight]), MoveUp, MoveUp, If(NotAtLeft [MoveLeft] [MoveUp]), If(NotAtLeft [MoveUp] [Drop]), LoopWhile(AtLeft [Drop]), LoopWhile(AtTop [MoveRight]), If(NotAtRight [MoveDown] [MoveDown]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [Drop]), MoveUp, If(NotAtTop [MoveUp] [MoveUp]), LoopWhile(AtRight [Drop]), LoopWhile(AtRight [Grab]), LoopWhile(AtRight [MoveLeft]), If(AtRight [MoveUp] [MoveRight]), LoopWhile(AtLeft [MoveLeft]), If(NotAtTop [MoveRight] [MoveUp]), LoopWhile(AtBottom [Grab]), If(AtTop [Grab] [MoveDown]), If(NotAtBottom [MoveDown] [MoveUp]), If(AtLeft [MoveLeft] [MoveDown]), If(AtRight [Drop] [MoveUp]), MoveRight, LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [MoveDown]), MoveDown, MoveDown, MoveLeft, LoopWhile(AtLeft [Drop]), MoveLeft, If(AtBottom [Drop] [MoveLeft]), MoveUp, LoopWhile(AtBottom [Drop]), MoveDown, MoveUp, If(AtLeft [MoveUp] [MoveDown]), MoveLeft, MoveDown, If(NotAtRight [MoveDown] [Grab]), LoopWhile(AtLeft [MoveRight]), MoveRight, MoveDown, If(NotAtRight [MoveLeft] [MoveRight]), If(NotAtBottom [MoveRight] [MoveRight]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [MoveUp]), MoveRight, If(AtTop [Grab] [MoveRight]), LoopWhile(AtRight [MoveUp]), If(NotAtTop [MoveLeft] [MoveLeft]), If(NotAtRight [MoveUp] [Drop]), If(AtRight [Drop] [MoveLeft]), LoopWhile(AtRight [MoveRight]), If(NotAtBottom [MoveUp] [Drop]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtTop [MoveLeft]), If(NotAtBottom [MoveLeft] [MoveUp]), MoveUp, If(NotAtLeft [MoveUp] [MoveDown]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [Grab]), LoopWhile(AtBottom [MoveDown]), If(AtLeft [Grab] [MoveDown]), MoveDown, MoveUp, MoveRight, LoopWhile(AtBottom [MoveRight]), MoveUp, If(AtLeft [Grab] [MoveDown]), If(NotAtLeft [MoveUp] [MoveUp]), MoveUp, If(AtRight [MoveDown] [MoveRight]), MoveUp, MoveDown, LoopWhile(AtLeft [Drop]), LoopWhile(AtBottom [MoveRight]), If(NotAtBottom [MoveDown] [MoveUp]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [MoveDown]), If(NotAtRight [MoveLeft] [MoveLeft]), LoopWhile(AtRight [Drop]), MoveUp, LoopWhile(AtTop [MoveLeft]), MoveDown, LoopWhile(AtLeft [MoveLeft]), If(AtRight [MoveDown] [MoveUp]), MoveDown, MoveRight, If(AtBottom [MoveLeft] [MoveRight]), If(NotAtLeft [MoveRight] [MoveRight]), MoveLeft, If(NotAtBottom [MoveDown] [MoveUp]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtTop [MoveLeft]), If(AtBottom [MoveLeft] [MoveRight]), MoveLeft, If(AtBottom [Grab] [MoveRight]), MoveDown, MoveUp, MoveUp, LoopWhile(AtLeft [MoveRight]), MoveUp, LoopWhile(AtRight [MoveLeft]), If(NotAtBottom [MoveDown] [MoveDown]), LoopWhile(AtBottom [Grab]), If(NotAtBottom [MoveLeft] [Grab]), MoveDown, LoopWhile(AtRight [MoveUp]), MoveUp, If(AtTop [Grab] [MoveDown]), LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [MoveUp]), If(NotAtTop [MoveRight] [Grab]), LoopWhile(AtLeft [MoveUp]), If(AtRight [Drop] [MoveUp]), If(NotAtTop [MoveUp] [MoveLeft]), LoopWhile(AtTop [MoveDown]), If(NotAtBottom [MoveRight] [Drop]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveUp, MoveUp, If(NotAtTop [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveRight]), If(AtRight [MoveUp] [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), If(NotAtBottom [MoveDown] [MoveUp]), MoveUp, If(NotAtLeft [MoveUp] [Grab]), MoveDown, If(AtTop [MoveUp] [MoveLeft]), MoveDown, LoopWhile(AtLeft [MoveRight]), If(NotAtLeft [MoveDown] [MoveLeft]), If(NotAtLeft [MoveDown] [MoveLeft]), MoveUp, MoveUp, MoveUp, If(NotAtRight [MoveDown] [MoveRight]), If(AtLeft [MoveRight] [MoveDown]), LoopWhile(AtBottom [Grab]), MoveDown, If(AtLeft [MoveDown] [MoveLeft]), If(NotAtRight [MoveUp] [Grab]), If(AtBottom [MoveLeft] [MoveUp]), MoveLeft, If(AtRight [Grab] [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveRight, If(NotAtTop [MoveLeft] [MoveUp]), MoveDown, If(NotAtTop [MoveDown] [MoveRight]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [Drop]), MoveUp, LoopWhile(AtBottom [Grab]), If(NotAtRight [MoveRight] [MoveRight]), If(AtTop [Drop] [MoveDown]), MoveUp, If(AtBottom [MoveLeft] [MoveDown]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [MoveRight]), MoveUp, LoopWhile(AtRight [MoveLeft]), LoopWhile(AtRight [MoveRight]), If(AtLeft [MoveRight] [MoveDown]), LoopWhile(AtLeft [Grab]), LoopWhile(AtTop [Drop]), MoveUp, If(NotAtRight [MoveUp] [MoveDown]), If(NotAtLeft [MoveLeft] [MoveLeft]), MoveDown, MoveUp, If(AtTop [MoveRight] [MoveDown]), LoopWhile(AtTop [MoveLeft]), If(AtTop [MoveRight] [MoveDown]), MoveUp, If(AtBottom [Grab] [MoveDown]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [MoveDown]), If(AtLeft [MoveDown] [MoveRight]), LoopWhile(AtBottom [MoveLeft]), If(NotAtLeft [MoveUp] [MoveRight]), LoopWhile(AtTop [MoveDown]), If(NotAtBottom [MoveUp] [MoveRight]), If(AtBottom [MoveRight] [MoveUp]), If(AtRight [MoveRight] [MoveDown]), LoopWhile(AtRight [Grab]), If(NotAtBottom [MoveLeft] [MoveUp]), If(NotAtRight [MoveUp] [Grab]), MoveDown, MoveLeft, LoopWhile(AtLeft [MoveDown]), If(AtLeft [Grab] [MoveLeft]), If(AtTop [Grab] [MoveRight]), MoveDown, MoveLeft, LoopWhile(AtTop [MoveUp]), MoveUp, If(AtBottom [Drop] [MoveRight]), If(NotAtRight [MoveUp] [MoveUp]), MoveRight, LoopWhile(AtRight [Grab]), If(AtRight [MoveRight] [MoveRight]), LoopWhile(AtLeft [Drop]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtBottom [Drop]), If(NotAtBottom [MoveRight] [MoveUp]), MoveLeft, If(NotAtBottom [MoveDown] [MoveRight]), MoveDown, MoveRight, MoveRight, If(NotAtBottom [MoveUp] [Grab]), If(AtTop [MoveDown] [MoveUp]), LoopWhile(AtLeft [Drop]), MoveDown, MoveUp, MoveDown, If(AtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtTop [MoveDown]), MoveDown, MoveUp, LoopWhile(AtRight [Grab]), MoveDown, If(AtRight [Drop] [MoveDown]), If(NotAtBottom [MoveUp] [Grab]), If(AtBottom [MoveDown] [MoveUp]), MoveDown, If(AtTop [MoveRight] [MoveRight]), MoveLeft, MoveLeft, LoopWhile(AtLeft [Drop]), MoveRight, If(NotAtTop [MoveUp] [MoveDown]), If(NotAtTop [MoveLeft] [Drop]), MoveRight, LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [MoveLeft]), MoveDown, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [Grab]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [MoveUp]), If(AtRight [MoveDown] [MoveDown]), MoveDown, MoveDown, MoveUp, MoveDown, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [Drop]), If(AtLeft [Drop] [MoveDown]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [MoveRight]), MoveRight, If(AtBottom [MoveUp] [MoveLeft]), If(AtRight [MoveLeft] [MoveRight]), LoopWhile(AtTop [MoveDown]), MoveUp, LoopWhile(AtBottom [Grab]), MoveUp, LoopWhile(AtBottom [MoveLeft]), If(NotAtLeft [MoveUp] [MoveLeft]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [MoveRight]), MoveRight, MoveLeft, LoopWhile(AtRight [Grab]), MoveRight, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtTop [MoveDown]), MoveRight, If(AtLeft [MoveUp] [MoveUp]), MoveRight, MoveDown, MoveDown, MoveDown, If(AtLeft [MoveUp] [MoveUp]), LoopWhile(NotAtRight [MoveDown]), MoveUp, MoveUp, If(AtTop [MoveDown] [MoveLeft]), MoveUp, If(AtLeft [Drop] [MoveUp]), If(AtLeft [MoveRight] [MoveLeft]), LoopWhile(AtRight [MoveUp]), MoveDown, If(NotAtTop [MoveDown] [MoveDown]), MoveUp, LoopWhile(AtRight [MoveRight]), MoveLeft, MoveUp, If(AtRight [Drop] [MoveDown]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [MoveRight]), MoveLeft, LoopWhile(AtBottom [MoveUp]), LoopWhile(AtTop [MoveDown]), MoveDown, MoveDown, If(NotAtBottom [MoveUp] [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), MoveLeft, LoopWhile(AtLeft [Grab]), MoveUp, LoopWhile(AtLeft [MoveDown]), LoopWhile(AtTop [MoveDown]), If(NotAtTop [MoveUp] [MoveLeft]), LoopWhile(AtLeft [MoveRight]), If(AtLeft [MoveDown] [MoveUp]), MoveLeft, MoveRight, If(AtBottom [Drop] [MoveRight]), LoopWhile(AtLeft [MoveDown]), If(NotAtBottom [MoveLeft] [Drop]), MoveLeft, MoveDown, MoveUp, MoveRight, LoopWhile(AtTop [Drop]), MoveDown, If(AtBottom [MoveUp] [MoveUp]), If(NotAtLeft [MoveDown] [Grab]), If(AtRight [MoveRight] [MoveDown]), MoveUp, If(AtLeft [Grab] [MoveUp]), MoveRight, If(NotAtLeft [MoveDown] [MoveUp]), LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [MoveRight]), If(AtLeft [MoveRight] [MoveDown]), LoopWhile(AtTop [MoveUp]), If(NotAtBottom [MoveUp] [MoveDown]), If(AtLeft [Drop] [MoveDown]), If(NotAtRight [MoveDown] [MoveDown]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [MoveUp]), MoveRight, If(AtTop [MoveRight] [MoveUp]), If(NotAtTop [MoveUp] [MoveRight]), If(AtRight [MoveRight] [MoveUp]), LoopWhile(AtBottom [MoveLeft]), If(AtBottom [Drop] [MoveRight]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtTop [MoveDown]), If(AtRight [MoveDown] [MoveUp]), If(AtLeft [MoveUp] [MoveDown]), MoveDown, MoveUp, MoveDown, LoopWhile(AtRight [Drop]), If(NotAtRight [MoveDown] [Grab]), MoveLeft, LoopWhile(AtRight [MoveUp]), MoveRight, MoveUp, If(AtBottom [Drop] [MoveRight]), MoveDown, If(AtBottom [MoveRight] [MoveUp]), LoopWhile(AtLeft [Drop]), LoopWhile(AtBottom [MoveRight]), If(AtLeft [MoveRight] [MoveLeft]), If(AtBottom [MoveLeft] [MoveDown]), If(AtBottom [MoveDown] [MoveRight]), If(NotAtRight [MoveRight] [Drop]), LoopWhile(AtTop [MoveLeft]), If(AtLeft [MoveDown] [MoveLeft]), If(AtLeft [Grab] [MoveUp]), If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveDown]), If(AtTop [MoveRight] [MoveRight]), If(AtLeft [Grab] [MoveLeft]), MoveLeft, MoveLeft, MoveUp, LoopWhile(AtRight [MoveRight]), If(NotAtTop [MoveLeft] [MoveDown]), LoopWhile(AtRight [MoveDown]), If(NotAtTop [MoveDown] [MoveUp]), If(NotAtTop [MoveDown] [MoveRight]), LoopWhile(AtBottom [MoveDown]), If(AtTop [Drop] [MoveDown]), LoopWhile(AtLeft [MoveRight]), If(NotAtTop [MoveLeft] [MoveLeft]), MoveUp, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [MoveRight]), If(AtLeft [MoveDown] [MoveUp]), If(AtTop [Drop] [MoveLeft]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [MoveLeft]), MoveRight, LoopWhile(AtRight [MoveDown]), MoveLeft, LoopWhile(AtBottom [Drop]), MoveLeft, If(AtLeft [MoveLeft] [MoveDown]), If(NotAtTop [MoveUp] [MoveLeft]), LoopWhile(AtLeft [Grab]), LoopWhile(NotAtTop [MoveUp]), If(AtRight [MoveRight] [MoveLeft]), MoveLeft, LoopWhile(AtBottom [MoveUp]), MoveRight, If(NotAtLeft [MoveDown] [MoveLeft]), If(NotAtRight [MoveDown] [MoveDown]), LoopWhile(AtBottom [MoveUp]), If(NotAtTop [MoveRight] [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), If(NotAtBottom [MoveRight] [Grab]), If(AtLeft [MoveUp] [MoveRight]), LoopWhile(AtBottom [MoveRight]), If(AtBottom [MoveUp] [MoveLeft]), LoopWhile(AtLeft [Grab]), MoveLeft, If(AtBottom [Grab] [MoveRight]), If(AtLeft [MoveLeft] [MoveRight]), MoveRight, If(AtLeft [MoveUp] [MoveRight]), LoopWhile(AtTop [Grab]), LoopWhile(AtRight [MoveDown]), If(AtBottom [MoveRight] [MoveDown]), If(NotAtBottom [MoveLeft] [Drop]), If(NotAtTop [MoveLeft] [MoveRight]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtLeft [MoveDown]), MoveRight, MoveUp, MoveDown, MoveDown, LoopWhile(AtTop [MoveDown]), If(NotAtRight [MoveDown] [MoveLeft]), If(AtRight [MoveUp] [MoveUp]), MoveRight, MoveLeft, If(AtRight [Grab] [MoveDown]), LoopWhile(AtTop [Drop]), LoopWhile(AtBottom [MoveLeft]), MoveDown, If(NotAtBottom [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [MoveRight]), MoveUp, If(AtBottom [MoveRight] [MoveLeft]), MoveRight, MoveDown, MoveUp, MoveUp, MoveUp, LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtTop [Drop]), If(NotAtTop [MoveUp] [MoveRight]), MoveRight, MoveUp, If(NotAtTop [MoveLeft] [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), If(AtRight [MoveRight] [MoveDown]), MoveDown, LoopWhile(AtTop [Grab]), If(AtBottom [MoveDown] [MoveRight]), MoveLeft, LoopWhile(AtBottom [Drop]), LoopWhile(AtTop [Drop]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtTop [MoveRight]), If(NotAtRight [MoveLeft] [MoveDown]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtBottom [Drop]), If(NotAtLeft [MoveRight] [MoveLeft]), LoopWhile(AtTop [MoveDown]), MoveDown, LoopWhile(AtLeft [Drop]), MoveRight, If(AtBottom [MoveLeft] [MoveRight]), If(AtRight [Grab] [MoveRight]), If(AtTop [MoveLeft] [MoveRight]), If(AtRight [MoveDown] [MoveUp]), LoopWhile(AtRight [MoveRight]), MoveLeft, MoveLeft, LoopWhile(AtLeft [MoveRight]), MoveLeft, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [Drop]), If(NotAtTop [MoveLeft] [MoveUp]), MoveRight, MoveLeft, LoopWhile(AtRight [MoveRight]), LoopWhile(AtBottom [MoveUp]), If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtTop [MoveUp]), If(AtRight [MoveUp] [MoveUp]), LoopWhile(NotAtLeft [MoveLeft]), If(NotAtLeft [MoveRight] [MoveRight]), If(AtRight [Grab] [MoveRight]), If(AtLeft [MoveDown] [MoveUp]), If(AtLeft [Grab] [MoveDown]), If(AtBottom [MoveLeft] [MoveRight]), If(AtLeft [MoveRight] [MoveDown]), LoopWhile(AtTop [Drop]), MoveDown, MoveRight, LoopWhile(AtLeft [MoveUp]), If(AtRight [Drop] [MoveRight]), MoveUp, MoveDown, LoopWhile(AtBottom [MoveUp]), If(AtLeft [MoveLeft] [MoveRight]), LoopWhile(AtRight [MoveRight]), MoveLeft, If(NotAtBottom [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [MoveLeft]), If(NotAtTop [MoveDown] [Grab]), If(AtLeft [MoveUp] [MoveUp]), LoopWhile(AtRight [MoveRight]), MoveLeft, If(NotAtRight [MoveDown] [Drop]), MoveRight, LoopWhile(AtTop [MoveRight]), MoveLeft, If(NotAtTop [MoveUp] [Drop]), LoopWhile(AtRight [Grab]), If(AtBottom [MoveRight] [MoveLeft]), MoveUp, LoopWhile(AtBottom [MoveDown]), MoveUp, LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [Grab]), MoveDown, MoveRight, If(NotAtTop [MoveDown] [MoveLeft]), If(NotAtRight [MoveUp] [MoveRight]), MoveUp, LoopWhile(AtTop [MoveDown]), MoveRight, MoveLeft, MoveDown, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [Drop]), If(NotAtBottom [MoveDown] [MoveUp]), MoveRight, MoveLeft, LoopWhile(AtLeft [MoveUp]), MoveRight, MoveRight, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtRight [Drop]), MoveUp, LoopWhile(AtTop [MoveRight]), If(NotAtRight [MoveDown] [MoveLeft]), If(AtRight [Drop] [MoveRight]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtLeft [MoveRight]), If(AtRight [MoveUp] [MoveLeft]), If(AtBottom [MoveDown] [MoveDown]), MoveDown, If(AtBottom [MoveLeft] [MoveLeft]), MoveUp, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [MoveRight]), MoveUp, MoveLeft, If(AtTop [Drop] [MoveDown]), If(NotAtRight [MoveRight] [Grab]), MoveLeft, LoopWhile(AtTop [Drop]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtRight [MoveUp]), If(AtBottom [Drop] [MoveRight]), If(NotAtTop [MoveLeft] [MoveUp]), If(NotAtRight [MoveUp] [MoveRight]), LoopWhile(AtTop [MoveUp]), MoveDown, MoveDown, If(AtLeft [Grab] [MoveRight]), If(NotAtRight [MoveLeft] [MoveRight]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [MoveRight]), MoveLeft, MoveLeft, If(NotAtTop [MoveUp] [Grab]), MoveRight, MoveDown, LoopWhile(AtBottom [MoveLeft]), MoveDown, MoveLeft, If(AtBottom [MoveUp] [MoveRight]), If(AtRight [Drop] [MoveDown]), MoveDown, LoopWhile(AtRight [MoveLeft]), LoopWhile(AtLeft [MoveDown]), MoveLeft, MoveDown, LoopWhile(AtTop [Drop]), MoveUp, LoopWhile(AtRight [MoveRight]), MoveRight, If(NotAtTop [MoveRight] [MoveRight]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [MoveUp]), If(AtRight [MoveUp] [MoveLeft]), MoveUp, LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [Grab]), MoveLeft, If(NotAtRight [MoveRight] [Drop]), LoopWhile(AtTop [MoveRight]), MoveLeft, If(NotAtBottom [MoveRight] [MoveLeft]), MoveLeft, MoveLeft, If(NotAtLeft [MoveUp] [MoveUp]), LoopWhile(AtRight [MoveDown]), MoveRight, LoopWhile(AtRight [MoveRight]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [Grab]), If(AtBottom [MoveRight] [MoveLeft]), MoveUp, If(AtTop [Drop] [MoveRight]), If(AtBottom [Drop] [MoveRight]), MoveRight, If(AtTop [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [Drop]), If(AtLeft [Drop] [MoveRight]), If(AtLeft [MoveUp] [MoveRight]), MoveRight, If(NotAtTop [MoveLeft] [Drop]), LoopWhile(AtBottom [MoveUp]), If(NotAtTop [MoveUp] [Drop]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [Grab]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [Drop]), LoopWhile(AtTop [MoveUp]), If(NotAtBottom [MoveRight] [MoveUp]), MoveLeft, LoopWhile(AtRight [Grab]), LoopWhile(AtTop [MoveLeft]), If(NotAtLeft [MoveRight] [MoveRight]), MoveLeft, LoopWhile(AtTop [MoveLeft]), MoveLeft, If(AtLeft [MoveUp] [MoveRight]), MoveUp, LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), If(NotAtBottom [MoveLeft] [MoveDown]), LoopWhile(AtTop [MoveUp]), If(NotAtLeft [MoveUp] [MoveLeft]), If(AtRight [Drop] [MoveRight]), If(AtBottom [MoveDown] [MoveRight]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [MoveRight]), If(AtBottom [Grab] [MoveLeft]), MoveUp, MoveRight, MoveDown, MoveRight, MoveUp, If(NotAtTop [MoveDown] [MoveDown]), LoopWhile(AtBottom [Grab]), If(NotAtTop [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveLeft]), If(AtRight [MoveUp] [MoveDown]), MoveUp, LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [MoveUp]), If(AtLeft [MoveRight] [MoveUp]), If(NotAtBottom [MoveLeft] [MoveLeft]), If(AtBottom [Drop] [MoveDown]), MoveDown, MoveUp, If(AtTop [MoveRight] [MoveDown]), MoveDown, MoveUp, MoveRight, If(NotAtBottom [MoveLeft] [MoveDown]), MoveRight, MoveLeft, LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [MoveDown]), If(NotAtTop [MoveDown] [MoveUp]), LoopWhile(AtLeft [MoveUp]), MoveLeft, LoopWhile(AtLeft [MoveRight]), MoveRight, LoopWhile(AtTop [Grab]), LoopWhile(AtBottom [Drop]), If(NotAtLeft [MoveUp] [MoveLeft]), MoveRight, If(AtTop [MoveLeft] [MoveRight]), LoopWhile(AtTop [MoveUp]), MoveDown, LoopWhile(AtTop [Grab]), LoopWhile(NotAtRight [MoveRight]), If(AtBottom [MoveDown] [MoveDown]), LoopWhile(NotAtRight [MoveDown]), MoveLeft, MoveLeft, MoveRight, If(AtRight [MoveDown] [MoveLeft]), MoveUp, MoveLeft, LoopWhile(AtTop [MoveLeft]), If(NotAtRight [MoveDown] [MoveRight]), LoopWhile(AtTop [Drop]), LoopWhile(AtRight [MoveDown]), MoveLeft, LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [MoveLeft]), If(NotAtLeft [MoveUp] [MoveRight]), If(AtBottom [MoveUp] [MoveUp]), MoveDown, If(NotAtTop [MoveRight] [Drop]), MoveLeft, If(AtTop [Drop] [MoveUp]), MoveLeft, LoopWhile(AtBottom [MoveRight]), If(AtRight [Grab] [MoveUp]), If(NotAtLeft [MoveLeft] [Drop]), LoopWhile(AtRight [MoveRight]), If(NotAtBottom [MoveRight] [Grab]), If(NotAtBottom [MoveRight] [MoveRight]), LoopWhile(AtRight [MoveLeft]), MoveLeft, MoveLeft, MoveLeft, LoopWhile(AtTop [MoveUp]), LoopWhile(AtLeft [Drop]), LoopWhile(AtTop [Grab]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [MoveDown]), MoveRight, If(AtLeft [Drop] [MoveDown]), If(AtBottom [MoveUp] [MoveUp]), If(NotAtRight [MoveDown] [MoveDown]), If(AtRight [MoveUp] [MoveUp]), If(NotAtTop [MoveDown] [Drop]), MoveDown, If(NotAtTop [MoveRight] [MoveUp]), MoveDown, LoopWhile(AtTop [MoveLeft]), If(AtRight [MoveUp] [MoveDown]), MoveUp, LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [MoveUp]), If(AtRight [MoveUp] [MoveDown]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtBottom [MoveUp]), MoveLeft, MoveUp, MoveUp, LoopWhile(AtTop [Drop]), If(AtBottom [MoveLeft] [MoveDown]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtBottom [Grab]), MoveUp, If(AtBottom [MoveLeft] [MoveRight]), If(AtBottom [MoveRight] [MoveUp]), If(NotAtRight [MoveUp] [MoveUp]), LoopWhile(AtTop [MoveUp]), MoveDown, MoveUp, MoveLeft, LoopWhile(AtRight [MoveRight]), If(AtBottom [MoveLeft] [MoveLeft]), If(AtTop [Grab] [MoveLeft]), MoveLeft, If(NotAtLeft [Drop] [MoveRight]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveUp]), If(AtLeft [Drop] [MoveLeft]), LoopWhile(AtRight [MoveUp]), MoveUp, LoopWhile(NotAtLeft [MoveRight]), If(NotAtTop [MoveDown] [Grab]), MoveDown, MoveRight, If(AtTop [Drop] [MoveUp]), MoveDown, MoveDown, LoopWhile(AtTop [MoveLeft]), If(AtRight [Grab] [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [Grab]), LoopWhile(AtRight [Drop]), MoveDown, LoopWhile(AtRight [MoveUp]), If(NotAtBottom [MoveUp] [Grab]), MoveRight, MoveRight, LoopWhile(AtRight [MoveUp]), MoveRight, If(NotAtBottom [MoveUp] [Grab]), If(NotAtTop [MoveRight] [MoveDown]), LoopWhile(AtLeft [MoveLeft]), If(AtTop [Grab] [MoveLeft]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [Grab]), LoopWhile(AtLeft [MoveLeft]), MoveUp, LoopWhile(AtTop [MoveLeft]), If(AtLeft [MoveDown] [MoveRight]), MoveDown, LoopWhile(AtTop [Grab]), LoopWhile(AtRight [MoveDown]), If(AtRight [MoveLeft] [MoveDown]), MoveDown, MoveUp, If(NotAtRight [MoveLeft] [Drop]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [MoveUp]), MoveDown, MoveUp, LoopWhile(AtTop [MoveDown]), LoopWhile(AtLeft [Drop]), MoveDown, If(AtTop [MoveLeft] [MoveDown]), MoveLeft, LoopWhile(AtBottom [MoveDown]), MoveUp, LoopWhile(AtTop [MoveDown]), MoveRight, LoopWhile(AtBottom [MoveDown]), MoveRight, If(AtRight [Drop] [MoveDown]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtLeft [Grab]), MoveUp, MoveUp, If(NotAtBottom [MoveRight] [MoveLeft]), LoopWhile(AtRight [MoveLeft]), MoveUp, If(AtRight [MoveDown] [MoveRight]), If(NotAtRight [MoveDown] [Drop]), MoveRight, MoveUp, LoopWhile(NotAtTop [MoveUp]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [MoveDown]), If(AtRight [MoveLeft] [MoveRight]), LoopWhile(NotAtTop [Drop]), MoveDown, If(AtTop [MoveDown] [MoveDown]), If(AtBottom [MoveRight] [MoveDown]), LoopWhile(NotAtRight [Grab]), MoveLeft, If(AtTop [MoveUp] [MoveUp]), If(AtTop [MoveDown] [MoveRight]), If(AtRight [MoveLeft] [MoveUp]), LoopWhile(AtTop [MoveDown]), MoveUp, LoopWhile(AtRight [Grab]), If(AtRight [MoveRight] [MoveDown]), LoopWhile(AtRight [Grab]), MoveDown, MoveLeft, LoopWhile(AtLeft [MoveDown]), MoveUp, If(NotAtTop [MoveLeft] [MoveLeft]), MoveDown, If(AtRight [MoveRight] [MoveRight]), If(NotAtBottom [MoveLeft] [MoveLeft]), If(AtLeft [MoveRight] [MoveLeft]), MoveRight, MoveUp, If(NotAtTop [MoveLeft] [Grab]), MoveDown, LoopWhile(AtRight [MoveDown]), MoveRight, If(NotAtBottom [MoveDown] [Grab]), MoveRight, If(NotAtRight [MoveDown] [MoveUp]), If(AtBottom [MoveRight] [MoveLeft]), If(NotAtTop [MoveRight] [MoveLeft]), If(NotAtLeft [MoveRight] [MoveLeft]), LoopWhile(AtBottom [Grab]), MoveLeft, LoopWhile(AtTop [MoveDown]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [MoveRight]), If(NotAtBottom [MoveDown] [MoveDown]), LoopWhile(AtLeft [MoveUp]), MoveUp, If(NotAtLeft [MoveLeft] [MoveRight]), MoveUp, If(AtBottom [Drop] [MoveLeft]), MoveDown, MoveDown, If(NotAtBottom [MoveLeft] [MoveUp]), If(AtTop [MoveLeft] [MoveLeft]), LoopWhile(AtRight [MoveUp]), If(AtTop [Drop] [MoveRight]), LoopWhile(AtLeft [Drop]), If(AtRight [Grab] [MoveDown]), If(AtRight [MoveRight] [MoveRight]), If(AtTop [MoveDown] [MoveUp]), If(AtTop [MoveUp] [MoveUp]), MoveUp, LoopWhile(AtLeft [MoveLeft]), If(NotAtLeft [MoveLeft] [Drop]), MoveRight, LoopWhile(AtTop [MoveLeft]), MoveDown, If(NotAtLeft [MoveLeft] [Drop]), MoveUp, If(AtRight [Drop] [MoveUp]), If(AtLeft [Grab] [MoveRight]), MoveUp, MoveLeft, If(NotAtRight [MoveRight] [Grab]), LoopWhile(AtBottom [MoveDown]), MoveDown, MoveDown, MoveLeft, If(AtBottom [MoveUp] [MoveDown]), If(NotAtBottom [MoveDown] [MoveUp]), If(AtLeft [Drop] [MoveDown]), If(AtTop [MoveRight] [MoveDown]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [Drop]), MoveRight, LoopWhile(AtLeft [MoveUp]), If(NotAtBottom [MoveUp] [Drop]), If(AtRight [MoveRight] [MoveDown]), If(NotAtTop [MoveRight] [MoveUp]), MoveUp, LoopWhile(AtTop [MoveRight]), If(NotAtRight [MoveRight] [Drop]), MoveUp, MoveLeft, LoopWhile(AtBottom [MoveUp]), LoopWhile(AtTop [MoveDown]), If(NotAtLeft [MoveLeft] [Grab]), LoopWhile(AtTop [MoveUp]), If(AtTop [Drop] [MoveDown]), LoopWhile(AtTop [Drop]), MoveDown, LoopWhile(AtRight [Drop]), MoveUp, If(AtTop [MoveDown] [MoveLeft]), MoveUp, MoveUp, If(AtRight [Grab] [MoveUp]), MoveRight, MoveDown, MoveRight, LoopWhile(AtTop [MoveLeft]), If(AtBottom [MoveLeft] [MoveDown]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [Drop]), MoveLeft, If(AtTop [MoveDown] [MoveUp]), If(NotAtTop [MoveUp] [MoveDown]), LoopWhile(AtLeft [Grab]), MoveDown, LoopWhile(AtRight [MoveUp]), If(AtTop [MoveUp] [MoveDown]), If(NotAtLeft [MoveDown] [MoveUp]), If(AtLeft [MoveLeft] [MoveUp]), MoveRight, LoopWhile(AtRight [Grab]), If(AtLeft [MoveDown] [MoveRight]), LoopWhile(AtBottom [Grab]), LoopWhile(AtRight [MoveUp]), If(AtBottom [MoveDown] [MoveRight]), If(AtTop [MoveRight] [MoveRight]), If(NotAtLeft [MoveLeft] [Drop]), MoveLeft, MoveRight, LoopWhile(AtLeft [Grab]), MoveDown, LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [Drop]), LoopWhile(AtTop [MoveUp]), If(NotAtLeft [MoveLeft] [Drop]), If(AtTop [MoveRight] [MoveLeft]), MoveUp, LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [Grab]), If(NotAtLeft [MoveUp] [Drop]), MoveLeft, MoveUp, MoveUp, If(AtRight [Drop] [MoveRight]), MoveRight, LoopWhile(AtLeft [Drop]), If(NotAtRight [MoveDown] [MoveUp]), MoveLeft, If(NotAtRight [MoveUp] [Grab]), If(AtBottom [Grab] [MoveUp]), If(AtLeft [MoveRight] [MoveDown]), LoopWhile(AtBottom [MoveRight]), MoveDown, LoopWhile(AtRight [Drop]), If(AtTop [MoveDown] [MoveUp]), If(AtRight [Grab] [MoveRight]), MoveDown, LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [MoveUp]), If(NotAtLeft [MoveRight] [MoveRight]), If(NotAtLeft [MoveLeft] [Drop]), If(AtTop [MoveLeft] [MoveDown]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [MoveUp]), MoveRight, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [Grab]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtRight [MoveDown]), MoveLeft, LoopWhile(AtBottom [Grab]), If(NotAtLeft [MoveRight] [Grab]), LoopWhile(AtTop [Drop]), MoveUp, If(NotAtLeft [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveRight]), MoveUp, If(AtLeft [Grab] [MoveUp]), If(AtLeft [Grab] [MoveDown]), MoveUp, MoveLeft, LoopWhile(AtTop [MoveUp]), MoveDown, LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveDown]), If(NotAtRight [MoveLeft] [MoveRight]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [MoveUp]), LoopWhile(NotAtTop [MoveUp]), MoveLeft, If(NotAtRight [MoveLeft] [MoveLeft]), LoopWhile(NotAtTop [MoveRight]), If(AtLeft [MoveLeft] [MoveDown]), LoopWhile(AtBottom [Drop]), MoveUp, LoopWhile(AtRight [MoveUp]), MoveLeft, MoveLeft, If(NotAtLeft [MoveRight] [Drop]), MoveRight, LoopWhile(NotAtRight [MoveRight]), MoveLeft, LoopWhile(AtRight [MoveLeft]), MoveDown, MoveLeft, MoveDown, MoveLeft, LoopWhile(AtRight [MoveDown]), If(AtLeft [Drop] [MoveRight]), MoveUp, MoveDown, LoopWhile(NotAtRight [MoveRight]), LoopWhile(NotAtRight [Grab]), LoopWhile(AtTop [MoveDown]), If(NotAtBottom [MoveDown] [MoveUp]), MoveUp, If(NotAtBottom [MoveUp] [Drop]), LoopWhile(AtBottom [Grab]), MoveDown, If(NotAtTop [MoveUp] [Grab]), LoopWhile(AtTop [MoveLeft]), LoopWhile(NotAtRight [Grab]), LoopWhile(NotAtBottom [MoveDown]), LoopWhile(AtLeft [MoveUp]), Grab, If(NotAtBottom [MoveLeft] [MoveUp]), LoopWhile(AtLeft [Drop]), If(AtLeft [MoveRight] [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), If(NotAtBottom [MoveLeft] [Drop]), LoopWhile(AtRight [MoveRight]), MoveDown, LoopWhile(AtTop [Drop]), LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [MoveRight]), MoveRight, LoopWhile(AtTop [Grab]), MoveLeft, MoveLeft, MoveRight, LoopWhile(NotAtBottom [Drop]), MoveLeft, If(NotAtLeft [MoveLeft] [Grab]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtRight [Grab]), If(NotAtBottom [MoveLeft] [MoveUp]), LoopWhile(AtLeft [MoveRight]), If(NotAtBottom [MoveLeft] [MoveLeft]), MoveLeft, LoopWhile(AtRight [Drop]), If(NotAtRight [MoveRight] [MoveLeft]), LoopWhile(AtRight [Grab]), If(AtTop [Drop] [MoveDown]), LoopWhile(AtLeft [Drop]), LoopWhile(NotAtBottom [Drop]), If(NotAtRight [MoveRight] [MoveDown]), LoopWhile(NotAtBottom [MoveLeft]), LoopWhile(NotAtBottom [Drop]), LoopWhile(AtLeft [MoveDown]), MoveUp, If(NotAtRight [MoveLeft] [Grab]), MoveLeft, If(NotAtBottom [MoveUp] [MoveDown]), MoveLeft, MoveUp, MoveUp, If(NotAtRight [MoveUp] [Grab]), Drop, LoopWhile(AtTop [MoveRight]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [MoveLeft]), If(NotAtLeft [Grab] [MoveLeft]), If(NotAtBottom [MoveRight] [MoveRight]), MoveDown, LoopWhile(AtRight [Drop]), If(AtRight [MoveLeft] [MoveUp]), If(AtTop [MoveLeft] [MoveUp]), MoveDown, MoveDown, MoveUp, LoopWhile(AtTop [MoveRight]), Drop, If(NotAtTop [MoveDown] [Grab]), If(NotAtRight [MoveLeft] [MoveRight]), If(NotAtLeft [MoveUp] [MoveRight]), LoopWhile(AtRight [MoveUp]), MoveDown, MoveDown, If(NotAtLeft [MoveLeft] [Drop]), If(NotAtBottom [MoveDown] [MoveUp]), MoveRight, If(NotAtTop [MoveLeft] [MoveUp])])", "cost_per_iteration": [[1, 27], [4, 26], [5, 25], [16, 26], [19, 27], [25, 26], [27, 27], [40, 26], [42, 27], [43, 28], [44, 27], [45, 26], [52, 27], [53, 26], [58, 27], [71, 26], [76, 25], [86, 24], [87, 23], [89, 24], [90, 25], [93, 24], [94, 25], [95, 24], [97, 25], [99, 24], [108, 23], [111, 22], [112, 21], [113, 20], [115, 19], [117, 20], [129, 21], [134, 20], [138, 19], [165, 20], [166, 21], [171, 22], [174, 23], [177, 22], [188, 21], [200, 20], [213, 19], [247, 17], [301, 19], [303, 20], [317, 21], [337, 20], [339, 21], [355, 20], [360, 21], [362, 20], [375, 19], [383, 17], [402, 19], [429, 17], [3569, 16], [3961, 17], [5164, 16], [5247, 15], [6856, 14], [6876, 15], [7107, 14], [7440, 13], [7600, 14], [8072, 13], [8458, 14], [9412, 13], [10025, 12], [10225, 13], [10535, 12], [10773, 13], [10959, 12], [10995, 11], [11531, 10], [11543, 11], [11729, 10], [11857, 11], [12149, 12], [12150, 11], [12456, 10], [12655, 9], [12668, 10], [13120, 9], [13429, 10], [13440, 9], [13454, 8], [13640, 7], [13718, 8], [13761, 7], [13827, 8], [14002, 7], [14042, 5], [14136, 7], [14649, 5], [15676, 7], [15964, 8], [16025, 9], [16116, 8], [16158, 7], [16196, 8], [16210, 9], [16460, 8], [16465, 7], [16530, 5], [16560, 7], [16784, 5], [16894, 7], [16970, 8], [18370, 7], [18664, 8], [18891, 7], [19284, 8], [19501, 7], [19580, 5], [20091, 4], [20113, 9], [20523, 4], [21691, 5], [21730, 7], [21827, 8], [22068, 7], [22344, 8], [22403, 9], [22643, 10], [22794, 9], [22824, 8], [22915, 7], [22996, 5], [23119, 7], [23663, 9], [23953, 7], [24167, 8], [24172, 9], [24868, 8], [24956, 9], [25005, 10], [25008, 12], [25073, 11], [25259, 10], [25385, 11], [25426, 10], [25432, 11], [25577, 10], [25999, 11], [26224, 10], [26251, 7], [26694, 6], [27838, 5], [28318, 4], [28709, 3], [30766, 2], [30804, 1], [37205, 2], [39238, 1], [40008, 0]], "number_of_iterations": 40008}}
