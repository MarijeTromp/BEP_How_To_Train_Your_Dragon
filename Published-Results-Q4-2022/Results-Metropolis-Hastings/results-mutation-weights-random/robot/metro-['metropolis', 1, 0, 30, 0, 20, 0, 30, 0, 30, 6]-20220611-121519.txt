{"test_case": 0, "data": "MetropolisHasting 0: robots/2-0-0.pl, test_cost: 0, train_cost: 0, time: 0.0029793169999999996, length: 36, iterations: 212"}
{"test_case": 1, "data": "MetropolisHasting 1: robots/2-0-1.pl, test_cost: 0, train_cost: 0, time: 0.022452053, length: 72, iterations: 1527"}
{"test_case": 2, "data": "MetropolisHasting 2: robots/2-0-2.pl, test_cost: 0, train_cost: 0, time: 0.004100287000000001, length: 10, iterations: 378"}
{"test_case": 3, "data": "MetropolisHasting 3: robots/2-0-3.pl, test_cost: 0, train_cost: 0, time: 0.0001148490000000002, length: 3, iterations: 10"}
{"test_case": 4, "data": "MetropolisHasting 4: robots/2-0-4.pl, test_cost: 0, train_cost: 0, time: 2.874799999999511e-05, length: 3, iterations: 1"}
{"test_case": 5, "data": "MetropolisHasting 5: robots/2-0-5.pl, test_cost: 0, train_cost: 0, time: 0.0015528719999999968, length: 6, iterations: 143"}
{"test_case": 6, "data": "MetropolisHasting 6: robots/2-0-6.pl, test_cost: 0, train_cost: 0, time: 0.0006750889999999968, length: 18, iterations: 56"}
{"test_case": 7, "data": "MetropolisHasting 7: robots/2-0-7.pl, test_cost: 0, train_cost: 0, time: 0.00043481699999999707, length: 1, iterations: 39"}
{"test_case": 8, "data": "MetropolisHasting 8: robots/2-0-8.pl, test_cost: 0, train_cost: 0, time: 0.124850042, length: 43, iterations: 4991"}
{"test_case": 9, "data": "MetropolisHasting 9: robots/2-0-9.pl, test_cost: 0, train_cost: 0, time: 0.004624351999999998, length: 40, iterations: 309"}
{"test_case": 10, "data": "MetropolisHasting 10: robots/2-0-10.pl, test_cost: 0, train_cost: 0, time: 0.008198783, length: 33, iterations: 651"}
{"test_case": 11, "data": "MetropolisHasting 11: robots/2-1-0.pl, test_cost: 0, train_cost: 0, time: 0.014681359000000001, length: 100, iterations: 810"}
{"test_case": 12, "data": "MetropolisHasting 12: robots/2-1-1.pl, test_cost: 0, train_cost: 0, time: 0.046300772000000004, length: 18, iterations: 2330"}
{"test_case": 13, "data": "MetropolisHasting 13: robots/2-1-2.pl, test_cost: 0, train_cost: 0, time: 0.010069921999999995, length: 74, iterations: 647"}
{"test_case": 14, "data": "MetropolisHasting 14: robots/2-1-3.pl, test_cost: 0, train_cost: 0, time: 0.00010839799999999566, length: 2, iterations: 9"}
{"test_case": 15, "data": "MetropolisHasting 15: robots/2-1-4.pl, test_cost: 0, train_cost: 0, time: 5.171000000001036e-05, length: 2, iterations: 3"}
{"test_case": 16, "data": "MetropolisHasting 16: robots/2-1-5.pl, test_cost: 0, train_cost: 0, time: 0.0004960850000000072, length: 6, iterations: 50"}
{"test_case": 17, "data": "MetropolisHasting 17: robots/2-1-6.pl, test_cost: 0, train_cost: 0, time: 0.009237512000000003, length: 85, iterations: 564"}
{"test_case": 18, "data": "MetropolisHasting 18: robots/2-1-7.pl, test_cost: 0, train_cost: 0, time: 0.00039013200000000137, length: 7, iterations: 33"}
{"test_case": 19, "data": "MetropolisHasting 19: robots/2-1-8.pl, test_cost: 0, train_cost: 0, time: 0.03236000600000001, length: 101, iterations: 2004"}
{"test_case": 20, "data": "MetropolisHasting 20: robots/2-1-9.pl, test_cost: 0, train_cost: 0, time: 0.0022402490000000006, length: 6, iterations: 171"}
{"test_case": 21, "data": "MetropolisHasting 21: robots/2-1-10.pl, test_cost: 0, train_cost: 0, time: 0.034210322999999994, length: 85, iterations: 2267"}
{"test_case": 22, "data": "MetropolisHasting 22: robots/2-2-0.pl, test_cost: 0, train_cost: 0, time: 0.012849004000000004, length: 81, iterations: 868"}
{"test_case": 23, "data": "MetropolisHasting 23: robots/2-2-1.pl, test_cost: 0, train_cost: 0, time: 0.007131651999999995, length: 24, iterations: 632"}
{"test_case": 24, "data": "MetropolisHasting 24: robots/2-2-2.pl, test_cost: 0, train_cost: 0, time: 0.0032296200000000025, length: 22, iterations: 248"}
{"test_case": 25, "data": "MetropolisHasting 25: robots/2-2-3.pl, test_cost: 0, train_cost: 0, time: 0.007867825999999994, length: 31, iterations: 631"}
{"test_case": 26, "data": "MetropolisHasting 26: robots/2-2-4.pl, test_cost: 0, train_cost: 0, time: 0.004495234000000001, length: 47, iterations: 360"}
{"test_case": 27, "data": "MetropolisHasting 27: robots/2-2-5.pl, test_cost: 0, train_cost: 0, time: 0.0028683149999999963, length: 29, iterations: 209"}
{"test_case": 28, "data": "MetropolisHasting 28: robots/2-2-6.pl, test_cost: 0, train_cost: 0, time: 0.003170702999999997, length: 30, iterations: 277"}
{"test_case": 29, "data": "MetropolisHasting 29: robots/2-2-7.pl, test_cost: 0, train_cost: 0, time: 0.009893496000000002, length: 93, iterations: 540"}
{"test_case": 30, "data": "MetropolisHasting 30: robots/2-2-8.pl, test_cost: 0, train_cost: 0, time: 0.0005333869999999998, length: 2, iterations: 30"}
{"test_case": 31, "data": "MetropolisHasting 31: robots/2-2-9.pl, test_cost: 0, train_cost: 0, time: 0.0001325409999999999, length: 5, iterations: 10"}
{"test_case": 32, "data": "MetropolisHasting 32: robots/2-2-10.pl, test_cost: 0, train_cost: 0, time: 0.009767183, length: 75, iterations: 681"}
{"test_case": 33, "data": "MetropolisHasting 33: robots/2-3-0.pl, test_cost: 0, train_cost: 0, time: 0.0004954620000000021, length: 3, iterations: 47"}
{"test_case": 34, "data": "MetropolisHasting 34: robots/2-3-1.pl, test_cost: 0, train_cost: 0, time: 0.005754407, length: 62, iterations: 407"}
{"test_case": 35, "data": "MetropolisHasting 35: robots/2-3-2.pl, test_cost: 0, train_cost: 0, time: 0.014607924000000001, length: 13, iterations: 1062"}
{"test_case": 36, "data": "MetropolisHasting 36: robots/2-3-3.pl, test_cost: 0, train_cost: 0, time: 0.004008436999999997, length: 62, iterations: 309"}
{"test_case": 37, "data": "MetropolisHasting 37: robots/2-3-4.pl, test_cost: 0, train_cost: 0, time: 0.002998233000000003, length: 22, iterations: 230"}
{"test_case": 38, "data": "MetropolisHasting 38: robots/2-3-5.pl, test_cost: 0, train_cost: 0, time: 0.004431336000000001, length: 32, iterations: 364"}
{"test_case": 39, "data": "MetropolisHasting 39: robots/2-3-6.pl, test_cost: 0, train_cost: 0, time: 0.0036715639999999952, length: 30, iterations: 327"}
{"test_case": 40, "data": "MetropolisHasting 40: robots/2-3-7.pl, test_cost: 0, train_cost: 0, time: 0.013527174999999999, length: 7, iterations: 1184"}
{"test_case": 41, "data": "MetropolisHasting 41: robots/2-3-8.pl, test_cost: 0, train_cost: 0, time: 0.0002845209999999994, length: 7, iterations: 23"}
{"test_case": 42, "data": "MetropolisHasting 42: robots/2-3-9.pl, test_cost: 0, train_cost: 0, time: 0.054529009999999996, length: 42, iterations: 2441"}
{"test_case": 43, "data": "MetropolisHasting 43: robots/2-3-10.pl, test_cost: 0, train_cost: 0, time: 0.0034881370000000023, length: 13, iterations: 307"}
{"test_case": 44, "data": "MetropolisHasting 44: robots/2-4-0.pl, test_cost: 0, train_cost: 0, time: 0.00021862200000000165, length: 8, iterations: 16"}
{"test_case": 45, "data": "MetropolisHasting 45: robots/2-4-1.pl, test_cost: 0, train_cost: 0, time: 0.006715173000000005, length: 30, iterations: 557"}
{"test_case": 46, "data": "MetropolisHasting 46: robots/2-4-2.pl, test_cost: 0, train_cost: 0, time: 0.0009231879999999915, length: 18, iterations: 74"}
{"test_case": 47, "data": "MetropolisHasting 47: robots/2-4-3.pl, test_cost: 0, train_cost: 0, time: 0.00017784499999999592, length: 6, iterations: 15"}
{"test_case": 48, "data": "MetropolisHasting 48: robots/2-4-4.pl, test_cost: 0, train_cost: 0, time: 0.00459770100000001, length: 15, iterations: 381"}
{"test_case": 49, "data": "MetropolisHasting 49: robots/2-4-5.pl, test_cost: 0, train_cost: 0, time: 0.0037244910000000103, length: 32, iterations: 289"}
{"test_case": 50, "data": "MetropolisHasting 50: robots/2-4-6.pl, test_cost: 0, train_cost: 0, time: 0.00025825499999999977, length: 0, iterations: 5"}
{"test_case": 51, "data": "MetropolisHasting 51: robots/2-4-7.pl, test_cost: 0, train_cost: 0, time: 0.0018959980000000003, length: 8, iterations: 180"}
{"test_case": 52, "data": "MetropolisHasting 52: robots/2-4-8.pl, test_cost: 0, train_cost: 0, time: 0.028813554999999998, length: 106, iterations: 1934"}
{"test_case": 53, "data": "MetropolisHasting 53: robots/2-4-9.pl, test_cost: 0, train_cost: 0, time: 0.0030879889999999993, length: 30, iterations: 256"}
{"test_case": 54, "data": "MetropolisHasting 54: robots/2-4-10.pl, test_cost: 0, train_cost: 0, time: 0.007388580999999998, length: 20, iterations: 578"}
{"test_case": 55, "data": "MetropolisHasting 55: robots/2-5-0.pl, test_cost: 0, train_cost: 0, time: 0.008799919999999996, length: 9, iterations: 721"}
{"test_case": 56, "data": "MetropolisHasting 56: robots/2-5-1.pl, test_cost: 0, train_cost: 0, time: 0.0016740729999999981, length: 26, iterations: 134"}
{"test_case": 57, "data": "MetropolisHasting 57: robots/2-5-2.pl, test_cost: 0, train_cost: 0, time: 0.008180036000000002, length: 52, iterations: 547"}
{"test_case": 58, "data": "MetropolisHasting 58: robots/2-5-3.pl, test_cost: 0, train_cost: 0, time: 0.0019266530000000004, length: 10, iterations: 166"}
{"test_case": 59, "data": "MetropolisHasting 59: robots/2-5-4.pl, test_cost: 0, train_cost: 0, time: 0.0017194239999999972, length: 18, iterations: 143"}
{"test_case": 60, "data": "MetropolisHasting 60: robots/2-5-5.pl, test_cost: 0, train_cost: 0, time: 0.002997561, length: 5, iterations: 216"}
{"test_case": 61, "data": "MetropolisHasting 61: robots/2-5-6.pl, test_cost: 0, train_cost: 0, time: 0.0001069059999999995, length: 0, iterations: 7"}
{"test_case": 62, "data": "MetropolisHasting 62: robots/2-5-7.pl, test_cost: 0, train_cost: 0, time: 0.0034699929999999993, length: 33, iterations: 284"}
{"test_case": 63, "data": "MetropolisHasting 63: robots/2-5-8.pl, test_cost: 0, train_cost: 0, time: 0.004228501999999999, length: 24, iterations: 351"}
{"test_case": 64, "data": "MetropolisHasting 64: robots/2-5-9.pl, test_cost: 0, train_cost: 0, time: 0.0044320800000000014, length: 9, iterations: 367"}
{"test_case": 65, "data": "MetropolisHasting 65: robots/2-5-10.pl, test_cost: 0, train_cost: 0, time: 0.020207762, length: 21, iterations: 1209"}
{"test_case": 66, "data": "MetropolisHasting 66: robots/2-6-0.pl, test_cost: 0, train_cost: 0, time: 0.0011547550000000004, length: 25, iterations: 94"}
{"test_case": 67, "data": "MetropolisHasting 67: robots/2-6-1.pl, test_cost: 0, train_cost: 0, time: 0.002568417999999996, length: 28, iterations: 209"}
{"test_case": 68, "data": "MetropolisHasting 68: robots/2-6-2.pl, test_cost: 0, train_cost: 0, time: 0.028069405999999998, length: 12, iterations: 2516"}
{"test_case": 69, "data": "MetropolisHasting 69: robots/2-6-3.pl, test_cost: 0, train_cost: 0, time: 0.012362604999999999, length: 52, iterations: 856"}
{"test_case": 70, "data": "MetropolisHasting 70: robots/2-6-4.pl, test_cost: 0, train_cost: 0, time: 0.003016342, length: 49, iterations: 208"}
{"test_case": 71, "data": "MetropolisHasting 71: robots/2-6-5.pl, test_cost: 0, train_cost: 0, time: 0.0005248140000000002, length: 9, iterations: 45"}
{"test_case": 72, "data": "MetropolisHasting 72: robots/2-6-6.pl, test_cost: 0, train_cost: 0, time: 0.0059805299999999995, length: 16, iterations: 475"}
{"test_case": 73, "data": "MetropolisHasting 73: robots/2-6-7.pl, test_cost: 0, train_cost: 0, time: 0.0007448590000000005, length: 4, iterations: 64"}
{"test_case": 74, "data": "MetropolisHasting 74: robots/2-6-8.pl, test_cost: 0, train_cost: 0, time: 0.013474778, length: 37, iterations: 978"}
{"test_case": 75, "data": "MetropolisHasting 75: robots/2-6-9.pl, test_cost: 0, train_cost: 0, time: 0.011964283, length: 80, iterations: 919"}
{"test_case": 76, "data": "MetropolisHasting 76: robots/2-6-10.pl, test_cost: 0, train_cost: 0, time: 0.0016375260000000003, length: 27, iterations: 120"}
{"test_case": 77, "data": "MetropolisHasting 77: robots/2-7-0.pl, test_cost: 0, train_cost: 0, time: 0.005561233999999998, length: 54, iterations: 423"}
{"test_case": 78, "data": "MetropolisHasting 78: robots/2-7-1.pl, test_cost: 0, train_cost: 0, time: 0.023028409999999992, length: 32, iterations: 1739"}
{"test_case": 79, "data": "MetropolisHasting 79: robots/2-7-2.pl, test_cost: 0, train_cost: 0, time: 0.0016646150000000082, length: 8, iterations: 148"}
{"test_case": 80, "data": "MetropolisHasting 80: robots/2-7-3.pl, test_cost: 0, train_cost: 0, time: 0.004251321, length: 14, iterations: 367"}
{"test_case": 81, "data": "MetropolisHasting 81: robots/2-7-4.pl, test_cost: 0, train_cost: 0, time: 0.00026368400000000014, length: 6, iterations: 19"}
{"test_case": 82, "data": "MetropolisHasting 82: robots/2-7-5.pl, test_cost: 0, train_cost: 0, time: 0.0025677819999999994, length: 33, iterations: 199"}
{"test_case": 83, "data": "MetropolisHasting 83: robots/2-7-6.pl, test_cost: 0, train_cost: 0, time: 2.5644000000000014e-05, length: 0, iterations: 1"}
{"test_case": 84, "data": "MetropolisHasting 84: robots/2-7-7.pl, test_cost: 0, train_cost: 0, time: 0.012315123, length: 40, iterations: 917"}
{"test_case": 85, "data": "MetropolisHasting 85: robots/2-7-8.pl, test_cost: 0, train_cost: 0, time: 0.001817357000000002, length: 26, iterations: 142"}
{"test_case": 86, "data": "MetropolisHasting 86: robots/2-7-9.pl, test_cost: 0, train_cost: 0, time: 2.98859999999998e-05, length: 2, iterations: 1"}
{"test_case": 87, "data": "MetropolisHasting 87: robots/2-7-10.pl, test_cost: 0, train_cost: 0, time: 0.00028043999999999986, length: 13, iterations: 22"}
{"test_case": 88, "data": "MetropolisHasting 88: robots/2-8-0.pl, test_cost: 0, train_cost: 0, time: 0.0023771469999999996, length: 43, iterations: 194"}
{"test_case": 89, "data": "MetropolisHasting 89: robots/2-8-1.pl, test_cost: 0, train_cost: 0, time: 0.011827918000000003, length: 18, iterations: 946"}
{"test_case": 90, "data": "MetropolisHasting 90: robots/2-8-2.pl, test_cost: 0, train_cost: 0, time: 0.002239205, length: 31, iterations: 158"}
{"test_case": 91, "data": "MetropolisHasting 91: robots/2-8-3.pl, test_cost: 0, train_cost: 0, time: 0.014816744, length: 38, iterations: 1104"}
{"test_case": 92, "data": "MetropolisHasting 92: robots/2-8-4.pl, test_cost: 0, train_cost: 0, time: 0.0007429650000000017, length: 3, iterations: 70"}
{"test_case": 93, "data": "MetropolisHasting 93: robots/2-8-5.pl, test_cost: 0, train_cost: 0, time: 0.007148813, length: 14, iterations: 593"}
{"test_case": 94, "data": "MetropolisHasting 94: robots/2-8-6.pl, test_cost: 0, train_cost: 0, time: 0.007756546999999999, length: 45, iterations: 582"}
{"test_case": 95, "data": "MetropolisHasting 95: robots/2-8-7.pl, test_cost: 0, train_cost: 0, time: 5.0952999999999415e-05, length: 5, iterations: 2"}
{"test_case": 96, "data": "MetropolisHasting 96: robots/2-8-8.pl, test_cost: 0, train_cost: 0, time: 0.0003178410000000062, length: 7, iterations: 26"}
{"test_case": 97, "data": "MetropolisHasting 97: robots/2-8-9.pl, test_cost: 0, train_cost: 0, time: 0.0010395940000000048, length: 12, iterations: 94"}
{"test_case": 98, "data": "MetropolisHasting 98: robots/2-8-10.pl, test_cost: 0, train_cost: 0, time: 0.0052829199999999965, length: 26, iterations: 440"}
{"test_case": 99, "data": "MetropolisHasting 99: robots/2-9-0.pl, test_cost: 0, train_cost: 0, time: 0.001486102000000003, length: 44, iterations: 112"}
{"test_case": 100, "data": "MetropolisHasting 100: robots/2-9-1.pl, test_cost: 0, train_cost: 0, time: 0.000896656, length: 14, iterations: 54"}
{"test_case": 101, "data": "MetropolisHasting 101: robots/2-9-2.pl, test_cost: 0, train_cost: 0, time: 0.008933957, length: 10, iterations: 699"}
{"test_case": 102, "data": "MetropolisHasting 102: robots/2-9-3.pl, test_cost: 0, train_cost: 0, time: 0.0001750020000000005, length: 4, iterations: 14"}
{"test_case": 103, "data": "MetropolisHasting 103: robots/2-9-4.pl, test_cost: 0, train_cost: 0, time: 0.0038252749999999995, length: 11, iterations: 307"}
{"test_case": 104, "data": "MetropolisHasting 104: robots/2-9-5.pl, test_cost: 0, train_cost: 0, time: 0.006751254000000002, length: 27, iterations: 541"}
{"test_case": 105, "data": "MetropolisHasting 105: robots/2-9-6.pl, test_cost: 0, train_cost: 0, time: 0.003550279, length: 33, iterations: 277"}
{"test_case": 106, "data": "MetropolisHasting 106: robots/2-9-7.pl, test_cost: 0, train_cost: 0, time: 3.734899999999902e-05, length: 0, iterations: 2"}
{"test_case": 107, "data": "MetropolisHasting 107: robots/2-9-8.pl, test_cost: 0, train_cost: 0, time: 0.0006908030000000003, length: 28, iterations: 44"}
{"test_case": 108, "data": "MetropolisHasting 108: robots/2-9-9.pl, test_cost: 0, train_cost: 0, time: 0.017986955000000002, length: 108, iterations: 891"}
{"test_case": 109, "data": "MetropolisHasting 109: robots/2-9-10.pl, test_cost: 0, train_cost: 0, time: 0.0011321950000000025, length: 15, iterations: 104"}
{"test_case": 110, "data": "MetropolisHasting 110: robots/4-0-0.pl, test_cost: 0, train_cost: 0, time: 0.095092652, length: 107, iterations: 2861"}
{"test_case": 111, "data": "MetropolisHasting 111: robots/4-0-1.pl, test_cost: 0, train_cost: 0, time: 0.014076895000000006, length: 55, iterations: 885"}
{"test_case": 112, "data": "MetropolisHasting 112: robots/4-0-2.pl, test_cost: 0, train_cost: 0, time: 0.030584897, length: 207, iterations: 1081"}
{"test_case": 113, "data": "MetropolisHasting 113: robots/4-0-3.pl, test_cost: 0, train_cost: 0, time: 0.007456466999999994, length: 83, iterations: 432"}
{"test_case": 114, "data": "MetropolisHasting 114: robots/4-0-4.pl, test_cost: 0, train_cost: 0, time: 0.0002447350000000237, length: 14, iterations: 18"}
{"test_case": 115, "data": "MetropolisHasting 115: robots/4-0-5.pl, test_cost: 0, train_cost: 0, time: 0.015444802000000007, length: 64, iterations: 1175"}
{"test_case": 116, "data": "MetropolisHasting 116: robots/4-0-6.pl, test_cost: 0, train_cost: 0, time: 0.08060021, length: 261, iterations: 3368"}
{"test_case": 117, "data": "MetropolisHasting 117: robots/4-0-7.pl, test_cost: 0, train_cost: 0, time: 0.011995994999999982, length: 72, iterations: 712"}
{"test_case": 118, "data": "MetropolisHasting 118: robots/4-0-8.pl, test_cost: 0, train_cost: 0, time: 0.019936626000000013, length: 41, iterations: 1520"}
{"test_case": 119, "data": "MetropolisHasting 119: robots/4-0-9.pl, test_cost: 0, train_cost: 0, time: 0.035792339000000006, length: 102, iterations: 1934"}
{"test_case": 120, "data": "MetropolisHasting 120: robots/4-0-10.pl, test_cost: 0, train_cost: 0, time: 0.002519645, length: 47, iterations: 156"}
{"test_case": 121, "data": "MetropolisHasting 121: robots/4-1-0.pl, test_cost: 0, train_cost: 0, time: 0.632676759, length: 677, iterations: 10620"}
{"test_case": 122, "data": "MetropolisHasting 122: robots/4-1-1.pl, test_cost: 0, train_cost: 0, time: 0.003828928000000009, length: 31, iterations: 299"}
{"test_case": 123, "data": "MetropolisHasting 123: robots/4-1-2.pl, test_cost: 0, train_cost: 0, time: 1.69860859, length: 1962, iterations: 12444"}
{"test_case": 124, "data": "MetropolisHasting 124: robots/4-1-3.pl, test_cost: 0, train_cost: 0, time: 0.008737074999999983, length: 86, iterations: 543"}
{"test_case": 125, "data": "MetropolisHasting 125: robots/4-1-4.pl, test_cost: 0, train_cost: 0, time: 0.014718564999999906, length: 136, iterations: 737"}
{"test_case": 126, "data": "MetropolisHasting 126: robots/4-1-5.pl, test_cost: 0, train_cost: 0, time: 0.04794249500000003, length: 232, iterations: 1745"}
{"test_case": 127, "data": "MetropolisHasting 127: robots/4-1-6.pl, test_cost: 0, train_cost: 0, time: 0.026377843000000123, length: 23, iterations: 1725"}
{"test_case": 128, "data": "MetropolisHasting 128: robots/4-1-7.pl, test_cost: 0, train_cost: 0, time: 0.06080608499999984, length: 288, iterations: 2136"}
{"test_case": 129, "data": "MetropolisHasting 129: robots/4-1-8.pl, test_cost: 0, train_cost: 0, time: 0.03699105100000022, length: 45, iterations: 2011"}
{"test_case": 130, "data": "MetropolisHasting 130: robots/4-1-9.pl, test_cost: 0, train_cost: 0, time: 0.015757838, length: 117, iterations: 970"}
{"test_case": 131, "data": "MetropolisHasting 131: robots/4-1-10.pl, test_cost: 0, train_cost: 0, time: 0.026220394, length: 99, iterations: 1226"}
{"test_case": 132, "data": "MetropolisHasting 132: robots/4-2-0.pl, test_cost: 0, train_cost: 0, time: 0.074327386, length: 42, iterations: 2990"}
{"test_case": 133, "data": "MetropolisHasting 133: robots/4-2-1.pl, test_cost: 0, train_cost: 0, time: 0.03552467699999999, length: 17, iterations: 2908"}
{"test_case": 134, "data": "MetropolisHasting 134: robots/4-2-2.pl, test_cost: 0, train_cost: 0, time: 0.42343736900000006, length: 896, iterations: 5846"}
{"test_case": 135, "data": "MetropolisHasting 135: robots/4-2-3.pl, test_cost: 0, train_cost: 0, time: 0.06768386700000006, length: 83, iterations: 3113"}
{"test_case": 136, "data": "MetropolisHasting 136: robots/4-2-4.pl, test_cost: 0, train_cost: 0, time: 0.06054026000000001, length: 58, iterations: 4675"}
{"test_case": 137, "data": "MetropolisHasting 137: robots/4-2-5.pl, test_cost: 0, train_cost: 0, time: 0.00945127999999995, length: 104, iterations: 508"}
{"test_case": 138, "data": "MetropolisHasting 138: robots/4-2-6.pl, test_cost: 0, train_cost: 0, time: 0.030062346000000018, length: 254, iterations: 1193"}
{"test_case": 139, "data": "MetropolisHasting 139: robots/4-2-7.pl, test_cost: 0, train_cost: 0, time: 0.02507220100000007, length: 177, iterations: 1013"}
{"test_case": 140, "data": "MetropolisHasting 140: robots/4-2-8.pl, test_cost: 0, train_cost: 0, time: 0.0036646910000000003, length: 37, iterations: 253"}
{"test_case": 141, "data": "MetropolisHasting 141: robots/4-2-9.pl, test_cost: 0, train_cost: 0, time: 0.155887952, length: 303, iterations: 4930"}
{"test_case": 142, "data": "MetropolisHasting 142: robots/4-2-10.pl, test_cost: 0, train_cost: 0, time: 0.024157813, length: 36, iterations: 1265"}
{"test_case": 143, "data": "MetropolisHasting 143: robots/4-3-0.pl, test_cost: 0, train_cost: 0, time: 0.201807512, length: 156, iterations: 5127"}
{"test_case": 144, "data": "MetropolisHasting 144: robots/4-3-1.pl, test_cost: 0, train_cost: 0, time: 0.003981421999999957, length: 23, iterations: 311"}
{"test_case": 145, "data": "MetropolisHasting 145: robots/4-3-2.pl, test_cost: 0, train_cost: 0, time: 0.05476622400000003, length: 221, iterations: 2383"}
{"test_case": 146, "data": "MetropolisHasting 146: robots/4-3-3.pl, test_cost: 0, train_cost: 0, time: 0.006534107999999983, length: 58, iterations: 510"}
{"test_case": 147, "data": "MetropolisHasting 147: robots/4-3-4.pl, test_cost: 0, train_cost: 0, time: 0.004907379999999961, length: 53, iterations: 347"}
{"test_case": 148, "data": "MetropolisHasting 148: robots/4-3-5.pl, test_cost: 0, train_cost: 0, time: 1.7271868320000001, length: 1903, iterations: 11652"}
{"test_case": 149, "data": "MetropolisHasting 149: robots/4-3-6.pl, test_cost: 0, train_cost: 0, time: 0.005415968999999965, length: 30, iterations: 370"}
{"test_case": 150, "data": "MetropolisHasting 150: robots/4-3-7.pl, test_cost: 0, train_cost: 0, time: 0.12294123, length: 32, iterations: 3819"}
{"test_case": 151, "data": "MetropolisHasting 151: robots/4-3-8.pl, test_cost: 0, train_cost: 0, time: 0.049965535000000005, length: 139, iterations: 2156"}
{"test_case": 152, "data": "MetropolisHasting 152: robots/4-3-9.pl, test_cost: 0, train_cost: 0, time: 0.032904343, length: 190, iterations: 1420"}
{"test_case": 153, "data": "MetropolisHasting 153: robots/4-3-10.pl, test_cost: 0, train_cost: 0, time: 0.06951966299999998, length: 413, iterations: 2098"}
{"test_case": 154, "data": "MetropolisHasting 154: robots/4-4-0.pl, test_cost: 0, train_cost: 0, time: 0.01027325400000001, length: 34, iterations: 646"}
{"test_case": 155, "data": "MetropolisHasting 155: robots/4-4-1.pl, test_cost: 0, train_cost: 0, time: 0.002374175000000034, length: 36, iterations: 185"}
{"test_case": 156, "data": "MetropolisHasting 156: robots/4-4-2.pl, test_cost: 0, train_cost: 0, time: 0.0013210190000000344, length: 18, iterations: 103"}
{"test_case": 157, "data": "MetropolisHasting 157: robots/4-4-3.pl, test_cost: 0, train_cost: 0, time: 0.14660049399999997, length: 467, iterations: 3533"}
{"test_case": 158, "data": "MetropolisHasting 158: robots/4-4-4.pl, test_cost: 0, train_cost: 0, time: 0.0030356809999999568, length: 46, iterations: 225"}
{"test_case": 159, "data": "MetropolisHasting 159: robots/4-4-5.pl, test_cost: 0, train_cost: 0, time: 0.11738520499999999, length: 429, iterations: 3270"}
{"test_case": 160, "data": "MetropolisHasting 160: robots/4-4-6.pl, test_cost: 0, train_cost: 0, time: 0.027871126000000003, length: 163, iterations: 1381"}
{"test_case": 161, "data": "MetropolisHasting 161: robots/4-4-7.pl, test_cost: 0, train_cost: 0, time: 0.011663270999999996, length: 104, iterations: 615"}
{"test_case": 162, "data": "MetropolisHasting 162: robots/4-4-8.pl, test_cost: 0, train_cost: 0, time: 0.013595202, length: 8, iterations: 980"}
{"test_case": 163, "data": "MetropolisHasting 163: robots/4-4-9.pl, test_cost: 0, train_cost: 0, time: 18.348747266, length: 2767, iterations: 59712"}
{"test_case": 164, "data": "MetropolisHasting 164: robots/4-4-10.pl, test_cost: 0, train_cost: 0, time: 0.10357254099999835, length: 418, iterations: 2697"}
{"test_case": 165, "data": "MetropolisHasting 165: robots/4-5-0.pl, test_cost: 0, train_cost: 0, time: 0.023806051000001105, length: 89, iterations: 1388"}
{"test_case": 166, "data": "MetropolisHasting 166: robots/4-5-1.pl, test_cost: 0, train_cost: 0, time: 8.840399999954229e-05, length: 6, iterations: 5"}
{"test_case": 167, "data": "MetropolisHasting 167: robots/4-5-2.pl, test_cost: 0, train_cost: 0, time: 0.0002888269999985482, length: 9, iterations: 22"}
{"test_case": 168, "data": "MetropolisHasting 168: robots/4-5-3.pl, test_cost: 0, train_cost: 0, time: 0.13430155800000065, length: 329, iterations: 4146"}
{"test_case": 169, "data": "MetropolisHasting 169: robots/4-5-4.pl, test_cost: 0, train_cost: 0, time: 0.009291560000001198, length: 23, iterations: 712"}
{"test_case": 170, "data": "MetropolisHasting 170: robots/4-5-5.pl, test_cost: 0, train_cost: 0, time: 0.58851015, length: 1041, iterations: 8202"}
{"test_case": 171, "data": "MetropolisHasting 171: robots/4-5-6.pl, test_cost: 0, train_cost: 0, time: 0.028559736000000058, length: 108, iterations: 1888"}
{"test_case": 172, "data": "MetropolisHasting 172: robots/4-5-7.pl, test_cost: 0, train_cost: 0, time: 0.06394552899999995, length: 59, iterations: 2722"}
{"test_case": 173, "data": "MetropolisHasting 173: robots/4-5-8.pl, test_cost: 0, train_cost: 0, time: 0.14693795199999993, length: 526, iterations: 3451"}
{"test_case": 174, "data": "MetropolisHasting 174: robots/4-5-9.pl, test_cost: 0, train_cost: 0, time: 39.234461122, length: 9865, iterations: 68373"}
{"test_case": 175, "data": "MetropolisHasting 175: robots/4-5-10.pl, test_cost: 0, train_cost: 0, time: 0.012938455000004012, length: 25, iterations: 978"}
{"test_case": 176, "data": "MetropolisHasting 176: robots/4-6-0.pl, test_cost: 0, train_cost: 0, time: 0.01983900200000477, length: 86, iterations: 1214"}
{"test_case": 177, "data": "MetropolisHasting 177: robots/4-6-1.pl, test_cost: 0, train_cost: 0, time: 0.0017926840000015432, length: 5, iterations: 173"}
{"test_case": 178, "data": "MetropolisHasting 178: robots/4-6-2.pl, test_cost: 0, train_cost: 0, time: 0.0012245240000012814, length: 33, iterations: 90"}
{"test_case": 179, "data": "MetropolisHasting 179: robots/4-6-3.pl, test_cost: 0, train_cost: 0, time: 0.00026123600000005354, length: 15, iterations: 19"}
{"test_case": 180, "data": "MetropolisHasting 180: robots/4-6-4.pl, test_cost: 0, train_cost: 0, time: 0.001545833, length: 21, iterations: 105"}
{"test_case": 181, "data": "MetropolisHasting 181: robots/4-6-5.pl, test_cost: 0, train_cost: 0, time: 0.00661801, length: 73, iterations: 433"}
{"test_case": 182, "data": "MetropolisHasting 182: robots/4-6-6.pl, test_cost: 0, train_cost: 0, time: 0.012037156999999998, length: 80, iterations: 872"}
{"test_case": 183, "data": "MetropolisHasting 183: robots/4-6-7.pl, test_cost: 0, train_cost: 0, time: 0.026510675, length: 119, iterations: 1619"}
{"test_case": 184, "data": "MetropolisHasting 184: robots/4-6-8.pl, test_cost: 0, train_cost: 0, time: 0.01832511700000001, length: 155, iterations: 908"}
{"test_case": 185, "data": "MetropolisHasting 185: robots/4-6-9.pl, test_cost: 0, train_cost: 0, time: 0.154278692, length: 591, iterations: 3437"}
{"test_case": 186, "data": "MetropolisHasting 186: robots/4-6-10.pl, test_cost: 0, train_cost: 0, time: 0.019966573000000015, length: 116, iterations: 989"}
{"test_case": 187, "data": "MetropolisHasting 187: robots/4-7-0.pl, test_cost: 0, train_cost: 0, time: 0.00011263899999999771, length: 3, iterations: 9"}
{"test_case": 188, "data": "MetropolisHasting 188: robots/4-7-1.pl, test_cost: 0, train_cost: 0, time: 37.986225394, length: 5119, iterations: 91672"}
{"test_case": 189, "data": "MetropolisHasting 189: robots/4-7-2.pl, test_cost: 0, train_cost: 0, time: 0.06588199800000183, length: 185, iterations: 2856"}
{"test_case": 190, "data": "MetropolisHasting 190: robots/4-7-3.pl, test_cost: 0, train_cost: 0, time: 0.006003444, length: 49, iterations: 422"}
{"test_case": 191, "data": "MetropolisHasting 191: robots/4-7-4.pl, test_cost: 0, train_cost: 0, time: 0.087054554, length: 267, iterations: 3540"}
{"test_case": 192, "data": "MetropolisHasting 192: robots/4-7-5.pl, test_cost: 0, train_cost: 0, time: 0.014710174000000006, length: 77, iterations: 1031"}
{"test_case": 193, "data": "MetropolisHasting 193: robots/4-7-6.pl, test_cost: 0, train_cost: 0, time: 0.0008678409999999942, length: 15, iterations: 73"}
{"test_case": 194, "data": "MetropolisHasting 194: robots/4-7-7.pl, test_cost: 0, train_cost: 0, time: 0.003276625999999991, length: 5, iterations: 275"}
{"test_case": 195, "data": "MetropolisHasting 195: robots/4-7-8.pl, test_cost: 0, train_cost: 0, time: 1.340894417, length: 1802, iterations: 12636"}
{"test_case": 196, "data": "MetropolisHasting 196: robots/4-7-9.pl, test_cost: 0, train_cost: 0, time: 0.06311162299999995, length: 354, iterations: 1966"}
{"test_case": 197, "data": "MetropolisHasting 197: robots/4-7-10.pl, test_cost: 0, train_cost: 0, time: 0.01329855000000002, length: 63, iterations: 968"}
{"test_case": 198, "data": "MetropolisHasting 198: robots/4-8-0.pl, test_cost: 0, train_cost: 0, time: 0.099849662, length: 284, iterations: 4640"}
{"test_case": 199, "data": "MetropolisHasting 199: robots/4-8-1.pl, test_cost: 0, train_cost: 0, time: 0.0031107580000000468, length: 22, iterations: 244"}
{"test_case": 200, "data": "MetropolisHasting 200: robots/4-8-2.pl, test_cost: 0, train_cost: 0, time: 0.096806254, length: 220, iterations: 3986"}
{"test_case": 201, "data": "MetropolisHasting 201: robots/4-8-3.pl, test_cost: 0, train_cost: 0, time: 0.001969598000000003, length: 35, iterations: 147"}
{"test_case": 202, "data": "MetropolisHasting 202: robots/4-8-4.pl, test_cost: 0, train_cost: 0, time: 0.02576433800000001, length: 146, iterations: 1355"}
{"test_case": 203, "data": "MetropolisHasting 203: robots/4-8-5.pl, test_cost: 0, train_cost: 0, time: 0.028983593000000002, length: 186, iterations: 1216"}
{"test_case": 204, "data": "MetropolisHasting 204: robots/4-8-6.pl, test_cost: 0, train_cost: 0, time: 0.01275300900000001, length: 114, iterations: 787"}
{"test_case": 205, "data": "MetropolisHasting 205: robots/4-8-7.pl, test_cost: 0, train_cost: 0, time: 0.01138914399999999, length: 91, iterations: 785"}
{"test_case": 206, "data": "MetropolisHasting 206: robots/4-8-8.pl, test_cost: 0, train_cost: 0, time: 0.00881137500000001, length: 70, iterations: 561"}
{"test_case": 207, "data": "MetropolisHasting 207: robots/4-8-9.pl, test_cost: 0, train_cost: 0, time: 0.093910354, length: 478, iterations: 2249"}
{"test_case": 208, "data": "MetropolisHasting 208: robots/4-8-10.pl, test_cost: 0, train_cost: 0, time: 0.009811722999999994, length: 62, iterations: 709"}
{"test_case": 209, "data": "MetropolisHasting 209: robots/4-9-0.pl, test_cost: 0, train_cost: 0, time: 0.03579759599999999, length: 108, iterations: 2086"}
{"test_case": 210, "data": "MetropolisHasting 210: robots/4-9-1.pl, test_cost: 0, train_cost: 0, time: 0.001311904, length: 8, iterations: 92"}
{"test_case": 211, "data": "MetropolisHasting 211: robots/4-9-2.pl, test_cost: 0, train_cost: 0, time: 0.063986658, length: 284, iterations: 2089"}
{"test_case": 212, "data": "MetropolisHasting 212: robots/4-9-3.pl, test_cost: 0, train_cost: 0, time: 0.065031024, length: 276, iterations: 2330"}
{"test_case": 213, "data": "MetropolisHasting 213: robots/4-9-4.pl, test_cost: 0, train_cost: 0, time: 0.06277628699999999, length: 362, iterations: 1920"}
{"test_case": 214, "data": "MetropolisHasting 214: robots/4-9-5.pl, test_cost: 0, train_cost: 0, time: 1.3654135059999999, length: 1698, iterations: 11067"}
{"test_case": 215, "data": "MetropolisHasting 215: robots/4-9-6.pl, test_cost: 0, train_cost: 0, time: 0.02946695499999996, length: 171, iterations: 1089"}
{"test_case": 216, "data": "MetropolisHasting 216: robots/4-9-7.pl, test_cost: 0, train_cost: 0, time: 0.008723081999999938, length: 73, iterations: 488"}
{"test_case": 217, "data": "MetropolisHasting 217: robots/4-9-8.pl, test_cost: 0, train_cost: 0, time: 0.04675258299999996, length: 158, iterations: 2347"}
{"test_case": 218, "data": "MetropolisHasting 218: robots/4-9-9.pl, test_cost: 0, train_cost: 0, time: 0.0063780950000000836, length: 70, iterations: 388"}
{"test_case": 219, "data": "MetropolisHasting 219: robots/4-9-10.pl, test_cost: 0, train_cost: 0, time: 0.1284040420000001, length: 364, iterations: 4181"}
{"test_case": 220, "data": "MetropolisHasting 220: robots/6-0-0.pl, test_cost: 0, train_cost: 0, time: 0.17771440800000002, length: 379, iterations: 4862"}
{"test_case": 221, "data": "MetropolisHasting 221: robots/6-0-1.pl, test_cost: 0, train_cost: 0, time: 0.08943826099999999, length: 363, iterations: 2120"}
{"test_case": 222, "data": "MetropolisHasting 222: robots/6-0-2.pl, test_cost: 0, train_cost: 0, time: 5.2999088180000005, length: 4116, iterations: 18577"}
{"test_case": 223, "data": "MetropolisHasting 223: robots/6-0-3.pl, test_cost: 0, train_cost: 0, time: 0.12222321899999944, length: 324, iterations: 4187"}
{"test_case": 224, "data": "MetropolisHasting 224: robots/6-0-4.pl, test_cost: 0, train_cost: 0, time: 0.017143791999999713, length: 141, iterations: 866"}
{"test_case": 225, "data": "MetropolisHasting 225: robots/6-0-5.pl, test_cost: 0, train_cost: 0, time: 1.0151194290000003, length: 1652, iterations: 8162"}
{"test_case": 226, "data": "MetropolisHasting 226: robots/6-0-6.pl, test_cost: 0, train_cost: 0, time: 0.06084617200000064, length: 205, iterations: 2100"}
{"test_case": 227, "data": "MetropolisHasting 227: robots/6-0-7.pl, test_cost: 0, train_cost: 0, time: 0.2782358329999992, length: 747, iterations: 4102"}
{"test_case": 228, "data": "MetropolisHasting 228: robots/6-0-8.pl, test_cost: 0, train_cost: 0, time: 13.764478326, length: 5507, iterations: 40405"}
{"test_case": 229, "data": "MetropolisHasting 229: robots/6-0-9.pl, test_cost: 0, train_cost: 0, time: 0.00027506800000054454, length: 4, iterations: 21"}
{"test_case": 230, "data": "MetropolisHasting 230: robots/6-0-10.pl, test_cost: 0, train_cost: 0, time: 0.020960667000000002, length: 189, iterations: 978"}
{"test_case": 231, "data": "MetropolisHasting 231: robots/6-1-0.pl, test_cost: 0, train_cost: 0, time: 0.07370044399999999, length: 63, iterations: 2135"}
{"test_case": 232, "data": "MetropolisHasting 232: robots/6-1-1.pl, test_cost: 0, train_cost: 0, time: 0.011978217000000013, length: 53, iterations: 874"}
{"test_case": 233, "data": "MetropolisHasting 233: robots/6-1-2.pl, test_cost: 0, train_cost: 0, time: 0.052451816999999984, length: 53, iterations: 2629"}
{"test_case": 234, "data": "MetropolisHasting 234: robots/6-1-3.pl, test_cost: 0, train_cost: 0, time: 0.06720110700000001, length: 396, iterations: 1832"}
{"test_case": 235, "data": "MetropolisHasting 235: robots/6-1-4.pl, test_cost: 0, train_cost: 0, time: 0.16131655099999997, length: 573, iterations: 3395"}
{"test_case": 236, "data": "MetropolisHasting 236: robots/6-1-5.pl, test_cost: 0, train_cost: 0, time: 0.011727772000000025, length: 80, iterations: 809"}
{"test_case": 237, "data": "MetropolisHasting 237: robots/6-1-6.pl, test_cost: 0, train_cost: 0, time: 0.03897590000000001, length: 76, iterations: 2901"}
{"test_case": 238, "data": "MetropolisHasting 238: robots/6-1-7.pl, test_cost: 0, train_cost: 0, time: 0.06017112899999999, length: 338, iterations: 1750"}
{"test_case": 239, "data": "MetropolisHasting 239: robots/6-1-8.pl, test_cost: 0, train_cost: 0, time: 0.0010894500000000473, length: 14, iterations: 76"}
{"test_case": 240, "data": "MetropolisHasting 240: robots/6-1-9.pl, test_cost: 0, train_cost: 0, time: 0.480461644, length: 407, iterations: 7595"}
{"test_case": 241, "data": "MetropolisHasting 241: robots/6-1-10.pl, test_cost: 0, train_cost: 0, time: 1.472307835, length: 428, iterations: 14072"}
{"test_case": 242, "data": "MetropolisHasting 242: robots/6-2-0.pl, test_cost: 3, train_cost: 3, time: 60.000223103, length: 13292, iterations: 76925"}
{"test_case": 243, "data": "MetropolisHasting 243: robots/6-2-1.pl, test_cost: 0, train_cost: 0, time: 0.03628194999999579, length: 225, iterations: 1332"}
{"test_case": 244, "data": "MetropolisHasting 244: robots/6-2-2.pl, test_cost: 0, train_cost: 0, time: 0.17383287300000205, length: 684, iterations: 3124"}
{"test_case": 245, "data": "MetropolisHasting 245: robots/6-2-3.pl, test_cost: 0, train_cost: 0, time: 0.008724128999993752, length: 114, iterations: 491"}
{"test_case": 246, "data": "MetropolisHasting 246: robots/6-2-4.pl, test_cost: 0, train_cost: 0, time: 0.5799150970000042, length: 1128, iterations: 7078"}
{"test_case": 247, "data": "MetropolisHasting 247: robots/6-2-5.pl, test_cost: 0, train_cost: 0, time: 0.024599665000003768, length: 186, iterations: 1069"}
{"test_case": 248, "data": "MetropolisHasting 248: robots/6-2-6.pl, test_cost: 0, train_cost: 0, time: 1.0910397459999999, length: 1585, iterations: 10022"}
{"test_case": 249, "data": "MetropolisHasting 249: robots/6-2-7.pl, test_cost: 0, train_cost: 0, time: 0.47669248299999367, length: 1111, iterations: 6457"}
{"test_case": 250, "data": "MetropolisHasting 250: robots/6-2-8.pl, test_cost: 0, train_cost: 0, time: 0.033900506000000004, length: 62, iterations: 1437"}
{"test_case": 251, "data": "MetropolisHasting 251: robots/6-2-9.pl, test_cost: 0, train_cost: 0, time: 0.879136323, length: 1617, iterations: 8069"}
{"test_case": 252, "data": "MetropolisHasting 252: robots/6-2-10.pl, test_cost: 0, train_cost: 0, time: 0.017751998000000047, length: 117, iterations: 1114"}
{"test_case": 253, "data": "MetropolisHasting 253: robots/6-3-0.pl, test_cost: 0, train_cost: 0, time: 0.11368221499999998, length: 388, iterations: 2922"}
{"test_case": 254, "data": "MetropolisHasting 254: robots/6-3-1.pl, test_cost: 0, train_cost: 0, time: 0.022307201999999915, length: 212, iterations: 827"}
{"test_case": 255, "data": "MetropolisHasting 255: robots/6-3-2.pl, test_cost: 0, train_cost: 0, time: 0.010517537999999993, length: 124, iterations: 528"}
{"test_case": 256, "data": "MetropolisHasting 256: robots/6-3-3.pl, test_cost: 0, train_cost: 0, time: 2.9669165930000005, length: 150, iterations: 15507"}
{"test_case": 257, "data": "MetropolisHasting 257: robots/6-3-4.pl, test_cost: 0, train_cost: 0, time: 19.406482073, length: 270, iterations: 42520"}
{"test_case": 258, "data": "MetropolisHasting 258: robots/6-3-5.pl, test_cost: 0, train_cost: 0, time: 30.434288888999998, length: 10124, iterations: 49500"}
{"test_case": 259, "data": "MetropolisHasting 259: robots/6-3-6.pl, test_cost: 0, train_cost: 0, time: 0.08882406400000065, length: 398, iterations: 2231"}
{"test_case": 260, "data": "MetropolisHasting 260: robots/6-3-7.pl, test_cost: 0, train_cost: 0, time: 0.02217643, length: 142, iterations: 1123"}
{"test_case": 261, "data": "MetropolisHasting 261: robots/6-3-8.pl, test_cost: 0, train_cost: 0, time: 25.280918568, length: 9501, iterations: 42303"}
{"test_case": 262, "data": "MetropolisHasting 262: robots/6-3-9.pl, test_cost: 0, train_cost: 0, time: 0.005099262999998189, length: 28, iterations: 392"}
{"test_case": 263, "data": "MetropolisHasting 263: robots/6-3-10.pl, test_cost: 0, train_cost: 0, time: 1.2658729290000004, length: 2068, iterations: 9257"}
{"test_case": 264, "data": "MetropolisHasting 264: robots/6-4-0.pl, test_cost: 0, train_cost: 0, time: 0.01675288099999861, length: 125, iterations: 820"}
{"test_case": 265, "data": "MetropolisHasting 265: robots/6-4-1.pl, test_cost: 0, train_cost: 0, time: 0.4193783420000017, length: 1009, iterations: 6260"}
{"test_case": 266, "data": "MetropolisHasting 266: robots/6-4-2.pl, test_cost: 0, train_cost: 0, time: 0.05674219100000144, length: 65, iterations: 1914"}
{"test_case": 267, "data": "MetropolisHasting 267: robots/6-4-3.pl, test_cost: 0, train_cost: 0, time: 9.073095153999997, length: 129, iterations: 32920"}
{"test_case": 268, "data": "MetropolisHasting 268: robots/6-4-4.pl, test_cost: 0, train_cost: 0, time: 0.03181806900000339, length: 234, iterations: 1160"}
{"test_case": 269, "data": "MetropolisHasting 269: robots/6-4-5.pl, test_cost: 0, train_cost: 0, time: 0.011507197000000247, length: 91, iterations: 866"}
{"test_case": 270, "data": "MetropolisHasting 270: robots/6-4-6.pl, test_cost: 0, train_cost: 0, time: 0.06048318400000001, length: 351, iterations: 1980"}
{"test_case": 271, "data": "MetropolisHasting 271: robots/6-4-7.pl, test_cost: 0, train_cost: 0, time: 0.025775776, length: 172, iterations: 1343"}
{"test_case": 272, "data": "MetropolisHasting 272: robots/6-4-8.pl, test_cost: 0, train_cost: 0, time: 0.017456905999999994, length: 200, iterations: 772"}
{"test_case": 273, "data": "MetropolisHasting 273: robots/6-4-9.pl, test_cost: 0, train_cost: 0, time: 0.011832172000000002, length: 72, iterations: 746"}
{"test_case": 274, "data": "MetropolisHasting 274: robots/6-4-10.pl, test_cost: 4, train_cost: 4, time: 60.000638394, length: 13956, iterations: 68394"}
{"test_case": 275, "data": "MetropolisHasting 275: robots/6-5-0.pl, test_cost: 0, train_cost: 0, time: 0.006701229999997338, length: 45, iterations: 519"}
{"test_case": 276, "data": "MetropolisHasting 276: robots/6-5-1.pl, test_cost: 0, train_cost: 0, time: 0.0014137919999939186, length: 38, iterations: 112"}
{"test_case": 277, "data": "MetropolisHasting 277: robots/6-5-2.pl, test_cost: 0, train_cost: 0, time: 0.006700228999996227, length: 50, iterations: 483"}
{"test_case": 278, "data": "MetropolisHasting 278: robots/6-5-3.pl, test_cost: 0, train_cost: 0, time: 0.3180510400000003, length: 822, iterations: 5308"}
{"test_case": 279, "data": "MetropolisHasting 279: robots/6-5-4.pl, test_cost: 0, train_cost: 0, time: 0.014411717999998075, length: 76, iterations: 959"}
{"test_case": 280, "data": "MetropolisHasting 280: robots/6-5-5.pl, test_cost: 0, train_cost: 0, time: 0.066922702, length: 296, iterations: 1955"}
{"test_case": 281, "data": "MetropolisHasting 281: robots/6-5-6.pl, test_cost: 0, train_cost: 0, time: 15.840077958, length: 6811, iterations: 37612"}
{"test_case": 282, "data": "MetropolisHasting 282: robots/6-5-7.pl, test_cost: 0, train_cost: 0, time: 0.19241569800000136, length: 91, iterations: 4291"}
{"test_case": 283, "data": "MetropolisHasting 283: robots/6-5-8.pl, test_cost: 0, train_cost: 0, time: 0.018579781000003237, length: 122, iterations: 1235"}
{"test_case": 284, "data": "MetropolisHasting 284: robots/6-5-9.pl, test_cost: 1, train_cost: 1, time: 60.000217629999995, length: 13682, iterations: 71321"}
{"test_case": 285, "data": "MetropolisHasting 285: robots/6-5-10.pl, test_cost: 0, train_cost: 0, time: 1.3378663410000087, length: 1670, iterations: 12265"}
{"test_case": 286, "data": "MetropolisHasting 286: robots/6-6-0.pl, test_cost: 0, train_cost: 0, time: 0.14738497699998732, length: 602, iterations: 2679"}
{"test_case": 287, "data": "MetropolisHasting 287: robots/6-6-1.pl, test_cost: 0, train_cost: 0, time: 0.006500387000002661, length: 87, iterations: 386"}
{"test_case": 288, "data": "MetropolisHasting 288: robots/6-6-2.pl, test_cost: 0, train_cost: 0, time: 0.06383623700000385, length: 396, iterations: 1896"}
{"test_case": 289, "data": "MetropolisHasting 289: robots/6-6-3.pl, test_cost: 0, train_cost: 0, time: 0.1654718509999924, length: 609, iterations: 3440"}
{"test_case": 290, "data": "MetropolisHasting 290: robots/6-6-4.pl, test_cost: 0, train_cost: 0, time: 0.037395579, length: 184, iterations: 1985"}
{"test_case": 291, "data": "MetropolisHasting 291: robots/6-6-5.pl, test_cost: 0, train_cost: 0, time: 0.088873577, length: 393, iterations: 2650"}
{"test_case": 292, "data": "MetropolisHasting 292: robots/6-6-6.pl, test_cost: 0, train_cost: 0, time: 0.09194492599999998, length: 335, iterations: 3239"}
{"test_case": 293, "data": "MetropolisHasting 293: robots/6-6-7.pl, test_cost: 0, train_cost: 0, time: 0.015152188000000011, length: 195, iterations: 608"}
{"test_case": 294, "data": "MetropolisHasting 294: robots/6-6-8.pl, test_cost: 0, train_cost: 0, time: 0.21054309000000002, length: 670, iterations: 3557"}
{"test_case": 295, "data": "MetropolisHasting 295: robots/6-6-9.pl, test_cost: 0, train_cost: 0, time: 0.04019852400000001, length: 241, iterations: 1674"}
{"test_case": 296, "data": "MetropolisHasting 296: robots/6-6-10.pl, test_cost: 0, train_cost: 0, time: 0.936873329, length: 1555, iterations: 8599"}
{"test_case": 297, "data": "MetropolisHasting 297: robots/6-7-0.pl, test_cost: 0, train_cost: 0, time: 0.0046157540000000274, length: 46, iterations: 328"}
{"test_case": 298, "data": "MetropolisHasting 298: robots/6-7-1.pl, test_cost: 0, train_cost: 0, time: 5.469365071, length: 4144, iterations: 20035"}
{"test_case": 299, "data": "MetropolisHasting 299: robots/6-7-2.pl, test_cost: 0, train_cost: 0, time: 0.0722131509999997, length: 335, iterations: 2014"}
{"test_case": 300, "data": "MetropolisHasting 300: robots/6-7-3.pl, test_cost: 0, train_cost: 0, time: 0.004380921000000001, length: 75, iterations: 294"}
{"test_case": 301, "data": "MetropolisHasting 301: robots/6-7-4.pl, test_cost: 0, train_cost: 0, time: 0.11217068599999999, length: 265, iterations: 3283"}
{"test_case": 302, "data": "MetropolisHasting 302: robots/6-7-5.pl, test_cost: 0, train_cost: 0, time: 51.630150791999995, length: 149, iterations: 65753"}
{"test_case": 303, "data": "MetropolisHasting 303: robots/6-7-6.pl, test_cost: 0, train_cost: 0, time: 2.2574554990000024, length: 2701, iterations: 12681"}
{"test_case": 304, "data": "MetropolisHasting 304: robots/6-7-7.pl, test_cost: 0, train_cost: 0, time: 0.012230003999995631, length: 126, iterations: 713"}
{"test_case": 305, "data": "MetropolisHasting 305: robots/6-7-8.pl, test_cost: 0, train_cost: 0, time: 0.02370413199999888, length: 184, iterations: 1121"}
{"test_case": 306, "data": "MetropolisHasting 306: robots/6-7-9.pl, test_cost: 0, train_cost: 0, time: 6.407486010999996, length: 118, iterations: 20986"}
{"test_case": 307, "data": "MetropolisHasting 307: robots/6-7-10.pl, test_cost: 0, train_cost: 0, time: 11.552493597999998, length: 6159, iterations: 28024"}
{"test_case": 308, "data": "MetropolisHasting 308: robots/6-8-0.pl, test_cost: 0, train_cost: 0, time: 1.8683827609999923, length: 2316, iterations: 12300"}
{"test_case": 309, "data": "MetropolisHasting 309: robots/6-8-1.pl, test_cost: 0, train_cost: 0, time: 0.0248754640000044, length: 107, iterations: 1313"}
{"test_case": 310, "data": "MetropolisHasting 310: robots/6-8-2.pl, test_cost: 0, train_cost: 0, time: 0.964246943, length: 1483, iterations: 8607"}
{"test_case": 311, "data": "MetropolisHasting 311: robots/6-8-3.pl, test_cost: 0, train_cost: 0, time: 0.13553153000000007, length: 477, iterations: 3366"}
{"test_case": 312, "data": "MetropolisHasting 312: robots/6-8-4.pl, test_cost: 0, train_cost: 0, time: 0.081499875, length: 509, iterations: 1615"}
{"test_case": 313, "data": "MetropolisHasting 313: robots/6-8-5.pl, test_cost: 0, train_cost: 0, time: 0.10232447299999992, length: 58, iterations: 2355"}
{"test_case": 314, "data": "MetropolisHasting 314: robots/6-8-6.pl, test_cost: 0, train_cost: 0, time: 0.07396906399999992, length: 272, iterations: 2531"}
{"test_case": 315, "data": "MetropolisHasting 315: robots/6-8-7.pl, test_cost: 0, train_cost: 0, time: 0.018121118999999908, length: 158, iterations: 790"}
{"test_case": 316, "data": "MetropolisHasting 316: robots/6-8-8.pl, test_cost: 0, train_cost: 0, time: 1.4380999439999997, length: 2207, iterations: 9155"}
{"test_case": 317, "data": "MetropolisHasting 317: robots/6-8-9.pl, test_cost: 0, train_cost: 0, time: 0.07981816900000016, length: 388, iterations: 1860"}
{"test_case": 318, "data": "MetropolisHasting 318: robots/6-8-10.pl, test_cost: 0, train_cost: 0, time: 18.44871894, length: 7365, iterations: 51788"}
{"test_case": 319, "data": "MetropolisHasting 319: robots/6-9-0.pl, test_cost: 0, train_cost: 0, time: 0.12052871399999887, length: 446, iterations: 2808"}
{"test_case": 320, "data": "MetropolisHasting 320: robots/6-9-1.pl, test_cost: 0, train_cost: 0, time: 0.032832046000000004, length: 50, iterations: 2068"}
{"test_case": 321, "data": "MetropolisHasting 321: robots/6-9-2.pl, test_cost: 0, train_cost: 0, time: 0.010680533999999998, length: 65, iterations: 737"}
{"test_case": 322, "data": "MetropolisHasting 322: robots/6-9-3.pl, test_cost: 0, train_cost: 0, time: 0.025377984, length: 219, iterations: 1033"}
{"test_case": 323, "data": "MetropolisHasting 323: robots/6-9-4.pl, test_cost: 0, train_cost: 0, time: 42.177412711, length: 11832, iterations: 54338"}
{"test_case": 324, "data": "MetropolisHasting 324: robots/6-9-5.pl, test_cost: 1, train_cost: 1, time: 60.001206432000004, length: 13668, iterations: 64469"}
{"test_case": 325, "data": "MetropolisHasting 325: robots/6-9-6.pl, test_cost: 0, train_cost: 0, time: 0.035122505999993336, length: 232, iterations: 1377"}
{"test_case": 326, "data": "MetropolisHasting 326: robots/6-9-7.pl, test_cost: 0, train_cost: 0, time: 1.5945180479999976, length: 2254, iterations: 11164"}
{"test_case": 327, "data": "MetropolisHasting 327: robots/6-9-8.pl, test_cost: 0, train_cost: 0, time: 0.00526316200000565, length: 85, iterations: 336"}
{"test_case": 328, "data": "MetropolisHasting 328: robots/6-9-9.pl, test_cost: 0, train_cost: 0, time: 0.07580968400000643, length: 93, iterations: 3470"}
{"test_case": 329, "data": "MetropolisHasting 329: robots/6-9-10.pl, test_cost: 0, train_cost: 0, time: 0.34865495200000396, length: 1071, iterations: 4054"}
{"test_case": 330, "data": "MetropolisHasting 330: robots/8-0-0.pl, test_cost: 0, train_cost: 0, time: 0.022764891, length: 213, iterations: 766"}
{"test_case": 331, "data": "MetropolisHasting 331: robots/8-0-1.pl, test_cost: 0, train_cost: 0, time: 1.994760503, length: 2376, iterations: 11736"}
{"test_case": 332, "data": "MetropolisHasting 332: robots/8-0-2.pl, test_cost: 0, train_cost: 0, time: 7.737808626, length: 4824, iterations: 20544"}
{"test_case": 333, "data": "MetropolisHasting 333: robots/8-0-3.pl, test_cost: 0, train_cost: 0, time: 0.12001346899999987, length: 574, iterations: 2203"}
{"test_case": 334, "data": "MetropolisHasting 334: robots/8-0-4.pl, test_cost: 2, train_cost: 2, time: 60.001622665, length: 13615, iterations: 69339"}
{"test_case": 335, "data": "MetropolisHasting 335: robots/8-0-5.pl, test_cost: 0, train_cost: 0, time: 0.023684156999991046, length: 164, iterations: 989"}
{"test_case": 336, "data": "MetropolisHasting 336: robots/8-0-6.pl, test_cost: 0, train_cost: 0, time: 17.47377092699999, length: 8253, iterations: 34591"}
{"test_case": 337, "data": "MetropolisHasting 337: robots/8-0-7.pl, test_cost: 0, train_cost: 0, time: 0.01562430299999562, length: 154, iterations: 808"}
{"test_case": 338, "data": "MetropolisHasting 338: robots/8-0-8.pl, test_cost: 0, train_cost: 0, time: 0.04788828699999215, length: 283, iterations: 1432"}
{"test_case": 339, "data": "MetropolisHasting 339: robots/8-0-9.pl, test_cost: 0, train_cost: 0, time: 0.057939046000001326, length: 379, iterations: 1432"}
{"test_case": 340, "data": "MetropolisHasting 340: robots/8-0-10.pl, test_cost: 0, train_cost: 0, time: 0.462107966, length: 1213, iterations: 5272"}
{"test_case": 341, "data": "MetropolisHasting 341: robots/8-1-0.pl, test_cost: 0, train_cost: 0, time: 0.5120324940000001, length: 837, iterations: 9097"}
{"test_case": 342, "data": "MetropolisHasting 342: robots/8-1-1.pl, test_cost: 0, train_cost: 0, time: 0.300209171, length: 774, iterations: 4894"}
{"test_case": 343, "data": "MetropolisHasting 343: robots/8-1-2.pl, test_cost: 0, train_cost: 0, time: 0.033808993000000065, length: 251, iterations: 1388"}
{"test_case": 344, "data": "MetropolisHasting 344: robots/8-1-3.pl, test_cost: 0, train_cost: 0, time: 0.007595181999999978, length: 110, iterations: 420"}
{"test_case": 345, "data": "MetropolisHasting 345: robots/8-1-4.pl, test_cost: 0, train_cost: 0, time: 0.35096519400000004, length: 1106, iterations: 4174"}
{"test_case": 346, "data": "MetropolisHasting 346: robots/8-1-5.pl, test_cost: 0, train_cost: 0, time: 0.159343939, length: 324, iterations: 3488"}
{"test_case": 347, "data": "MetropolisHasting 347: robots/8-1-6.pl, test_cost: 0, train_cost: 0, time: 0.08769694799999983, length: 345, iterations: 2711"}
{"test_case": 348, "data": "MetropolisHasting 348: robots/8-1-7.pl, test_cost: 0, train_cost: 0, time: 3.9777504500000003, length: 3336, iterations: 17578"}
{"test_case": 349, "data": "MetropolisHasting 349: robots/8-1-8.pl, test_cost: 0, train_cost: 0, time: 7.502057848000001, length: 4624, iterations: 25845"}
{"test_case": 350, "data": "MetropolisHasting 350: robots/8-1-9.pl, test_cost: 4, train_cost: 4, time: 60.001429496, length: 14144, iterations: 61080"}
{"test_case": 351, "data": "MetropolisHasting 351: robots/8-1-10.pl, test_cost: 0, train_cost: 0, time: 1.6036043459999973, length: 2798, iterations: 8092"}
{"test_case": 352, "data": "MetropolisHasting 352: robots/8-2-0.pl, test_cost: 0, train_cost: 0, time: 0.05626174399999684, length: 314, iterations: 1750"}
{"test_case": 353, "data": "MetropolisHasting 353: robots/8-2-1.pl, test_cost: 12, train_cost: 12, time: 60.002317477, length: 15396, iterations: 60900"}
{"test_case": 354, "data": "MetropolisHasting 354: robots/8-2-2.pl, test_cost: 4, train_cost: 4, time: 60.000715997, length: 13610, iterations: 64873"}
{"test_case": 355, "data": "MetropolisHasting 355: robots/8-2-3.pl, test_cost: 0, train_cost: 0, time: 12.481178932999995, length: 6667, iterations: 29537"}
{"test_case": 356, "data": "MetropolisHasting 356: robots/8-2-4.pl, test_cost: 0, train_cost: 0, time: 10.17901759, length: 5587, iterations: 25221"}
{"test_case": 357, "data": "MetropolisHasting 357: robots/8-2-5.pl, test_cost: 0, train_cost: 0, time: 0.013328994999994848, length: 155, iterations: 616"}
{"test_case": 358, "data": "MetropolisHasting 358: robots/8-2-6.pl, test_cost: 0, train_cost: 0, time: 0.03493266499998526, length: 307, iterations: 1285"}
{"test_case": 359, "data": "MetropolisHasting 359: robots/8-2-7.pl, test_cost: 0, train_cost: 0, time: 0.012047026000004735, length: 121, iterations: 727"}
{"test_case": 360, "data": "MetropolisHasting 360: robots/8-2-8.pl, test_cost: 0, train_cost: 0, time: 10.31541404, length: 5827, iterations: 25905"}
{"test_case": 361, "data": "MetropolisHasting 361: robots/8-2-9.pl, test_cost: 0, train_cost: 0, time: 0.020634313000000404, length: 186, iterations: 764"}
{"test_case": 362, "data": "MetropolisHasting 362: robots/8-2-10.pl, test_cost: 0, train_cost: 0, time: 0.09787159799999934, length: 353, iterations: 2627"}
{"test_case": 363, "data": "MetropolisHasting 363: robots/8-3-0.pl, test_cost: 0, train_cost: 0, time: 0.06024684499999999, length: 348, iterations: 1375"}
{"test_case": 364, "data": "MetropolisHasting 364: robots/8-3-1.pl, test_cost: 11, train_cost: 11, time: 60.00126482099999, length: 14085, iterations: 65901"}
{"test_case": 365, "data": "MetropolisHasting 365: robots/8-3-2.pl, test_cost: 0, train_cost: 0, time: 0.2072799500000002, length: 686, iterations: 3378"}
{"test_case": 366, "data": "MetropolisHasting 366: robots/8-3-3.pl, test_cost: 0, train_cost: 0, time: 0.04805145599999605, length: 272, iterations: 1674"}
{"test_case": 367, "data": "MetropolisHasting 367: robots/8-3-4.pl, test_cost: 0, train_cost: 0, time: 0.08412033800000529, length: 405, iterations: 2119"}
{"test_case": 368, "data": "MetropolisHasting 368: robots/8-3-5.pl, test_cost: 0, train_cost: 0, time: 1.2855837969999868, length: 1930, iterations: 9908"}
{"test_case": 369, "data": "MetropolisHasting 369: robots/8-3-6.pl, test_cost: 0, train_cost: 0, time: 0.0034079739999981484, length: 66, iterations: 210"}
{"test_case": 370, "data": "MetropolisHasting 370: robots/8-3-7.pl, test_cost: 0, train_cost: 0, time: 1.493525486, length: 2272, iterations: 9953"}
{"test_case": 371, "data": "MetropolisHasting 371: robots/8-3-8.pl, test_cost: 0, train_cost: 0, time: 0.019486563000000068, length: 221, iterations: 770"}
{"test_case": 372, "data": "MetropolisHasting 372: robots/8-3-9.pl, test_cost: 0, train_cost: 0, time: 2.444615197, length: 3350, iterations: 10751"}
{"test_case": 373, "data": "MetropolisHasting 373: robots/8-3-10.pl, test_cost: 0, train_cost: 0, time: 0.3647970930000004, length: 240, iterations: 5968"}
{"test_case": 374, "data": "MetropolisHasting 374: robots/8-4-0.pl, test_cost: 0, train_cost: 0, time: 0.031291462000000436, length: 244, iterations: 1005"}
{"test_case": 375, "data": "MetropolisHasting 375: robots/8-4-1.pl, test_cost: 0, train_cost: 0, time: 0.1940149309999999, length: 331, iterations: 4813"}
{"test_case": 376, "data": "MetropolisHasting 376: robots/8-4-2.pl, test_cost: 0, train_cost: 0, time: 0.046165674000000045, length: 264, iterations: 1552"}
{"test_case": 377, "data": "MetropolisHasting 377: robots/8-4-3.pl, test_cost: 0, train_cost: 0, time: 0.17781287499999987, length: 349, iterations: 4521"}
{"test_case": 378, "data": "MetropolisHasting 378: robots/8-4-4.pl, test_cost: 0, train_cost: 0, time: 0.4898799969999992, length: 1339, iterations: 4419"}
{"test_case": 379, "data": "MetropolisHasting 379: robots/8-4-5.pl, test_cost: 0, train_cost: 0, time: 0.3200453059999999, length: 836, iterations: 4544"}
{"test_case": 380, "data": "MetropolisHasting 380: robots/8-4-6.pl, test_cost: 0, train_cost: 0, time: 0.18343754799999998, length: 683, iterations: 3043"}
{"test_case": 381, "data": "MetropolisHasting 381: robots/8-4-7.pl, test_cost: 0, train_cost: 0, time: 7.860879614, length: 5367, iterations: 20149"}
{"test_case": 382, "data": "MetropolisHasting 382: robots/8-4-8.pl, test_cost: 0, train_cost: 0, time: 0.0150437409999995, length: 125, iterations: 752"}
{"test_case": 383, "data": "MetropolisHasting 383: robots/8-4-9.pl, test_cost: 0, train_cost: 0, time: 0.2852801859999996, length: 743, iterations: 4395"}
{"test_case": 384, "data": "MetropolisHasting 384: robots/8-4-10.pl, test_cost: 0, train_cost: 0, time: 18.366708482, length: 7940, iterations: 35104"}
{"test_case": 385, "data": "MetropolisHasting 385: robots/8-5-0.pl, test_cost: 0, train_cost: 0, time: 0.02777647599999966, length: 155, iterations: 1153"}
{"test_case": 386, "data": "MetropolisHasting 386: robots/8-5-1.pl, test_cost: 5, train_cost: 5, time: 60.000157501000004, length: 14524, iterations: 67873"}
{"test_case": 387, "data": "MetropolisHasting 387: robots/8-5-2.pl, test_cost: 0, train_cost: 0, time: 7.684016721000006, length: 5357, iterations: 22616"}
{"test_case": 388, "data": "MetropolisHasting 388: robots/8-5-3.pl, test_cost: 0, train_cost: 0, time: 0.10845386100000098, length: 455, iterations: 2529"}
{"test_case": 389, "data": "MetropolisHasting 389: robots/8-5-4.pl, test_cost: 0, train_cost: 0, time: 0.04709828800000082, length: 111, iterations: 2284"}
{"test_case": 390, "data": "MetropolisHasting 390: robots/8-5-5.pl, test_cost: 0, train_cost: 0, time: 0.010482950999999999, length: 84, iterations: 575"}
{"test_case": 391, "data": "MetropolisHasting 391: robots/8-5-6.pl, test_cost: 0, train_cost: 0, time: 3.9849794190000005, length: 3617, iterations: 15300"}
{"test_case": 392, "data": "MetropolisHasting 392: robots/8-5-7.pl, test_cost: 0, train_cost: 0, time: 0.11135941399999982, length: 471, iterations: 2340"}
{"test_case": 393, "data": "MetropolisHasting 393: robots/8-5-8.pl, test_cost: 0, train_cost: 0, time: 2.0609110830000006, length: 2217, iterations: 12314"}
{"test_case": 394, "data": "MetropolisHasting 394: robots/8-5-9.pl, test_cost: 0, train_cost: 0, time: 0.02896872500000036, length: 258, iterations: 797"}
{"test_case": 395, "data": "MetropolisHasting 395: robots/8-5-10.pl, test_cost: 0, train_cost: 0, time: 0.07280005099999975, length: 310, iterations: 1868"}
{"test_case": 396, "data": "MetropolisHasting 396: robots/8-6-0.pl, test_cost: 0, train_cost: 0, time: 0.07932591500000008, length: 358, iterations: 2058"}
{"test_case": 397, "data": "MetropolisHasting 397: robots/8-6-1.pl, test_cost: 0, train_cost: 0, time: 13.14081755, length: 5892, iterations: 34167"}
{"test_case": 398, "data": "MetropolisHasting 398: robots/8-6-2.pl, test_cost: 0, train_cost: 0, time: 5.183331493000001, length: 3892, iterations: 19048"}
{"test_case": 399, "data": "MetropolisHasting 399: robots/8-6-3.pl, test_cost: 0, train_cost: 0, time: 0.06310476299999834, length: 428, iterations: 1563"}
{"test_case": 400, "data": "MetropolisHasting 400: robots/8-6-4.pl, test_cost: 0, train_cost: 0, time: 0.06468392, length: 378, iterations: 1781"}
{"test_case": 401, "data": "MetropolisHasting 401: robots/8-6-5.pl, test_cost: 7, train_cost: 7, time: 60.000274018000006, length: 14143, iterations: 64595"}
{"test_case": 402, "data": "MetropolisHasting 402: robots/8-6-6.pl, test_cost: 0, train_cost: 0, time: 0.07137675199999904, length: 345, iterations: 2077"}
{"test_case": 403, "data": "MetropolisHasting 403: robots/8-6-7.pl, test_cost: 10, train_cost: 10, time: 60.00247739299999, length: 14798, iterations: 67735"}
{"test_case": 404, "data": "MetropolisHasting 404: robots/8-6-8.pl, test_cost: 0, train_cost: 0, time: 0.14660470900000178, length: 555, iterations: 3019"}
{"test_case": 405, "data": "MetropolisHasting 405: robots/8-6-9.pl, test_cost: 0, train_cost: 0, time: 0.0044594610000103785, length: 83, iterations: 264"}
{"test_case": 406, "data": "MetropolisHasting 406: robots/8-6-10.pl, test_cost: 0, train_cost: 0, time: 0.06618416100000957, length: 360, iterations: 2392"}
{"test_case": 407, "data": "MetropolisHasting 407: robots/8-7-0.pl, test_cost: 0, train_cost: 0, time: 1.0397267959999965, length: 1889, iterations: 8423"}
{"test_case": 408, "data": "MetropolisHasting 408: robots/8-7-1.pl, test_cost: 0, train_cost: 0, time: 11.50555463500001, length: 6809, iterations: 26526"}
{"test_case": 409, "data": "MetropolisHasting 409: robots/8-7-2.pl, test_cost: 0, train_cost: 0, time: 0.894130151000013, length: 1704, iterations: 7525"}
{"test_case": 410, "data": "MetropolisHasting 410: robots/8-7-3.pl, test_cost: 0, train_cost: 0, time: 0.083461219, length: 360, iterations: 2280"}
{"test_case": 411, "data": "MetropolisHasting 411: robots/8-7-4.pl, test_cost: 3, train_cost: 3, time: 60.00177095, length: 13584, iterations: 65015"}
{"test_case": 412, "data": "MetropolisHasting 412: robots/8-7-5.pl, test_cost: 0, train_cost: 0, time: 0.03418432000000138, length: 270, iterations: 1182"}
{"test_case": 413, "data": "MetropolisHasting 413: robots/8-7-6.pl, test_cost: 0, train_cost: 0, time: 0.6685062899999963, length: 868, iterations: 9354"}
{"test_case": 414, "data": "MetropolisHasting 414: robots/8-7-7.pl, test_cost: 0, train_cost: 0, time: 0.0061469159999987255, length: 64, iterations: 421"}
{"test_case": 415, "data": "MetropolisHasting 415: robots/8-7-8.pl, test_cost: 8, train_cost: 8, time: 60.00131306800001, length: 14927, iterations: 61977"}
{"test_case": 416, "data": "MetropolisHasting 416: robots/8-7-9.pl, test_cost: 0, train_cost: 0, time: 0.5548803439999972, length: 1271, iterations: 6276"}
{"test_case": 417, "data": "MetropolisHasting 417: robots/8-7-10.pl, test_cost: 0, train_cost: 0, time: 5.189877206000006, length: 4376, iterations: 18631"}
{"test_case": 418, "data": "MetropolisHasting 418: robots/8-8-0.pl, test_cost: 0, train_cost: 0, time: 0.031597752999999784, length: 193, iterations: 1278"}
{"test_case": 419, "data": "MetropolisHasting 419: robots/8-8-1.pl, test_cost: 0, train_cost: 0, time: 0.016636463999986972, length: 130, iterations: 845"}
{"test_case": 420, "data": "MetropolisHasting 420: robots/8-8-2.pl, test_cost: 0, train_cost: 0, time: 0.095453707, length: 367, iterations: 2430"}
{"test_case": 421, "data": "MetropolisHasting 421: robots/8-8-3.pl, test_cost: 0, train_cost: 0, time: 15.465365647, length: 685, iterations: 32844"}
{"test_case": 422, "data": "MetropolisHasting 422: robots/8-8-4.pl, test_cost: 0, train_cost: 0, time: 0.1703053410000006, length: 559, iterations: 3175"}
{"test_case": 423, "data": "MetropolisHasting 423: robots/8-8-5.pl, test_cost: 0, train_cost: 0, time: 6.769830104000002, length: 799, iterations: 27362"}
{"test_case": 424, "data": "MetropolisHasting 424: robots/8-8-6.pl, test_cost: 6, train_cost: 6, time: 60.002727801999995, length: 14690, iterations: 65903"}
{"test_case": 425, "data": "MetropolisHasting 425: robots/8-8-7.pl, test_cost: 0, train_cost: 0, time: 1.0287871290000083, length: 1779, iterations: 8526"}
{"test_case": 426, "data": "MetropolisHasting 426: robots/8-8-8.pl, test_cost: 0, train_cost: 0, time: 10.798661183000007, length: 6511, iterations: 26809"}
{"test_case": 427, "data": "MetropolisHasting 427: robots/8-8-9.pl, test_cost: 0, train_cost: 0, time: 0.31122478100000706, length: 838, iterations: 5115"}
{"test_case": 428, "data": "MetropolisHasting 428: robots/8-8-10.pl, test_cost: 0, train_cost: 0, time: 0.11909680800000899, length: 564, iterations: 2321"}
{"test_case": 429, "data": "MetropolisHasting 429: robots/8-9-0.pl, test_cost: 0, train_cost: 0, time: 15.273994739000003, length: 329, iterations: 30609"}
{"test_case": 430, "data": "MetropolisHasting 430: robots/8-9-1.pl, test_cost: 0, train_cost: 0, time: 0.010697739999999999, length: 72, iterations: 532"}
{"test_case": 431, "data": "MetropolisHasting 431: robots/8-9-2.pl, test_cost: 0, train_cost: 0, time: 0.026443963, length: 193, iterations: 962"}
{"test_case": 432, "data": "MetropolisHasting 432: robots/8-9-3.pl, test_cost: 0, train_cost: 0, time: 16.790307966, length: 6262, iterations: 43470"}
{"test_case": 433, "data": "MetropolisHasting 433: robots/8-9-4.pl, test_cost: 0, train_cost: 0, time: 0.04161520599999946, length: 211, iterations: 1520"}
{"test_case": 434, "data": "MetropolisHasting 434: robots/8-9-5.pl, test_cost: 0, train_cost: 0, time: 0.150638316000002, length: 66, iterations: 2710"}
{"test_case": 435, "data": "MetropolisHasting 435: robots/8-9-6.pl, test_cost: 0, train_cost: 0, time: 0.04565569800000091, length: 250, iterations: 1700"}
{"test_case": 436, "data": "MetropolisHasting 436: robots/8-9-7.pl, test_cost: 0, train_cost: 0, time: 0.12149382499999817, length: 445, iterations: 2788"}
{"test_case": 437, "data": "MetropolisHasting 437: robots/8-9-8.pl, test_cost: 0, train_cost: 0, time: 5.133061745999999, length: 3274, iterations: 22646"}
{"test_case": 438, "data": "MetropolisHasting 438: robots/8-9-9.pl, test_cost: 0, train_cost: 0, time: 0.017421356999999915, length: 169, iterations: 727"}
{"test_case": 439, "data": "MetropolisHasting 439: robots/8-9-10.pl, test_cost: 0, train_cost: 0, time: 10.912219131999997, length: 5563, iterations: 30627"}
{"test_case": 440, "data": "MetropolisHasting 440: robots/10-0-0.pl, test_cost: 0, train_cost: 0, time: 0.0019723449999999995, length: 36, iterations: 137"}
{"test_case": 441, "data": "MetropolisHasting 441: robots/10-0-1.pl, test_cost: 0, train_cost: 0, time: 8.958773111000001, length: 5995, iterations: 20806"}
{"test_case": 442, "data": "MetropolisHasting 442: robots/10-0-2.pl, test_cost: 0, train_cost: 0, time: 0.12475630900000034, length: 426, iterations: 2848"}
{"test_case": 443, "data": "MetropolisHasting 443: robots/10-0-3.pl, test_cost: 0, train_cost: 0, time: 2.961403773999999, length: 2824, iterations: 13266"}
{"test_case": 444, "data": "MetropolisHasting 444: robots/10-0-4.pl, test_cost: 0, train_cost: 0, time: 0.006437058999999579, length: 92, iterations: 304"}
{"test_case": 445, "data": "MetropolisHasting 445: robots/10-0-5.pl, test_cost: 0, train_cost: 0, time: 0.020160391999999305, length: 141, iterations: 826"}
{"test_case": 446, "data": "MetropolisHasting 446: robots/10-0-6.pl, test_cost: 0, train_cost: 0, time: 0.1577473720000011, length: 418, iterations: 3664"}
{"test_case": 447, "data": "MetropolisHasting 447: robots/10-0-7.pl, test_cost: 0, train_cost: 0, time: 0.013807305999998576, length: 131, iterations: 657"}
{"test_case": 448, "data": "MetropolisHasting 448: robots/10-0-8.pl, test_cost: 0, train_cost: 0, time: 3.066732999000001, length: 2479, iterations: 16539"}
{"test_case": 449, "data": "MetropolisHasting 449: robots/10-0-9.pl, test_cost: 0, train_cost: 0, time: 46.659362004, length: 13113, iterations: 55021"}
{"test_case": 450, "data": "MetropolisHasting 450: robots/10-0-10.pl, test_cost: 0, train_cost: 0, time: 0.041486592999999995, length: 255, iterations: 1328"}
{"test_case": 451, "data": "MetropolisHasting 451: robots/10-1-0.pl, test_cost: 0, train_cost: 0, time: 0.021879667000000005, length: 175, iterations: 954"}
{"test_case": 452, "data": "MetropolisHasting 452: robots/10-1-1.pl, test_cost: 0, train_cost: 0, time: 0.001901463000000006, length: 50, iterations: 112"}
{"test_case": 453, "data": "MetropolisHasting 453: robots/10-1-2.pl, test_cost: 0, train_cost: 0, time: 0.86054356, length: 1512, iterations: 7069"}
{"test_case": 454, "data": "MetropolisHasting 454: robots/10-1-3.pl, test_cost: 0, train_cost: 0, time: 0.06463753399999994, length: 385, iterations: 1558"}
{"test_case": 455, "data": "MetropolisHasting 455: robots/10-1-4.pl, test_cost: 0, train_cost: 0, time: 0.09366667399999995, length: 311, iterations: 2611"}
{"test_case": 456, "data": "MetropolisHasting 456: robots/10-1-5.pl, test_cost: 0, train_cost: 0, time: 0.11941182000000006, length: 502, iterations: 2501"}
{"test_case": 457, "data": "MetropolisHasting 457: robots/10-1-6.pl, test_cost: 0, train_cost: 0, time: 0.061641545999999936, length: 283, iterations: 1703"}
{"test_case": 458, "data": "MetropolisHasting 458: robots/10-1-7.pl, test_cost: 0, train_cost: 0, time: 0.02412049999999999, length: 170, iterations: 990"}
{"test_case": 459, "data": "MetropolisHasting 459: robots/10-1-8.pl, test_cost: 0, train_cost: 0, time: 2.6727175709999997, length: 2683, iterations: 11854"}
{"test_case": 460, "data": "MetropolisHasting 460: robots/10-1-9.pl, test_cost: 5, train_cost: 5, time: 60.001451599999996, length: 14572, iterations: 64002"}
{"test_case": 461, "data": "MetropolisHasting 461: robots/10-1-10.pl, test_cost: 0, train_cost: 0, time: 0.680917670999996, length: 1095, iterations: 11463"}
{"test_case": 462, "data": "MetropolisHasting 462: robots/10-2-0.pl, test_cost: 0, train_cost: 0, time: 2.3284923579999983, length: 2816, iterations: 11060"}
{"test_case": 463, "data": "MetropolisHasting 463: robots/10-2-1.pl, test_cost: 0, train_cost: 0, time: 1.848726261000003, length: 2649, iterations: 11365"}
{"test_case": 464, "data": "MetropolisHasting 464: robots/10-2-2.pl, test_cost: 0, train_cost: 0, time: 5.601466154999997, length: 4348, iterations: 20964"}
{"test_case": 465, "data": "MetropolisHasting 465: robots/10-2-3.pl, test_cost: 0, train_cost: 0, time: 1.689875931000003, length: 2012, iterations: 10860"}
{"test_case": 466, "data": "MetropolisHasting 466: robots/10-2-4.pl, test_cost: 2, train_cost: 2, time: 60.001217785999984, length: 14289, iterations: 72296"}
{"test_case": 467, "data": "MetropolisHasting 467: robots/10-2-5.pl, test_cost: 0, train_cost: 0, time: 0.13534203199998274, length: 666, iterations: 2373"}
{"test_case": 468, "data": "MetropolisHasting 468: robots/10-2-6.pl, test_cost: 0, train_cost: 0, time: 11.789299602, length: 6819, iterations: 28891"}
{"test_case": 469, "data": "MetropolisHasting 469: robots/10-2-7.pl, test_cost: 0, train_cost: 0, time: 1.2466426580000132, length: 2145, iterations: 9088"}
{"test_case": 470, "data": "MetropolisHasting 470: robots/10-2-8.pl, test_cost: 0, train_cost: 0, time: 0.09974321800000001, length: 510, iterations: 1880"}
{"test_case": 471, "data": "MetropolisHasting 471: robots/10-2-9.pl, test_cost: 0, train_cost: 0, time: 0.04582994700000001, length: 247, iterations: 1558"}
{"test_case": 472, "data": "MetropolisHasting 472: robots/10-2-10.pl, test_cost: 0, train_cost: 0, time: 0.015672889999999995, length: 100, iterations: 818"}
{"test_case": 473, "data": "MetropolisHasting 473: robots/10-3-0.pl, test_cost: 0, train_cost: 0, time: 0.004596849999999986, length: 52, iterations: 355"}
{"test_case": 474, "data": "MetropolisHasting 474: robots/10-3-1.pl, test_cost: 0, train_cost: 0, time: 6.478458244, length: 4357, iterations: 20545"}
{"test_case": 475, "data": "MetropolisHasting 475: robots/10-3-2.pl, test_cost: 0, train_cost: 0, time: 0.2304870750000001, length: 700, iterations: 3391"}
{"test_case": 476, "data": "MetropolisHasting 476: robots/10-3-3.pl, test_cost: 4, train_cost: 4, time: 60.003288519, length: 16036, iterations: 51417"}
{"test_case": 477, "data": "MetropolisHasting 477: robots/10-3-4.pl, test_cost: 0, train_cost: 0, time: 0.06727031699999486, length: 179, iterations: 2470"}
{"test_case": 478, "data": "MetropolisHasting 478: robots/10-3-5.pl, test_cost: 0, train_cost: 0, time: 0.016387536999999952, length: 156, iterations: 758"}
{"test_case": 479, "data": "MetropolisHasting 479: robots/10-3-6.pl, test_cost: 0, train_cost: 0, time: 5.329743512999997, length: 3694, iterations: 22255"}
{"test_case": 480, "data": "MetropolisHasting 480: robots/10-3-7.pl, test_cost: 0, train_cost: 0, time: 14.540801711, length: 7977, iterations: 26131"}
{"test_case": 481, "data": "MetropolisHasting 481: robots/10-3-8.pl, test_cost: 0, train_cost: 0, time: 0.15589496700000005, length: 436, iterations: 3717"}
{"test_case": 482, "data": "MetropolisHasting 482: robots/10-3-9.pl, test_cost: 0, train_cost: 0, time: 0.14116048300000017, length: 451, iterations: 3167"}
{"test_case": 483, "data": "MetropolisHasting 483: robots/10-3-10.pl, test_cost: 3, train_cost: 3, time: 60.001973306000004, length: 14937, iterations: 69190"}
{"test_case": 484, "data": "MetropolisHasting 484: robots/10-4-0.pl, test_cost: 0, train_cost: 0, time: 0.4289562189999998, length: 1031, iterations: 5727"}
{"test_case": 485, "data": "MetropolisHasting 485: robots/10-4-1.pl, test_cost: 0, train_cost: 0, time: 0.03435328699998763, length: 272, iterations: 1072"}
{"test_case": 486, "data": "MetropolisHasting 486: robots/10-4-2.pl, test_cost: 0, train_cost: 0, time: 0.010471610999999825, length: 151, iterations: 494"}
{"test_case": 487, "data": "MetropolisHasting 487: robots/10-4-3.pl, test_cost: 0, train_cost: 0, time: 0.381546876999991, length: 1142, iterations: 4807"}
{"test_case": 488, "data": "MetropolisHasting 488: robots/10-4-4.pl, test_cost: 0, train_cost: 0, time: 7.5861885150000035, length: 149, iterations: 22545"}
{"test_case": 489, "data": "MetropolisHasting 489: robots/10-4-5.pl, test_cost: 0, train_cost: 0, time: 0.1450765790000048, length: 636, iterations: 2507"}
{"test_case": 490, "data": "MetropolisHasting 490: robots/10-4-6.pl, test_cost: 0, train_cost: 0, time: 0.14243548299999997, length: 398, iterations: 3313"}
{"test_case": 491, "data": "MetropolisHasting 491: robots/10-4-7.pl, test_cost: 0, train_cost: 0, time: 0.08075402599999998, length: 481, iterations: 1583"}
{"test_case": 492, "data": "MetropolisHasting 492: robots/10-4-8.pl, test_cost: 0, train_cost: 0, time: 0.212321704, length: 699, iterations: 3485"}
{"test_case": 493, "data": "MetropolisHasting 493: robots/10-4-9.pl, test_cost: 6, train_cost: 6, time: 60.001722240999996, length: 14387, iterations: 63038"}
{"test_case": 494, "data": "MetropolisHasting 494: robots/10-4-10.pl, test_cost: 2, train_cost: 2, time: 60.00031995599999, length: 14845, iterations: 70574"}
{"test_case": 495, "data": "MetropolisHasting 495: robots/10-5-0.pl, test_cost: 0, train_cost: 0, time: 1.0603404920000088, length: 1584, iterations: 8576"}
{"test_case": 496, "data": "MetropolisHasting 496: robots/10-5-1.pl, test_cost: 0, train_cost: 0, time: 0.1910225999999966, length: 678, iterations: 3618"}
{"test_case": 497, "data": "MetropolisHasting 497: robots/10-5-2.pl, test_cost: 0, train_cost: 0, time: 0.05599153600000761, length: 338, iterations: 1949"}
{"test_case": 498, "data": "MetropolisHasting 498: robots/10-5-3.pl, test_cost: 0, train_cost: 0, time: 0.12665566600000489, length: 538, iterations: 3134"}
{"test_case": 499, "data": "MetropolisHasting 499: robots/10-5-4.pl, test_cost: 0, train_cost: 0, time: 0.3522002879999917, length: 1033, iterations: 4160"}
{"test_case": 500, "data": "MetropolisHasting 500: robots/10-5-5.pl, test_cost: 0, train_cost: 0, time: 0.6553961859999999, length: 1626, iterations: 4957"}
{"test_case": 501, "data": "MetropolisHasting 501: robots/10-5-6.pl, test_cost: 0, train_cost: 0, time: 0.104019364, length: 340, iterations: 3039"}
{"test_case": 502, "data": "MetropolisHasting 502: robots/10-5-7.pl, test_cost: 0, train_cost: 0, time: 50.618858792000005, length: 420, iterations: 60671"}
{"test_case": 503, "data": "MetropolisHasting 503: robots/10-5-8.pl, test_cost: 0, train_cost: 0, time: 0.05108826800000088, length: 237, iterations: 1911"}
{"test_case": 504, "data": "MetropolisHasting 504: robots/10-5-9.pl, test_cost: 0, train_cost: 0, time: 0.09620774199999715, length: 498, iterations: 2206"}
{"test_case": 505, "data": "MetropolisHasting 505: robots/10-5-10.pl, test_cost: 0, train_cost: 0, time: 0.12686138699999816, length: 557, iterations: 2736"}
{"test_case": 506, "data": "MetropolisHasting 506: robots/10-6-0.pl, test_cost: 0, train_cost: 0, time: 10.502460883999994, length: 5713, iterations: 32038"}
{"test_case": 507, "data": "MetropolisHasting 507: robots/10-6-1.pl, test_cost: 0, train_cost: 0, time: 0.010080453000000489, length: 110, iterations: 521"}
{"test_case": 508, "data": "MetropolisHasting 508: robots/10-6-2.pl, test_cost: 0, train_cost: 0, time: 0.03659433899999698, length: 60, iterations: 1765"}
{"test_case": 509, "data": "MetropolisHasting 509: robots/10-6-3.pl, test_cost: 0, train_cost: 0, time: 3.3459103780000063, length: 735, iterations: 19827"}
{"test_case": 510, "data": "MetropolisHasting 510: robots/10-6-4.pl, test_cost: 1, train_cost: 1, time: 60.000731586, length: 14749, iterations: 61665"}
{"test_case": 511, "data": "MetropolisHasting 511: robots/10-6-5.pl, test_cost: 0, train_cost: 0, time: 0.05814846399999851, length: 298, iterations: 1830"}
{"test_case": 512, "data": "MetropolisHasting 512: robots/10-6-6.pl, test_cost: 0, train_cost: 0, time: 2.184801505000003, length: 2537, iterations: 11739"}
{"test_case": 513, "data": "MetropolisHasting 513: robots/10-6-7.pl, test_cost: 0, train_cost: 0, time: 0.018503899999998907, length: 109, iterations: 1189"}
{"test_case": 514, "data": "MetropolisHasting 514: robots/10-6-8.pl, test_cost: 17, train_cost: 17, time: 60.000299186, length: 13380, iterations: 69579"}
{"test_case": 515, "data": "MetropolisHasting 515: robots/10-6-9.pl, test_cost: 8, train_cost: 8, time: 60.00155684900001, length: 14651, iterations: 60511"}
{"test_case": 516, "data": "MetropolisHasting 516: robots/10-6-10.pl, test_cost: 0, train_cost: 0, time: 0.022392496000009032, length: 175, iterations: 985"}
{"test_case": 517, "data": "MetropolisHasting 517: robots/10-7-0.pl, test_cost: 0, train_cost: 0, time: 0.4726382650000005, length: 1146, iterations: 5243"}
{"test_case": 518, "data": "MetropolisHasting 518: robots/10-7-1.pl, test_cost: 0, train_cost: 0, time: 0.018808749000015723, length: 58, iterations: 1266"}
{"test_case": 519, "data": "MetropolisHasting 519: robots/10-7-2.pl, test_cost: 0, train_cost: 0, time: 0.07134685900001614, length: 473, iterations: 1733"}
{"test_case": 520, "data": "MetropolisHasting 520: robots/10-7-3.pl, test_cost: 6, train_cost: 6, time: 60.002131119, length: 14832, iterations: 60771"}
{"test_case": 521, "data": "MetropolisHasting 521: robots/10-7-4.pl, test_cost: 8, train_cost: 8, time: 60.000532271, length: 16639, iterations: 53808"}
{"test_case": 522, "data": "MetropolisHasting 522: robots/10-7-5.pl, test_cost: 10, train_cost: 10, time: 60.00060739499999, length: 16322, iterations: 57236"}
{"test_case": 523, "data": "MetropolisHasting 523: robots/10-7-6.pl, test_cost: 0, train_cost: 0, time: 0.9604122190000055, length: 2016, iterations: 6434"}
{"test_case": 524, "data": "MetropolisHasting 524: robots/10-7-7.pl, test_cost: 0, train_cost: 0, time: 0.04607106800000338, length: 342, iterations: 1480"}
{"test_case": 525, "data": "MetropolisHasting 525: robots/10-7-8.pl, test_cost: 0, train_cost: 0, time: 0.1465223860000151, length: 513, iterations: 3649"}
{"test_case": 526, "data": "MetropolisHasting 526: robots/10-7-9.pl, test_cost: 14, train_cost: 14, time: 60.00273848699999, length: 15604, iterations: 57259"}
{"test_case": 527, "data": "MetropolisHasting 527: robots/10-7-10.pl, test_cost: 2, train_cost: 2, time: 60.000384774999986, length: 15871, iterations: 65736"}
{"test_case": 528, "data": "MetropolisHasting 528: robots/10-8-0.pl, test_cost: 0, train_cost: 0, time: 0.29865581600000723, length: 1203, iterations: 3553"}
{"test_case": 529, "data": "MetropolisHasting 529: robots/10-8-1.pl, test_cost: 0, train_cost: 0, time: 0.18712241299999732, length: 604, iterations: 3489"}
{"test_case": 530, "data": "MetropolisHasting 530: robots/10-8-2.pl, test_cost: 0, train_cost: 0, time: 16.496407245999997, length: 8346, iterations: 26534"}
{"test_case": 531, "data": "MetropolisHasting 531: robots/10-8-3.pl, test_cost: 0, train_cost: 0, time: 13.653520011999998, length: 2659, iterations: 38647"}
{"test_case": 532, "data": "MetropolisHasting 532: robots/10-8-4.pl, test_cost: 0, train_cost: 0, time: 34.169882074, length: 11836, iterations: 41596"}
{"test_case": 533, "data": "MetropolisHasting 533: robots/10-8-5.pl, test_cost: 0, train_cost: 0, time: 0.03607310299999256, length: 253, iterations: 1476"}
{"test_case": 534, "data": "MetropolisHasting 534: robots/10-8-6.pl, test_cost: 0, train_cost: 0, time: 0.046263511000006474, length: 271, iterations: 1928"}
{"test_case": 535, "data": "MetropolisHasting 535: robots/10-8-7.pl, test_cost: 0, train_cost: 0, time: 6.309897164999995, length: 4034, iterations: 22894"}
{"test_case": 536, "data": "MetropolisHasting 536: robots/10-8-8.pl, test_cost: 0, train_cost: 0, time: 0.09847777599999574, length: 424, iterations: 2261"}
{"test_case": 537, "data": "MetropolisHasting 537: robots/10-8-9.pl, test_cost: 0, train_cost: 0, time: 2.88636493300001, length: 3091, iterations: 13036"}
{"test_case": 538, "data": "MetropolisHasting 538: robots/10-8-10.pl, test_cost: 0, train_cost: 0, time: 12.41082953, length: 6465, iterations: 27854"}
{"test_case": 539, "data": "MetropolisHasting 539: robots/10-9-0.pl, test_cost: 4, train_cost: 4, time: 60.002255925, length: 15020, iterations: 58304"}
{"test_case": 540, "data": "MetropolisHasting 540: robots/10-9-1.pl, test_cost: 0, train_cost: 0, time: 43.088785744999996, length: 11232, iterations: 59241"}
{"test_case": 541, "data": "MetropolisHasting 541: robots/10-9-2.pl, test_cost: 0, train_cost: 0, time: 0.11814215799999772, length: 477, iterations: 2332"}
{"test_case": 542, "data": "MetropolisHasting 542: robots/10-9-3.pl, test_cost: 8, train_cost: 8, time: 60.000020035, length: 14856, iterations: 57197"}
{"test_case": 543, "data": "MetropolisHasting 543: robots/10-9-4.pl, test_cost: 0, train_cost: 0, time: 0.8051757119999934, length: 1133, iterations: 7865"}
{"test_case": 544, "data": "MetropolisHasting 544: robots/10-9-5.pl, test_cost: 0, train_cost: 0, time: 0.11521661399999061, length: 526, iterations: 2385"}
{"test_case": 545, "data": "MetropolisHasting 545: robots/10-9-6.pl, test_cost: 0, train_cost: 0, time: 0.46796930999998665, length: 1027, iterations: 5521"}
{"test_case": 546, "data": "MetropolisHasting 546: robots/10-9-7.pl, test_cost: 0, train_cost: 0, time: 3.1360238289999955, length: 3694, iterations: 10524"}
{"test_case": 547, "data": "MetropolisHasting 547: robots/10-9-8.pl, test_cost: 1, train_cost: 1, time: 60.00126815200001, length: 16466, iterations: 57121"}
{"test_case": 548, "data": "MetropolisHasting 548: robots/10-9-9.pl, test_cost: 6, train_cost: 6, time: 60.000956293, length: 14300, iterations: 63356"}
{"test_case": 549, "data": "MetropolisHasting 549: robots/10-9-10.pl, test_cost: 0, train_cost: 0, time: 2.737393983000004, length: 3358, iterations: 11878"}
{"domain": "robot", "params": {"type": "metropolis", "alpha": 1, "add_token_end": 0, "add_token_random": 30, "remove_token_end": 0, "remove_token_random": 20, "add_loop_end": 0, "add_loop_random": 30, "add_if_statement_end": 0, "add_if_statement_random": 30, "start_over": 6}, "files": "([2, 4, 6, 8, 10], range(0, 10), range(0, 11))", "cases_solved": "517 / 550 (94.0%)", "average": {"test_cost": 0.34181818181818185, "train_cost": 0.34181818181818185, "execution_time": 5.364615243716365, "program_length": 1730.614545454545, "number_of_explored_programs": 9276.500000000002, "number_of_iterations": 9276.500000000002}, "average_correct": {"test_cost": 0.0, "train_cost": 0.0, "execution_time": 1.8771693845570596, "program_length": 905.1605415860732, "number_of_explored_programs": 5788.617021276593, "number_of_iterations": 5788.617021276593}, "average_failed": {"test_cost": 5.696969696969695, "train_cost": 5.696969696969695, "execution_time": 60.00126703721211, "program_length": 14662.727272727274, "number_of_explored_programs": 63919.999999999985, "number_of_iterations": 63919.999999999985}, "variance": {"test_cost": 2.7536214605067055, "train_cost": 2.7536214605067055, "execution_time": 229.0513365983678, "program_length": 14215133.199059447, "number_of_explored_programs": 312879641.0118397, "number_of_iterations": 312879641.0118397}, "variance_correct": {"test_cost": 0.0, "train_cost": 0.0, "execution_time": 40.602486409687145, "program_length": 3696243.677664822, "number_of_explored_programs": 127781704.48095004, "number_of_iterations": 127781704.48095004}, "variance_failed": {"test_cost": 15.78030303030303, "train_cost": 15.78030303030303, "execution_time": 7.671822775752604e-07, "program_length": 802220.7045454546, "number_of_explored_programs": 31593436.0, "number_of_iterations": 31593436.0}, "best_results": {"file": "robots/10-9-10.pl", "test_cost": 0, "train_cost": 0, "execution_time": 2.737393983000004, "program_length": 3358, "number_of_explored_programs": 11878, "program": "Program([MoveUp, If(AtRight [MoveUp] [MoveLeft]), If(NotAtTop [MoveLeft] [MoveLeft]), MoveRight, LoopWhile(AtLeft [MoveLeft]), If(AtRight [MoveUp] [MoveLeft]), LoopWhile(NotAtTop [MoveLeft]), LoopWhile(AtRight [Drop]), MoveRight, LoopWhile(AtBottom [MoveLeft]), If(NotAtRight [MoveDown] [MoveUp]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtLeft [Drop]), If(AtRight [Drop] [MoveDown]), If(AtLeft [MoveDown] [MoveUp]), MoveLeft, LoopWhile(AtRight [Drop]), If(AtRight [Grab] [MoveLeft]), MoveRight, MoveRight, MoveDown, MoveRight, LoopWhile(AtRight [MoveUp]), If(NotAtRight [MoveDown] [MoveRight]), MoveDown, MoveDown, If(NotAtRight [MoveLeft] [MoveLeft]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [Drop]), If(AtLeft [MoveUp] [MoveUp]), MoveLeft, LoopWhile(AtTop [Grab]), MoveDown, LoopWhile(NotAtTop [MoveUp]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveLeft]), LoopWhile(NotAtTop [MoveDown]), If(AtLeft [Drop] [MoveLeft]), If(NotAtRight [MoveDown] [MoveUp]), If(AtLeft [MoveUp] [MoveRight]), MoveLeft, If(AtBottom [Drop] [MoveLeft]), MoveDown, If(NotAtLeft [MoveDown] [MoveLeft]), If(AtTop [MoveDown] [MoveDown]), If(AtLeft [MoveUp] [MoveRight]), MoveRight, LoopWhile(AtBottom [MoveDown]), If(NotAtBottom [MoveLeft] [Grab]), LoopWhile(AtTop [Grab]), MoveUp, If(NotAtRight [MoveRight] [MoveRight]), If(AtRight [Grab] [MoveUp]), If(AtBottom [MoveRight] [MoveLeft]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), MoveLeft, LoopWhile(AtBottom [Grab]), MoveDown, If(NotAtRight [MoveDown] [MoveRight]), MoveRight, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [Grab]), If(NotAtTop [MoveLeft] [MoveLeft]), LoopWhile(AtTop [Grab]), LoopWhile(AtTop [Drop]), If(NotAtRight [MoveRight] [MoveDown]), If(AtRight [MoveLeft] [MoveLeft]), If(AtTop [Drop] [MoveUp]), MoveRight, MoveRight, If(AtTop [MoveUp] [MoveLeft]), MoveLeft, MoveLeft, If(NotAtTop [MoveDown] [Grab]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [MoveRight]), LoopWhile(NotAtLeft [MoveLeft]), MoveDown, LoopWhile(AtBottom [Grab]), MoveRight, If(NotAtTop [MoveRight] [Drop]), MoveRight, MoveRight, MoveUp, If(AtTop [MoveRight] [MoveLeft]), If(NotAtBottom [MoveLeft] [MoveLeft]), MoveRight, MoveDown, LoopWhile(AtRight [Grab]), If(AtBottom [Grab] [MoveUp]), MoveDown, MoveDown, If(AtTop [Grab] [MoveUp]), MoveRight, MoveRight, If(NotAtTop [MoveUp] [MoveDown]), MoveLeft, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [MoveLeft]), MoveRight, MoveLeft, LoopWhile(AtTop [Drop]), If(NotAtLeft [MoveDown] [MoveDown]), If(AtBottom [MoveLeft] [MoveUp]), MoveRight, MoveRight, MoveUp, MoveRight, MoveDown, If(AtLeft [Grab] [MoveRight]), MoveLeft, MoveLeft, MoveLeft, MoveRight, LoopWhile(AtRight [MoveLeft]), MoveUp, MoveLeft, MoveDown, LoopWhile(AtRight [MoveLeft]), MoveUp, LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveDown]), If(AtLeft [MoveDown] [MoveRight]), If(NotAtTop [MoveDown] [MoveLeft]), MoveRight, LoopWhile(AtRight [MoveDown]), MoveDown, LoopWhile(AtTop [MoveRight]), If(AtBottom [Grab] [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), MoveLeft, If(AtBottom [MoveUp] [MoveLeft]), If(NotAtBottom [MoveRight] [MoveRight]), MoveLeft, LoopWhile(AtBottom [MoveRight]), If(NotAtBottom [MoveUp] [MoveDown]), LoopWhile(AtTop [Grab]), LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [MoveDown]), If(AtTop [MoveRight] [MoveRight]), If(NotAtRight [MoveDown] [MoveUp]), If(NotAtBottom [MoveUp] [MoveDown]), MoveUp, If(NotAtTop [MoveUp] [MoveDown]), LoopWhile(AtLeft [MoveUp]), If(NotAtBottom [MoveUp] [MoveRight]), If(NotAtTop [MoveUp] [MoveRight]), LoopWhile(AtBottom [MoveRight]), LoopWhile(NotAtTop [MoveLeft]), If(AtTop [MoveLeft] [MoveRight]), MoveDown, MoveDown, MoveUp, LoopWhile(AtLeft [MoveLeft]), If(NotAtRight [MoveRight] [MoveDown]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [Grab]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [MoveUp]), MoveUp, MoveDown, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [MoveRight]), If(AtBottom [MoveDown] [MoveUp]), LoopWhile(AtBottom [Grab]), If(NotAtTop [Grab] [MoveRight]), If(AtTop [MoveDown] [MoveUp]), MoveLeft, If(AtRight [MoveRight] [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [MoveLeft]), If(NotAtRight [MoveRight] [MoveLeft]), MoveLeft, LoopWhile(AtLeft [MoveUp]), If(AtBottom [MoveDown] [MoveLeft]), LoopWhile(AtBottom [MoveRight]), MoveUp, If(NotAtBottom [MoveRight] [MoveUp]), If(NotAtTop [MoveRight] [MoveUp]), MoveUp, MoveLeft, If(NotAtBottom [MoveLeft] [Drop]), If(NotAtRight [MoveRight] [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveDown]), MoveLeft, LoopWhile(AtTop [MoveRight]), MoveRight, MoveDown, LoopWhile(AtRight [Grab]), LoopWhile(AtRight [Drop]), LoopWhile(NotAtRight [MoveRight]), If(NotAtBottom [MoveLeft] [MoveDown]), LoopWhile(AtLeft [MoveLeft]), MoveDown, MoveDown, LoopWhile(AtRight [Drop]), LoopWhile(AtTop [MoveUp]), If(AtTop [Drop] [MoveRight]), LoopWhile(NotAtRight [Drop]), MoveUp, If(AtTop [Drop] [MoveUp]), LoopWhile(AtTop [Drop]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtBottom [MoveDown]), MoveDown, MoveUp, LoopWhile(NotAtRight [MoveLeft]), If(AtRight [MoveDown] [MoveDown]), LoopWhile(AtTop [Grab]), LoopWhile(NotAtRight [Drop]), MoveLeft, LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [MoveUp]), MoveDown, MoveUp, If(NotAtLeft [MoveUp] [MoveRight]), MoveDown, MoveUp, MoveLeft, MoveRight, LoopWhile(AtTop [MoveUp]), MoveLeft, MoveLeft, LoopWhile(AtRight [MoveRight]), MoveDown, MoveLeft, LoopWhile(AtTop [Grab]), MoveLeft, MoveLeft, MoveUp, MoveRight, MoveDown, MoveLeft, MoveRight, MoveRight, MoveDown, MoveDown, LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [Grab]), LoopWhile(AtTop [Drop]), MoveLeft, LoopWhile(AtLeft [MoveUp]), MoveDown, LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [Drop]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveDown]), If(AtBottom [Grab] [MoveDown]), LoopWhile(AtRight [Drop]), MoveLeft, LoopWhile(AtBottom [Drop]), MoveRight, If(AtLeft [MoveDown] [MoveDown]), MoveUp, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveRight]), If(NotAtLeft [MoveDown] [MoveDown]), LoopWhile(AtBottom [MoveRight]), If(NotAtLeft [MoveDown] [Drop]), LoopWhile(AtLeft [MoveUp]), If(AtTop [MoveDown] [MoveUp]), If(AtTop [MoveDown] [MoveDown]), If(AtBottom [MoveRight] [MoveRight]), MoveLeft, If(NotAtRight [MoveUp] [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), MoveDown, If(NotAtRight [MoveUp] [MoveDown]), LoopWhile(AtBottom [MoveUp]), MoveLeft, MoveRight, LoopWhile(AtLeft [MoveDown]), MoveUp, If(NotAtLeft [MoveDown] [MoveUp]), MoveLeft, MoveUp, LoopWhile(AtLeft [MoveLeft]), LoopWhile(NotAtBottom [MoveDown]), MoveLeft, LoopWhile(AtRight [MoveUp]), MoveRight, MoveUp, If(NotAtTop [MoveRight] [MoveDown]), LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [Grab]), If(AtRight [MoveLeft] [MoveDown]), LoopWhile(NotAtBottom [Grab]), MoveUp, If(NotAtBottom [MoveUp] [Grab]), LoopWhile(AtBottom [MoveLeft]), MoveRight, MoveUp, LoopWhile(AtRight [MoveLeft]), MoveUp, LoopWhile(AtLeft [MoveRight]), If(NotAtBottom [MoveUp] [Grab]), MoveDown, LoopWhile(AtTop [MoveDown]), MoveDown, LoopWhile(AtBottom [MoveDown]), MoveUp, LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveUp]), If(AtBottom [Grab] [MoveDown]), If(AtBottom [MoveRight] [MoveUp]), If(AtLeft [Grab] [MoveUp]), LoopWhile(AtTop [MoveLeft]), LoopWhile(NotAtTop [MoveUp]), LoopWhile(AtLeft [Grab]), If(NotAtTop [MoveDown] [MoveDown]), If(NotAtTop [MoveUp] [MoveRight]), LoopWhile(NotAtTop [Grab]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtLeft [Drop]), If(AtBottom [Drop] [MoveDown]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [Grab]), MoveLeft, MoveDown, MoveRight, LoopWhile(AtLeft [Drop]), If(NotAtRight [MoveUp] [MoveRight]), If(AtTop [MoveDown] [MoveDown]), MoveDown, MoveRight, If(AtRight [MoveRight] [MoveDown]), If(NotAtRight [MoveLeft] [MoveRight]), If(AtLeft [MoveDown] [MoveDown]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtBottom [MoveLeft]), If(AtRight [MoveRight] [MoveLeft]), If(AtTop [MoveDown] [MoveLeft]), If(NotAtRight [MoveUp] [MoveUp]), If(AtLeft [MoveLeft] [MoveDown]), MoveLeft, LoopWhile(AtLeft [MoveLeft]), If(NotAtTop [MoveDown] [MoveRight]), If(AtBottom [MoveDown] [MoveUp]), LoopWhile(AtBottom [MoveLeft]), If(NotAtRight [MoveLeft] [MoveUp]), If(NotAtTop [MoveLeft] [MoveDown]), MoveRight, LoopWhile(AtLeft [MoveDown]), MoveLeft, If(NotAtTop [MoveDown] [MoveLeft]), MoveRight, LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtLeft [MoveUp]), MoveDown, If(NotAtBottom [MoveUp] [MoveDown]), If(NotAtRight [MoveDown] [Grab]), LoopWhile(AtRight [MoveDown]), MoveUp, MoveDown, MoveUp, LoopWhile(AtTop [MoveRight]), LoopWhile(AtTop [MoveRight]), If(NotAtBottom [MoveLeft] [Drop]), If(NotAtTop [MoveRight] [MoveUp]), MoveUp, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [MoveUp]), If(NotAtLeft [MoveUp] [MoveDown]), If(AtTop [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveRight]), MoveUp, If(NotAtLeft [MoveUp] [Grab]), If(NotAtTop [MoveDown] [Drop]), If(NotAtRight [MoveDown] [MoveDown]), If(AtLeft [Drop] [MoveRight]), MoveLeft, MoveRight, If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtBottom [MoveDown]), MoveLeft, LoopWhile(AtRight [MoveLeft]), MoveLeft, LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [MoveLeft]), If(AtLeft [Grab] [MoveUp]), If(NotAtLeft [MoveDown] [MoveLeft]), If(AtBottom [MoveLeft] [MoveUp]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [MoveUp]), MoveRight, If(AtTop [MoveDown] [MoveDown]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [Grab]), If(AtTop [MoveLeft] [MoveUp]), If(AtLeft [MoveLeft] [MoveDown]), If(NotAtRight [MoveUp] [MoveLeft]), MoveLeft, MoveDown, MoveDown, LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [MoveUp]), MoveUp, LoopWhile(AtRight [Grab]), MoveRight, LoopWhile(AtTop [MoveDown]), LoopWhile(AtLeft [Grab]), LoopWhile(AtBottom [MoveRight]), If(AtLeft [MoveRight] [MoveLeft]), If(NotAtRight [MoveRight] [MoveDown]), LoopWhile(AtRight [MoveRight]), If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtTop [MoveRight]), If(NotAtLeft [MoveDown] [MoveUp]), MoveUp, LoopWhile(AtTop [Drop]), If(AtRight [MoveDown] [MoveLeft]), LoopWhile(AtTop [MoveUp]), If(NotAtRight [MoveUp] [MoveLeft]), MoveLeft, LoopWhile(AtRight [Drop]), LoopWhile(AtBottom [Grab]), MoveRight, MoveUp, If(AtLeft [MoveDown] [MoveLeft]), MoveDown, LoopWhile(AtBottom [MoveLeft]), If(NotAtLeft [MoveRight] [MoveRight]), If(NotAtLeft [MoveUp] [MoveRight]), If(NotAtRight [MoveDown] [Grab]), LoopWhile(AtRight [MoveLeft]), MoveLeft, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveLeft]), MoveRight, If(AtTop [Grab] [MoveDown]), If(AtLeft [MoveRight] [MoveDown]), MoveRight, If(AtTop [Drop] [MoveRight]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [Drop]), LoopWhile(AtRight [MoveDown]), MoveLeft, MoveDown, If(AtRight [MoveLeft] [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveRight, LoopWhile(AtTop [MoveRight]), MoveRight, MoveLeft, LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtLeft [Grab]), MoveLeft, MoveUp, If(NotAtLeft [MoveRight] [MoveRight]), If(NotAtBottom [MoveDown] [Drop]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveUp]), If(AtRight [MoveDown] [MoveLeft]), MoveUp, MoveLeft, LoopWhile(AtTop [MoveDown]), If(NotAtBottom [MoveUp] [Grab]), If(AtTop [Drop] [MoveDown]), MoveUp, LoopWhile(AtLeft [Grab]), If(AtTop [Grab] [MoveDown]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtLeft [Grab]), MoveRight, MoveDown, MoveDown, MoveUp, If(NotAtBottom [MoveDown] [MoveUp]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [MoveUp]), If(AtLeft [MoveUp] [MoveUp]), MoveRight, MoveLeft, LoopWhile(AtTop [MoveRight]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [MoveLeft]), MoveRight, If(AtLeft [Drop] [MoveDown]), LoopWhile(AtRight [Drop]), If(AtRight [MoveRight] [MoveDown]), If(AtBottom [MoveRight] [MoveUp]), MoveUp, LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtRight [MoveLeft]), If(NotAtTop [MoveDown] [MoveLeft]), MoveDown, If(AtTop [MoveRight] [MoveLeft]), If(NotAtTop [MoveLeft] [Grab]), MoveRight, MoveDown, LoopWhile(AtRight [Grab]), If(NotAtRight [MoveUp] [MoveUp]), LoopWhile(AtTop [Grab]), LoopWhile(AtRight [MoveUp]), If(NotAtTop [MoveUp] [Drop]), If(NotAtLeft [MoveLeft] [Grab]), LoopWhile(AtLeft [Drop]), MoveUp, LoopWhile(AtLeft [MoveDown]), MoveUp, MoveLeft, MoveRight, LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [Drop]), If(AtBottom [MoveDown] [MoveUp]), LoopWhile(AtLeft [MoveRight]), If(AtBottom [MoveLeft] [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveRight, LoopWhile(AtTop [MoveUp]), MoveDown, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [MoveRight]), MoveDown, If(NotAtTop [MoveDown] [Drop]), LoopWhile(AtLeft [MoveDown]), If(NotAtRight [MoveDown] [MoveDown]), If(NotAtTop [MoveUp] [Drop]), If(AtBottom [MoveLeft] [MoveUp]), MoveRight, If(NotAtLeft [MoveRight] [MoveRight]), If(AtLeft [Drop] [MoveDown]), MoveUp, If(AtRight [MoveLeft] [MoveUp]), If(AtTop [Drop] [MoveDown]), LoopWhile(AtRight [MoveUp]), MoveUp, If(AtLeft [MoveLeft] [MoveUp]), MoveUp, LoopWhile(AtLeft [MoveUp]), If(NotAtTop [MoveUp] [MoveLeft]), LoopWhile(AtTop [Drop]), If(AtTop [MoveLeft] [MoveLeft]), MoveUp, LoopWhile(NotAtTop [MoveUp]), MoveDown, LoopWhile(AtRight [Drop]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtRight [Grab]), LoopWhile(AtTop [MoveLeft]), MoveDown, MoveUp, LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [MoveDown]), MoveDown, If(NotAtBottom [MoveRight] [MoveDown]), If(NotAtBottom [MoveLeft] [Drop]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [MoveUp]), If(AtLeft [Grab] [MoveDown]), LoopWhile(NotAtRight [MoveRight]), LoopWhile(NotAtRight [Grab]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(NotAtRight [Drop]), If(NotAtTop [MoveDown] [Grab]), If(NotAtRight [MoveRight] [MoveDown]), LoopWhile(AtLeft [MoveUp]), If(NotAtBottom [MoveLeft] [MoveUp]), LoopWhile(AtTop [Drop]), MoveLeft, LoopWhile(AtBottom [MoveUp]), MoveRight, LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [MoveLeft]), LoopWhile(NotAtRight [MoveRight]), MoveLeft, If(NotAtRight [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveUp]), LoopWhile(NotAtRight [MoveDown]), LoopWhile(AtBottom [Grab]), If(AtLeft [MoveDown] [MoveUp]), MoveUp, MoveDown, MoveUp, MoveDown, If(AtRight [MoveUp] [MoveUp]), LoopWhile(AtTop [MoveLeft]), If(NotAtLeft [MoveUp] [Drop]), LoopWhile(AtBottom [MoveUp]), If(AtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtBottom [Grab]), If(NotAtLeft [MoveUp] [Drop]), LoopWhile(AtTop [Grab]), MoveDown, MoveLeft, If(AtBottom [MoveRight] [MoveDown]), LoopWhile(NotAtRight [MoveRight]), LoopWhile(AtTop [Drop]), MoveUp, LoopWhile(AtRight [MoveLeft]), If(NotAtTop [MoveDown] [MoveLeft]), MoveUp, MoveLeft, LoopWhile(AtTop [Grab]), MoveLeft, LoopWhile(AtBottom [Drop]), If(NotAtBottom [MoveUp] [MoveLeft]), MoveLeft, LoopWhile(AtBottom [MoveRight]), MoveUp, LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtLeft [Grab]), LoopWhile(NotAtTop [MoveDown]), MoveDown, If(AtBottom [MoveUp] [MoveRight]), If(NotAtTop [MoveLeft] [MoveUp]), If(AtRight [MoveDown] [MoveRight]), MoveRight, MoveRight, If(NotAtLeft [MoveUp] [MoveRight]), LoopWhile(NotAtRight [MoveRight]), LoopWhile(AtTop [MoveDown]), If(AtBottom [MoveDown] [MoveLeft]), If(AtRight [MoveUp] [MoveLeft]), MoveDown, MoveUp, If(AtRight [MoveUp] [MoveDown]), LoopWhile(AtTop [MoveLeft]), If(NotAtLeft [MoveUp] [MoveRight]), If(AtLeft [MoveLeft] [MoveRight]), MoveDown, LoopWhile(AtBottom [MoveRight]), If(NotAtBottom [MoveUp] [MoveLeft]), If(NotAtBottom [MoveDown] [MoveLeft]), MoveDown, MoveDown, LoopWhile(AtRight [Drop]), LoopWhile(NotAtTop [MoveUp]), LoopWhile(AtBottom [MoveDown]), MoveRight, If(NotAtRight [MoveLeft] [MoveLeft]), MoveDown, If(NotAtRight [MoveDown] [MoveRight]), MoveDown, MoveRight, If(NotAtBottom [MoveLeft] [Grab]), If(AtRight [MoveDown] [MoveUp]), If(AtTop [Grab] [MoveRight]), LoopWhile(NotAtRight [MoveRight]), LoopWhile(AtLeft [MoveUp]), MoveDown, LoopWhile(AtBottom [MoveLeft]), If(NotAtLeft [MoveUp] [Drop]), If(AtTop [MoveLeft] [MoveUp]), MoveDown, MoveDown, LoopWhile(AtRight [MoveLeft]), MoveDown, If(NotAtTop [MoveDown] [Grab]), MoveDown, MoveLeft, If(NotAtTop [MoveDown] [MoveLeft]), MoveDown, MoveUp, If(AtTop [MoveRight] [MoveDown]), MoveDown, LoopWhile(AtTop [MoveLeft]), If(NotAtTop [MoveUp] [Grab]), LoopWhile(AtLeft [Drop]), If(AtBottom [Grab] [MoveUp]), MoveDown, MoveUp, MoveDown, LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtBottom [MoveUp]), MoveDown, If(NotAtLeft [MoveUp] [MoveUp]), MoveUp, MoveUp, MoveDown, MoveUp, If(NotAtBottom [MoveDown] [MoveDown]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [MoveDown]), MoveDown, LoopWhile(AtRight [Grab]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [Grab]), LoopWhile(AtRight [MoveDown]), MoveUp, If(NotAtRight [MoveLeft] [MoveRight]), LoopWhile(AtLeft [MoveLeft]), MoveRight, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [MoveDown]), MoveUp, MoveUp, LoopWhile(AtRight [MoveLeft]), If(AtLeft [Grab] [MoveDown]), LoopWhile(AtBottom [MoveUp]), MoveDown, If(AtTop [MoveRight] [MoveDown]), MoveRight, If(NotAtLeft [MoveDown] [Drop]), If(NotAtRight [MoveRight] [MoveRight]), LoopWhile(NotAtRight [Drop]), LoopWhile(AtTop [Grab]), Grab, LoopWhile(AtLeft [Drop]), If(AtBottom [MoveUp] [Drop]), MoveLeft, LoopWhile(AtTop [MoveRight]), If(NotAtBottom [MoveDown] [Grab]), MoveUp, If(AtTop [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveLeft]), If(AtBottom [MoveUp] [MoveLeft]), If(AtBottom [MoveLeft] [MoveUp]), LoopWhile(NotAtRight [MoveRight]), MoveDown, LoopWhile(NotAtRight [MoveRight]), If(NotAtRight [MoveDown] [MoveUp]), LoopWhile(NotAtRight [MoveDown]), LoopWhile(AtBottom [Grab]), MoveDown, If(NotAtBottom [MoveUp] [MoveUp]), MoveUp, If(NotAtBottom [MoveDown] [Grab]), LoopWhile(AtLeft [Grab]), LoopWhile(NotAtRight [MoveLeft]), If(NotAtRight [Drop] [MoveDown]), MoveDown, MoveUp, If(NotAtRight [Grab] [MoveUp]), If(NotAtLeft [MoveDown] [Drop]), LoopWhile(AtTop [MoveUp]), MoveLeft, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [MoveUp]), If(AtRight [MoveRight] [MoveDown]), MoveRight, If(AtTop [MoveLeft] [MoveLeft]), LoopWhile(AtRight [MoveRight]), LoopWhile(NotAtBottom [MoveDown]), LoopWhile(AtRight [Drop]), If(AtLeft [MoveRight] [MoveUp]), MoveUp, LoopWhile(AtRight [MoveRight]), If(AtRight [Drop] [MoveDown]), LoopWhile(AtTop [Grab]), MoveDown, MoveUp, If(NotAtTop [MoveUp] [MoveLeft]), MoveUp, MoveDown, MoveUp, MoveUp, MoveDown, LoopWhile(AtLeft [Drop]), MoveRight, If(AtLeft [Grab] [MoveDown]), If(AtTop [Grab] [MoveUp]), MoveLeft, If(NotAtLeft [MoveUp] [MoveDown]), If(AtTop [MoveUp] [MoveDown]), LoopWhile(AtBottom [MoveLeft]), MoveLeft, LoopWhile(AtLeft [Drop]), MoveRight, If(NotAtLeft [MoveUp] [MoveUp]), MoveUp, LoopWhile(AtTop [MoveLeft]), MoveRight, If(AtRight [MoveUp] [Drop]), LoopWhile(AtTop [Grab]), MoveDown, LoopWhile(AtLeft [MoveLeft]), If(AtLeft [Grab] [MoveUp]), If(NotAtTop [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtTop [Drop]), If(AtRight [MoveDown] [MoveRight]), If(NotAtRight [MoveUp] [MoveUp]), LoopWhile(NotAtRight [MoveUp]), If(AtBottom [MoveUp] [MoveDown]), LoopWhile(AtTop [Drop]), LoopWhile(AtLeft [MoveLeft]), MoveUp, MoveDown, LoopWhile(NotAtRight [Grab]), If(NotAtLeft [MoveDown] [MoveLeft]), LoopWhile(NotAtRight [MoveLeft]), If(AtBottom [MoveRight] [MoveUp]), MoveUp, LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [Drop]), MoveUp, MoveUp, LoopWhile(NotAtRight [Drop]), LoopWhile(NotAtRight [Drop]), MoveUp, LoopWhile(NotAtRight [MoveUp]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [Grab]), LoopWhile(NotAtRight [MoveUp]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtTop [MoveLeft]), MoveDown, If(NotAtBottom [MoveDown] [MoveDown]), MoveDown, If(NotAtBottom [MoveUp] [Grab]), LoopWhile(NotAtTop [MoveUp]), LoopWhile(NotAtRight [Drop]), LoopWhile(AtLeft [Drop]), LoopWhile(NotAtRight [MoveUp]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtLeft [MoveUp]), LoopWhile(NotAtTop [MoveRight]), LoopWhile(AtBottom [MoveUp]), LoopWhile(NotAtRight [MoveUp]), If(NotAtRight [MoveUp] [MoveLeft]), LoopWhile(NotAtTop [MoveDown]), MoveLeft, LoopWhile(NotAtTop [Drop]), LoopWhile(AtBottom [MoveRight]), If(NotAtBottom [MoveRight] [Drop]), LoopWhile(NotAtTop [MoveDown]), LoopWhile(AtBottom [Grab]), If(AtTop [MoveLeft] [MoveUp]), If(AtTop [MoveRight] [MoveUp]), If(AtTop [MoveDown] [MoveLeft]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveRight, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [MoveRight]), MoveLeft, If(AtRight [MoveLeft] [MoveLeft]), LoopWhile(AtTop [Grab]), MoveRight, MoveLeft, LoopWhile(AtRight [MoveDown]), If(NotAtBottom [MoveLeft] [MoveDown]), MoveRight, MoveLeft, If(NotAtBottom [MoveDown] [MoveRight]), MoveRight, LoopWhile(AtLeft [Grab]), MoveUp, LoopWhile(AtBottom [MoveUp]), LoopWhile(AtRight [Drop]), If(AtBottom [MoveDown] [MoveLeft]), If(AtTop [MoveRight] [MoveDown]), MoveUp, LoopWhile(AtRight [MoveUp]), MoveLeft, If(NotAtTop [MoveRight] [MoveRight]), MoveUp, MoveDown, LoopWhile(AtTop [Drop]), LoopWhile(AtTop [Drop]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [MoveRight]), MoveDown, LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [Drop]), LoopWhile(AtLeft [MoveUp]), If(AtBottom [Drop] [MoveLeft]), MoveUp, MoveRight, MoveRight, MoveRight, If(NotAtRight [MoveRight] [Drop]), If(NotAtBottom [MoveDown] [MoveUp]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [Grab]), MoveUp, LoopWhile(AtLeft [MoveDown]), MoveLeft, If(NotAtTop [MoveLeft] [MoveUp]), If(NotAtTop [MoveDown] [MoveRight]), MoveUp, LoopWhile(AtBottom [MoveUp]), MoveRight, LoopWhile(AtLeft [MoveDown]), If(AtLeft [Drop] [MoveDown]), MoveDown, MoveLeft, LoopWhile(AtBottom [Drop]), MoveRight, MoveLeft, If(AtTop [MoveUp] [MoveRight]), MoveDown, LoopWhile(AtRight [Grab]), MoveUp, MoveLeft, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtLeft [MoveUp]), MoveRight, LoopWhile(AtLeft [Drop]), If(AtLeft [MoveLeft] [MoveRight]), LoopWhile(NotAtRight [MoveRight]), MoveDown, MoveUp, If(NotAtTop [MoveUp] [MoveLeft]), If(NotAtBottom [MoveUp] [MoveRight]), LoopWhile(AtLeft [Drop]), If(NotAtLeft [MoveDown] [Drop]), If(NotAtLeft [MoveDown] [MoveRight]), MoveDown, LoopWhile(NotAtRight [Grab]), MoveUp, If(NotAtBottom [MoveLeft] [MoveRight]), LoopWhile(AtRight [MoveUp]), If(AtLeft [MoveUp] [MoveUp]), MoveDown, MoveUp, If(AtTop [Grab] [MoveUp]), MoveDown, MoveDown, If(NotAtTop [MoveUp] [Grab]), LoopWhile(AtRight [MoveLeft]), If(NotAtRight [MoveUp] [MoveUp]), LoopWhile(AtTop [MoveLeft]), MoveUp, LoopWhile(AtBottom [MoveUp]), If(NotAtBottom [MoveDown] [MoveDown]), If(NotAtTop [MoveDown] [Drop]), If(AtBottom [Drop] [MoveUp]), If(AtLeft [MoveRight] [MoveDown]), LoopWhile(AtRight [Grab]), If(AtBottom [Grab] [MoveDown]), LoopWhile(AtLeft [MoveDown]), If(NotAtTop [MoveRight] [MoveUp]), LoopWhile(NotAtRight [MoveUp]), LoopWhile(AtBottom [Drop]), LoopWhile(AtTop [MoveDown]), MoveUp, If(AtRight [MoveLeft] [Grab]), If(NotAtLeft [MoveDown] [MoveLeft]), If(AtBottom [Drop] [MoveDown]), MoveUp, MoveUp, MoveUp, If(NotAtTop [MoveLeft] [Drop]), LoopWhile(AtRight [MoveUp]), If(NotAtRight [MoveRight] [MoveDown]), If(AtBottom [MoveDown] [MoveDown]), LoopWhile(AtRight [Drop]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtLeft [Grab]), If(NotAtLeft [MoveDown] [MoveRight]), MoveDown, MoveUp, If(AtRight [Grab] [MoveUp]), MoveDown, If(NotAtLeft [MoveDown] [Grab]), If(NotAtRight [MoveRight] [MoveUp]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [Grab]), LoopWhile(NotAtRight [MoveUp]), LoopWhile(NotAtRight [MoveRight]), LoopWhile(AtTop [Grab]), LoopWhile(AtTop [MoveUp]), MoveUp, MoveUp, If(NotAtRight [MoveRight] [MoveDown]), If(AtRight [MoveDown] [MoveDown]), If(NotAtRight [Drop] [MoveLeft]), MoveUp, LoopWhile(NotAtRight [MoveRight]), LoopWhile(AtTop [Drop]), If(NotAtTop [MoveUp] [MoveUp]), MoveDown, If(AtLeft [Drop] [MoveUp]), If(NotAtLeft [MoveLeft] [Drop]), LoopWhile(NotAtTop [MoveUp]), If(NotAtBottom [MoveRight] [MoveRight]), If(AtTop [MoveLeft] [MoveLeft]), LoopWhile(NotAtRight [MoveRight]), LoopWhile(AtBottom [MoveRight]), If(AtBottom [MoveRight] [MoveDown]), If(NotAtBottom [MoveDown] [MoveLeft]), If(NotAtRight [Drop] [MoveUp]), If(NotAtTop [MoveDown] [MoveUp]), LoopWhile(NotAtRight [MoveUp]), LoopWhile(NotAtLeft [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), MoveUp, LoopWhile(NotAtRight [MoveRight]), MoveLeft, LoopWhile(AtRight [MoveRight]), If(AtTop [Grab] [MoveDown]), MoveDown, MoveUp, MoveDown, MoveUp, LoopWhile(AtTop [MoveRight]), LoopWhile(AtTop [Grab]), MoveDown, LoopWhile(AtBottom [Grab]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveDown]), MoveDown, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [Drop]), LoopWhile(AtRight [MoveRight]), LoopWhile(NotAtTop [MoveUp]), LoopWhile(NotAtTop [MoveRight]), If(AtTop [MoveDown] [MoveDown]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [MoveDown]), MoveDown, If(AtTop [MoveLeft] [MoveDown]), LoopWhile(NotAtTop [MoveUp]), MoveDown, MoveDown, If(AtTop [MoveRight] [MoveDown]), LoopWhile(AtRight [Drop]), If(NotAtBottom [MoveDown] [MoveLeft]), If(NotAtRight [MoveUp] [Grab]), LoopWhile(AtRight [Grab]), LoopWhile(AtTop [MoveDown]), MoveUp, LoopWhile(AtBottom [MoveRight]), If(AtLeft [MoveLeft] [MoveUp]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [MoveLeft]), MoveDown, LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [MoveLeft]), MoveUp, If(AtTop [MoveRight] [MoveUp]), If(AtRight [MoveLeft] [MoveRight]), If(AtRight [MoveDown] [MoveLeft]), MoveUp, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [MoveUp]), MoveDown, MoveUp, If(NotAtLeft [MoveDown] [MoveRight]), If(AtRight [MoveLeft] [Drop]), MoveLeft, MoveUp, If(NotAtTop [MoveRight] [MoveLeft]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [Drop]), If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtTop [Drop]), LoopWhile(AtBottom [MoveUp]), MoveRight, MoveLeft, If(NotAtLeft [MoveDown] [Grab]), If(NotAtTop [MoveLeft] [Drop]), MoveRight, MoveUp, LoopWhile(AtRight [MoveDown]), If(AtBottom [MoveDown] [MoveLeft]), MoveLeft, LoopWhile(AtRight [MoveUp]), If(NotAtTop [MoveRight] [Grab]), MoveDown, If(AtBottom [MoveDown] [MoveLeft]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [MoveRight]), MoveDown, MoveLeft, LoopWhile(AtLeft [MoveDown]), MoveLeft, LoopWhile(AtTop [MoveLeft]), MoveLeft, LoopWhile(AtRight [Grab]), If(NotAtTop [MoveDown] [MoveLeft]), MoveLeft, If(NotAtBottom [MoveUp] [Drop]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), MoveLeft, MoveUp, MoveRight, MoveRight, MoveLeft, LoopWhile(AtBottom [MoveDown]), If(AtTop [Grab] [MoveUp]), If(NotAtBottom [MoveDown] [Drop]), If(AtLeft [MoveUp] [MoveLeft]), MoveDown, MoveRight, MoveDown, If(AtBottom [MoveUp] [MoveRight]), If(AtBottom [MoveDown] [MoveRight]), LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [Grab]), MoveLeft, LoopWhile(AtTop [Drop]), LoopWhile(AtTop [Grab]), MoveDown, MoveLeft, MoveUp, LoopWhile(AtBottom [MoveRight]), If(NotAtTop [MoveUp] [MoveDown]), If(NotAtLeft [MoveRight] [MoveLeft]), LoopWhile(AtLeft [MoveRight]), MoveRight, If(NotAtBottom [MoveDown] [MoveUp]), MoveDown, LoopWhile(AtTop [MoveRight]), MoveLeft, MoveDown, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [MoveDown]), MoveLeft, If(AtRight [Drop] [MoveUp]), If(NotAtRight [MoveRight] [MoveRight]), If(NotAtTop [MoveUp] [Drop]), If(AtTop [MoveLeft] [MoveRight]), LoopWhile(AtRight [MoveRight]), If(NotAtRight [MoveLeft] [MoveUp]), If(AtTop [Grab] [MoveRight]), MoveDown, LoopWhile(AtRight [MoveUp]), MoveLeft, LoopWhile(AtTop [Grab]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), If(AtBottom [MoveRight] [MoveUp]), MoveUp, If(NotAtLeft [MoveRight] [MoveDown]), MoveRight, LoopWhile(AtLeft [MoveUp]), MoveDown, MoveLeft, If(AtLeft [MoveRight] [MoveLeft]), MoveDown, If(AtTop [MoveUp] [MoveLeft]), MoveUp, LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtRight [MoveDown]), MoveRight, MoveLeft, If(AtBottom [Grab] [MoveUp]), LoopWhile(AtBottom [MoveUp]), If(NotAtTop [MoveLeft] [Drop]), LoopWhile(AtBottom [MoveLeft]), MoveRight, LoopWhile(AtLeft [MoveDown]), If(NotAtLeft [MoveDown] [MoveLeft]), If(NotAtLeft [MoveDown] [Drop]), LoopWhile(AtLeft [MoveDown]), If(AtLeft [MoveUp] [MoveUp]), LoopWhile(AtBottom [MoveLeft]), MoveUp, MoveRight, LoopWhile(AtLeft [MoveDown]), If(AtLeft [MoveLeft] [MoveRight]), LoopWhile(AtTop [Drop]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveRight, LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtTop [MoveDown]), If(NotAtRight [MoveDown] [MoveRight]), If(NotAtBottom [MoveLeft] [MoveUp]), LoopWhile(AtBottom [MoveDown]), MoveUp, MoveRight, LoopWhile(AtTop [Grab]), If(NotAtBottom [MoveDown] [Drop]), If(NotAtLeft [MoveUp] [MoveUp]), MoveUp, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtRight [Drop]), MoveDown, LoopWhile(AtTop [Grab]), If(AtRight [Drop] [MoveRight]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [MoveRight]), MoveLeft, If(AtLeft [MoveUp] [Drop]), If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtLeft [MoveUp]), If(AtRight [MoveDown] [MoveLeft]), Grab, If(NotAtLeft [MoveUp] [MoveLeft]), If(AtBottom [Drop] [MoveLeft]), LoopWhile(AtTop [MoveUp]), If(NotAtRight [MoveRight] [MoveLeft]), If(NotAtRight [MoveLeft] [MoveRight]), MoveDown, MoveLeft, LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [Grab]), If(NotAtTop [MoveDown] [MoveLeft]), LoopWhile(AtRight [Drop]), LoopWhile(AtTop [MoveLeft]), MoveLeft, If(NotAtTop [MoveRight] [Grab]), MoveDown, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtTop [MoveUp]), MoveUp, MoveRight, If(AtTop [MoveDown] [MoveDown]), MoveDown, MoveUp, MoveDown, If(AtRight [MoveDown] [MoveRight]), If(NotAtLeft [MoveDown] [MoveDown]), If(NotAtLeft [MoveUp] [MoveUp]), MoveLeft, If(AtTop [MoveRight] [MoveUp]), If(NotAtRight [MoveDown] [MoveLeft]), If(NotAtRight [MoveDown] [MoveUp]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtTop [Drop]), MoveUp, LoopWhile(AtTop [MoveRight]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtBottom [MoveRight]), MoveDown, MoveUp, LoopWhile(AtRight [MoveDown]), LoopWhile(NotAtTop [MoveUp]), If(NotAtBottom [MoveDown] [Drop]), If(NotAtBottom [MoveUp] [MoveLeft]), LoopWhile(NotAtTop [MoveUp]), If(NotAtRight [MoveDown] [MoveDown]), If(NotAtTop [MoveUp] [MoveDown]), LoopWhile(AtBottom [MoveLeft]), MoveDown, MoveDown, MoveLeft, MoveDown, MoveUp, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [MoveRight]), If(NotAtLeft [MoveLeft] [Drop]), LoopWhile(AtLeft [Drop]), MoveDown, LoopWhile(AtBottom [MoveRight]), MoveRight, LoopWhile(AtRight [MoveDown]), MoveRight, If(AtBottom [MoveLeft] [MoveRight]), If(NotAtLeft [MoveDown] [MoveRight]), MoveLeft, If(NotAtBottom [Drop] [MoveUp]), LoopWhile(AtBottom [MoveDown]), If(AtBottom [MoveLeft] [MoveLeft]), If(NotAtBottom [MoveUp] [Grab]), LoopWhile(AtTop [MoveLeft]), MoveRight, LoopWhile(AtLeft [MoveDown]), LoopWhile(NotAtRight [MoveRight]), MoveDown, If(AtLeft [Drop] [MoveLeft]), LoopWhile(AtBottom [MoveDown]), If(AtLeft [Grab] [MoveRight]), MoveLeft, LoopWhile(AtLeft [MoveLeft]), If(AtTop [MoveDown] [MoveLeft]), MoveUp, MoveRight, If(AtLeft [MoveDown] [MoveUp]), LoopWhile(AtRight [Grab]), MoveDown, If(AtLeft [MoveDown] [MoveDown]), MoveLeft, LoopWhile(AtRight [MoveDown]), MoveUp, MoveLeft, If(AtBottom [Drop] [MoveLeft]), MoveUp, MoveUp, LoopWhile(AtBottom [MoveRight]), LoopWhile(NotAtLeft [MoveLeft]), LoopWhile(NotAtTop [MoveUp]), MoveDown, If(NotAtRight [MoveRight] [MoveRight]), MoveRight, LoopWhile(AtRight [MoveUp]), MoveLeft, LoopWhile(AtRight [Drop]), LoopWhile(AtBottom [MoveRight]), MoveRight, LoopWhile(AtBottom [MoveRight]), If(NotAtRight [MoveLeft] [Grab]), LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [Drop]), If(NotAtRight [MoveDown] [Drop]), If(AtBottom [MoveLeft] [MoveRight]), MoveDown, If(NotAtRight [MoveRight] [Drop]), If(NotAtTop [MoveUp] [MoveUp]), MoveDown, If(NotAtLeft [MoveLeft] [Grab]), If(AtRight [Grab] [MoveUp]), If(NotAtTop [MoveDown] [Drop]), MoveRight, If(AtTop [MoveDown] [MoveDown]), MoveLeft, MoveDown, If(AtRight [MoveUp] [MoveLeft]), MoveUp, If(AtTop [Grab] [MoveRight]), MoveDown, If(NotAtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [MoveRight]), If(AtBottom [MoveDown] [MoveRight]), If(NotAtLeft [MoveLeft] [MoveUp]), If(NotAtLeft [MoveRight] [MoveLeft]), LoopWhile(AtBottom [MoveRight]), MoveRight, LoopWhile(AtBottom [Grab]), MoveUp, If(NotAtTop [MoveUp] [Grab]), MoveDown, LoopWhile(AtTop [MoveUp]), If(NotAtLeft [MoveLeft] [MoveDown]), If(NotAtTop [MoveRight] [MoveDown]), LoopWhile(AtTop [Grab]), If(AtBottom [Grab] [MoveLeft]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtBottom [MoveLeft]), If(NotAtTop [MoveDown] [Drop]), If(AtTop [MoveLeft] [MoveLeft]), MoveUp, LoopWhile(NotAtTop [MoveUp]), LoopWhile(AtRight [MoveUp]), If(NotAtTop [Drop] [MoveRight]), If(AtLeft [Drop] [MoveDown]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtBottom [Drop]), If(NotAtBottom [MoveRight] [MoveUp]), If(AtTop [MoveDown] [MoveRight]), LoopWhile(AtRight [MoveRight]), If(AtLeft [Drop] [MoveLeft]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [Grab]), MoveRight, LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtBottom [MoveUp]), If(NotAtTop [MoveUp] [Grab]), MoveRight, If(NotAtTop [MoveDown] [MoveLeft]), LoopWhile(NotAtTop [MoveLeft]), LoopWhile(AtBottom [MoveDown]), MoveRight, MoveDown, If(NotAtRight [MoveUp] [Grab]), MoveDown, If(NotAtRight [MoveRight] [MoveDown]), If(NotAtRight [MoveDown] [MoveUp]), LoopWhile(AtRight [Drop]), If(AtLeft [Grab] [MoveUp]), MoveDown, If(AtBottom [Grab] [MoveUp]), If(AtRight [MoveUp] [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), MoveLeft, MoveLeft, MoveUp, If(NotAtBottom [MoveLeft] [MoveDown]), MoveDown, LoopWhile(AtLeft [MoveLeft]), MoveLeft, LoopWhile(NotAtRight [MoveRight]), If(AtBottom [MoveUp] [MoveUp]), LoopWhile(NotAtRight [MoveDown]), MoveDown, If(AtTop [MoveUp] [MoveDown]), MoveUp, LoopWhile(AtLeft [MoveUp]), If(AtLeft [MoveUp] [MoveDown]), LoopWhile(AtLeft [Drop]), LoopWhile(NotAtRight [MoveRight]), If(NotAtLeft [MoveDown] [MoveLeft]), LoopWhile(NotAtRight [MoveLeft]), LoopWhile(AtTop [Grab]), MoveUp, MoveDown, If(NotAtLeft [MoveDown] [MoveDown]), LoopWhile(AtTop [MoveUp]), If(NotAtTop [MoveDown] [MoveLeft]), If(AtRight [MoveLeft] [Drop]), LoopWhile(AtTop [MoveRight]), If(NotAtTop [MoveUp] [Grab]), LoopWhile(AtBottom [Grab]), LoopWhile(NotAtTop [MoveUp]), MoveLeft, MoveDown, MoveRight, If(NotAtTop [MoveDown] [MoveDown]), MoveUp, LoopWhile(AtRight [Grab]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtBottom [Drop]), If(NotAtBottom [MoveDown] [Drop]), MoveDown, MoveUp, LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [MoveRight]), If(NotAtLeft [MoveDown] [MoveUp]), LoopWhile(AtRight [MoveDown]), If(AtLeft [MoveRight] [MoveUp]), If(AtTop [MoveRight] [MoveUp]), LoopWhile(AtRight [Grab]), MoveDown, If(NotAtRight [MoveDown] [MoveUp]), If(NotAtBottom [MoveUp] [MoveDown]), LoopWhile(AtLeft [Grab]), If(NotAtTop [MoveDown] [Grab]), If(AtTop [MoveRight] [MoveDown]), If(NotAtRight [MoveUp] [Grab]), MoveLeft, LoopWhile(AtBottom [Drop]), MoveRight, LoopWhile(AtRight [MoveLeft]), MoveDown, If(NotAtTop [MoveDown] [Drop]), MoveLeft, MoveUp, If(NotAtLeft [MoveRight] [MoveDown]), LoopWhile(AtRight [MoveUp]), LoopWhile(NotAtBottom [MoveDown]), If(NotAtLeft [MoveUp] [Grab]), MoveUp, If(NotAtBottom [MoveUp] [Grab]), LoopWhile(AtBottom [Grab]), MoveDown, LoopWhile(AtRight [Grab]), If(NotAtTop [MoveLeft] [MoveDown]), LoopWhile(NotAtTop [MoveUp]), MoveLeft, If(NotAtBottom [MoveDown] [Drop]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [MoveLeft]), If(AtRight [MoveUp] [MoveRight]), MoveRight, LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [Grab]), LoopWhile(AtRight [MoveLeft]), MoveDown, MoveLeft, MoveUp, LoopWhile(AtTop [Drop]), LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [Grab]), LoopWhile(AtRight [MoveDown]), If(AtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtLeft [Drop]), MoveDown, LoopWhile(AtRight [MoveLeft]), LoopWhile(AtRight [Drop]), LoopWhile(AtTop [Drop]), LoopWhile(AtBottom [MoveDown]), MoveDown, If(NotAtLeft [MoveLeft] [Grab]), MoveDown, LoopWhile(AtLeft [MoveRight]), MoveUp, LoopWhile(AtTop [MoveLeft]), MoveDown, LoopWhile(AtTop [Drop]), LoopWhile(AtLeft [MoveUp]), MoveLeft, LoopWhile(AtTop [MoveRight]), MoveUp, If(AtRight [MoveLeft] [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveDown, LoopWhile(AtRight [MoveRight]), If(AtTop [MoveRight] [MoveUp]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [MoveDown]), If(AtRight [Drop] [MoveDown]), LoopWhile(AtLeft [MoveLeft]), If(AtTop [Drop] [MoveUp]), LoopWhile(AtBottom [MoveDown]), MoveLeft, LoopWhile(AtBottom [MoveRight]), If(AtRight [Grab] [MoveLeft]), MoveUp, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [MoveDown]), MoveUp, If(AtBottom [MoveLeft] [MoveLeft]), MoveDown, MoveUp, If(NotAtRight [MoveUp] [MoveRight]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtRight [Drop]), If(AtLeft [MoveRight] [MoveLeft]), LoopWhile(NotAtLeft [MoveRight]), If(NotAtLeft [MoveRight] [MoveRight]), LoopWhile(AtRight [MoveRight]), If(NotAtBottom [MoveRight] [MoveRight]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtBottom [MoveDown]), If(NotAtRight [MoveRight] [Drop]), If(NotAtBottom [MoveLeft] [MoveLeft]), If(AtLeft [MoveLeft] [MoveLeft]), MoveRight, LoopWhile(AtTop [MoveUp]), If(AtLeft [MoveUp] [MoveRight]), MoveRight, LoopWhile(AtLeft [MoveRight]), MoveLeft, LoopWhile(AtLeft [Drop]), If(NotAtRight [MoveRight] [MoveDown]), LoopWhile(AtBottom [MoveLeft]), If(AtLeft [MoveRight] [MoveRight]), If(NotAtBottom [MoveLeft] [MoveUp]), LoopWhile(AtTop [Drop]), If(NotAtLeft [MoveUp] [MoveRight]), MoveLeft, LoopWhile(AtBottom [Drop]), MoveRight, If(AtRight [MoveDown] [MoveRight]), LoopWhile(AtLeft [MoveUp]), MoveRight, If(NotAtRight [MoveLeft] [Grab]), If(NotAtLeft [MoveLeft] [Drop]), MoveLeft, MoveRight, If(AtTop [MoveRight] [MoveLeft]), If(NotAtBottom [MoveRight] [MoveUp]), LoopWhile(NotAtLeft [MoveLeft]), If(NotAtTop [Drop] [MoveRight]), LoopWhile(AtBottom [MoveLeft]), If(AtRight [Drop] [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveLeft, If(AtBottom [MoveDown] [MoveDown]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [Drop]), LoopWhile(AtTop [MoveUp]), If(NotAtLeft [MoveUp] [MoveDown]), MoveRight, MoveDown, If(AtRight [MoveRight] [MoveUp]), LoopWhile(AtBottom [MoveUp]), MoveLeft, LoopWhile(AtRight [Drop]), MoveUp, MoveRight, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtBottom [MoveRight]), MoveDown, MoveRight, LoopWhile(AtRight [Grab]), If(AtRight [MoveUp] [MoveRight]), If(NotAtTop [MoveRight] [Grab]), If(AtBottom [Drop] [MoveUp]), LoopWhile(AtBottom [Grab]), LoopWhile(AtTop [MoveRight]), MoveLeft, LoopWhile(AtLeft [Drop]), If(NotAtTop [MoveUp] [MoveLeft]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [Grab]), LoopWhile(AtBottom [Grab]), MoveDown, MoveDown, If(NotAtLeft [MoveDown] [MoveRight]), MoveDown, If(NotAtRight [MoveRight] [MoveLeft]), LoopWhile(AtTop [MoveDown]), If(NotAtRight [MoveRight] [MoveLeft]), LoopWhile(NotAtTop [MoveUp]), If(AtLeft [MoveRight] [MoveLeft]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [MoveUp]), If(NotAtBottom [MoveDown] [MoveUp]), If(NotAtRight [MoveUp] [Grab]), LoopWhile(AtRight [MoveUp]), LoopWhile(NotAtTop [MoveLeft]), MoveLeft, LoopWhile(AtLeft [Grab]), If(AtBottom [Grab] [MoveLeft]), MoveDown, MoveDown, LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [Grab]), MoveUp, MoveLeft, If(NotAtTop [MoveDown] [MoveUp]), If(NotAtRight [MoveDown] [Drop]), If(NotAtTop [MoveDown] [MoveUp]), If(NotAtLeft [MoveDown] [Drop]), If(AtRight [Drop] [MoveUp]), MoveLeft, LoopWhile(AtRight [MoveRight]), LoopWhile(AtBottom [MoveDown]), LoopWhile(NotAtLeft [MoveRight]), LoopWhile(AtTop [MoveDown]), If(AtTop [Drop] [MoveDown]), MoveUp, If(NotAtTop [MoveDown] [MoveDown]), If(NotAtBottom [MoveUp] [MoveRight]), LoopWhile(NotAtLeft [Drop]), MoveRight, If(NotAtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [Drop]), MoveDown, If(NotAtBottom [MoveUp] [MoveLeft]), LoopWhile(AtRight [MoveDown]), If(AtBottom [MoveUp] [MoveUp]), If(AtRight [MoveDown] [MoveUp]), MoveUp, MoveRight, MoveDown, If(AtLeft [Drop] [MoveRight]), If(NotAtRight [MoveDown] [MoveUp]), MoveUp, If(AtRight [MoveRight] [MoveLeft]), LoopWhile(AtLeft [MoveRight]), If(AtLeft [MoveLeft] [MoveDown]), If(NotAtLeft [MoveRight] [MoveDown]), LoopWhile(AtBottom [MoveRight]), MoveUp, If(NotAtTop [MoveUp] [Drop]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [Drop]), MoveRight, MoveUp, LoopWhile(NotAtTop [MoveLeft]), LoopWhile(NotAtBottom [MoveDown]), LoopWhile(AtTop [MoveDown]), MoveLeft, If(NotAtTop [MoveUp] [Drop]), If(AtLeft [Grab] [MoveLeft]), MoveUp])", "cost_per_iteration": [[2, 27], [3, 26], [8, 27], [13, 28], [14, 27], [20, 26], [21, 27], [26, 28], [27, 27], [35, 26], [36, 25], [38, 24], [41, 23], [46, 22], [47, 21], [49, 22], [51, 23], [55, 22], [57, 21], [60, 20], [62, 19], [65, 17], [72, 19], [73, 20], [77, 19], [103, 20], [106, 21], [107, 20], [110, 21], [113, 20], [116, 21], [117, 20], [118, 19], [121, 17], [176, 19], [180, 17], [181, 19], [182, 17], [205, 19], [206, 20], [210, 19], [211, 20], [227, 19], [232, 17], [447, 19], [454, 20], [462, 17], [695, 19], [711, 17], [1273, 19], [1274, 20], [1323, 19], [1350, 20], [1562, 19], [1845, 20], [1865, 19], [2535, 20], [2539, 21], [2578, 20], [2627, 21], [2703, 20], [2705, 19], [3306, 20], [3331, 19], [3564, 20], [3567, 19], [3599, 20], [3615, 21], [3618, 20], [3652, 19], [3878, 20], [3979, 21], [3981, 20], [4112, 21], [4275, 20], [4441, 21], [4487, 20], [4932, 21], [4935, 20], [5124, 21], [5126, 20], [5609, 15], [5612, 14], [5674, 15], [5737, 14], [5761, 13], [5763, 14], [5831, 13], [5845, 14], [5867, 16], [5918, 14], [5947, 15], [5988, 14], [6023, 15], [6080, 16], [6182, 15], [6199, 13], [6352, 11], [6353, 12], [6385, 14], [6403, 13], [6436, 12], [6506, 13], [6523, 12], [6591, 13], [6601, 12], [6659, 13], [6843, 12], [6915, 11], [7164, 12], [7240, 13], [7353, 3], [7498, 2], [8408, 3], [8638, 2], [8717, 3], [8721, 2], [8904, 3], [8974, 2], [9053, 3], [9110, 2], [9313, 1], [11878, 0]], "number_of_iterations": 11878}}
