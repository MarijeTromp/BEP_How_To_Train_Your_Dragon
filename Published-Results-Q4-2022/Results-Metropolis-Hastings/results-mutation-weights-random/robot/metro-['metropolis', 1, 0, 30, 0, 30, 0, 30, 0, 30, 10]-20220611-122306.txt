{"test_case": 0, "data": "MetropolisHasting 0: robots/2-0-0.pl, test_cost: 0, train_cost: 0, time: 0.008043319, length: 58, iterations: 510"}
{"test_case": 1, "data": "MetropolisHasting 1: robots/2-0-1.pl, test_cost: 0, train_cost: 0, time: 0.0021180869999999994, length: 19, iterations: 194"}
{"test_case": 2, "data": "MetropolisHasting 2: robots/2-0-2.pl, test_cost: 0, train_cost: 0, time: 0.003409064, length: 18, iterations: 261"}
{"test_case": 3, "data": "MetropolisHasting 3: robots/2-0-3.pl, test_cost: 0, train_cost: 0, time: 5.30189999999979e-05, length: 1, iterations: 3"}
{"test_case": 4, "data": "MetropolisHasting 4: robots/2-0-4.pl, test_cost: 0, train_cost: 0, time: 0.00019332700000000008, length: 1, iterations: 17"}
{"test_case": 5, "data": "MetropolisHasting 5: robots/2-0-5.pl, test_cost: 0, train_cost: 0, time: 0.0017135159999999983, length: 6, iterations: 168"}
{"test_case": 6, "data": "MetropolisHasting 6: robots/2-0-6.pl, test_cost: 0, train_cost: 0, time: 0.000311928000000003, length: 4, iterations: 27"}
{"test_case": 7, "data": "MetropolisHasting 7: robots/2-0-7.pl, test_cost: 0, train_cost: 0, time: 0.00024213000000000012, length: 3, iterations: 22"}
{"test_case": 8, "data": "MetropolisHasting 8: robots/2-0-8.pl, test_cost: 0, train_cost: 0, time: 0.006927756, length: 38, iterations: 541"}
{"test_case": 9, "data": "MetropolisHasting 9: robots/2-0-9.pl, test_cost: 0, train_cost: 0, time: 0.010589148000000003, length: 45, iterations: 766"}
{"test_case": 10, "data": "MetropolisHasting 10: robots/2-0-10.pl, test_cost: 0, train_cost: 0, time: 0.027243091, length: 21, iterations: 2069"}
{"test_case": 11, "data": "MetropolisHasting 11: robots/2-1-0.pl, test_cost: 0, train_cost: 0, time: 0.016635337, length: 21, iterations: 1463"}
{"test_case": 12, "data": "MetropolisHasting 12: robots/2-1-1.pl, test_cost: 0, train_cost: 0, time: 0.012546889999999998, length: 18, iterations: 1151"}
{"test_case": 13, "data": "MetropolisHasting 13: robots/2-1-2.pl, test_cost: 0, train_cost: 0, time: 0.005973805999999998, length: 23, iterations: 523"}
{"test_case": 14, "data": "MetropolisHasting 14: robots/2-1-3.pl, test_cost: 0, train_cost: 0, time: 0.00013558600000000698, length: 3, iterations: 11"}
{"test_case": 15, "data": "MetropolisHasting 15: robots/2-1-4.pl, test_cost: 0, train_cost: 0, time: 2.5270999999993382e-05, length: 0, iterations: 1"}
{"test_case": 16, "data": "MetropolisHasting 16: robots/2-1-5.pl, test_cost: 0, train_cost: 0, time: 0.00024652399999999797, length: 6, iterations: 23"}
{"test_case": 17, "data": "MetropolisHasting 17: robots/2-1-6.pl, test_cost: 0, train_cost: 0, time: 0.042111515, length: 24, iterations: 2929"}
{"test_case": 18, "data": "MetropolisHasting 18: robots/2-1-7.pl, test_cost: 0, train_cost: 0, time: 6.46910000000056e-05, length: 3, iterations: 4"}
{"test_case": 19, "data": "MetropolisHasting 19: robots/2-1-8.pl, test_cost: 0, train_cost: 0, time: 0.010521186000000002, length: 23, iterations: 920"}
{"test_case": 20, "data": "MetropolisHasting 20: robots/2-1-9.pl, test_cost: 0, train_cost: 0, time: 0.0013141109999999998, length: 5, iterations: 105"}
{"test_case": 21, "data": "MetropolisHasting 21: robots/2-1-10.pl, test_cost: 0, train_cost: 0, time: 0.014114175999999999, length: 19, iterations: 1174"}
{"test_case": 22, "data": "MetropolisHasting 22: robots/2-2-0.pl, test_cost: 0, train_cost: 0, time: 0.028336122000000002, length: 55, iterations: 2005"}
{"test_case": 23, "data": "MetropolisHasting 23: robots/2-2-1.pl, test_cost: 0, train_cost: 0, time: 0.013700863, length: 26, iterations: 1189"}
{"test_case": 24, "data": "MetropolisHasting 24: robots/2-2-2.pl, test_cost: 0, train_cost: 0, time: 0.0028567099999999984, length: 15, iterations: 244"}
{"test_case": 25, "data": "MetropolisHasting 25: robots/2-2-3.pl, test_cost: 0, train_cost: 0, time: 0.008872418999999993, length: 23, iterations: 833"}
{"test_case": 26, "data": "MetropolisHasting 26: robots/2-2-4.pl, test_cost: 0, train_cost: 0, time: 0.0007752140000000102, length: 6, iterations: 75"}
{"test_case": 27, "data": "MetropolisHasting 27: robots/2-2-5.pl, test_cost: 0, train_cost: 0, time: 0.0015005849999999987, length: 14, iterations: 131"}
{"test_case": 28, "data": "MetropolisHasting 28: robots/2-2-6.pl, test_cost: 0, train_cost: 0, time: 0.01207846, length: 11, iterations: 1030"}
{"test_case": 29, "data": "MetropolisHasting 29: robots/2-2-7.pl, test_cost: 0, train_cost: 0, time: 0.014012902999999993, length: 38, iterations: 1106"}
{"test_case": 30, "data": "MetropolisHasting 30: robots/2-2-8.pl, test_cost: 0, train_cost: 0, time: 0.0007205980000000002, length: 4, iterations: 42"}
{"test_case": 31, "data": "MetropolisHasting 31: robots/2-2-9.pl, test_cost: 0, train_cost: 0, time: 4.6143000000000226e-05, length: 1, iterations: 2"}
{"test_case": 32, "data": "MetropolisHasting 32: robots/2-2-10.pl, test_cost: 0, train_cost: 0, time: 0.023382845, length: 31, iterations: 2020"}
{"test_case": 33, "data": "MetropolisHasting 33: robots/2-3-0.pl, test_cost: 0, train_cost: 0, time: 0.0024480690000000006, length: 9, iterations: 225"}
{"test_case": 34, "data": "MetropolisHasting 34: robots/2-3-1.pl, test_cost: 0, train_cost: 0, time: 0.009481027999999996, length: 46, iterations: 671"}
{"test_case": 35, "data": "MetropolisHasting 35: robots/2-3-2.pl, test_cost: 0, train_cost: 0, time: 0.021879055999999994, length: 19, iterations: 1727"}
{"test_case": 36, "data": "MetropolisHasting 36: robots/2-3-3.pl, test_cost: 0, train_cost: 0, time: 0.008109676999999996, length: 55, iterations: 536"}
{"test_case": 37, "data": "MetropolisHasting 37: robots/2-3-4.pl, test_cost: 0, train_cost: 0, time: 0.0011545949999999944, length: 13, iterations: 94"}
{"test_case": 38, "data": "MetropolisHasting 38: robots/2-3-5.pl, test_cost: 0, train_cost: 0, time: 0.019636474, length: 22, iterations: 1479"}
{"test_case": 39, "data": "MetropolisHasting 39: robots/2-3-6.pl, test_cost: 0, train_cost: 0, time: 0.010825083999999999, length: 30, iterations: 1008"}
{"test_case": 40, "data": "MetropolisHasting 40: robots/2-3-7.pl, test_cost: 0, train_cost: 0, time: 0.022696696, length: 19, iterations: 2080"}
{"test_case": 41, "data": "MetropolisHasting 41: robots/2-3-8.pl, test_cost: 0, train_cost: 0, time: 0.0005423760000000007, length: 9, iterations: 51"}
{"test_case": 42, "data": "MetropolisHasting 42: robots/2-3-9.pl, test_cost: 0, train_cost: 0, time: 0.006184716999999999, length: 22, iterations: 496"}
{"test_case": 43, "data": "MetropolisHasting 43: robots/2-3-10.pl, test_cost: 0, train_cost: 0, time: 0.0006269429999999979, length: 8, iterations: 51"}
{"test_case": 44, "data": "MetropolisHasting 44: robots/2-4-0.pl, test_cost: 0, train_cost: 0, time: 0.0002574039999999958, length: 6, iterations: 21"}
{"test_case": 45, "data": "MetropolisHasting 45: robots/2-4-1.pl, test_cost: 0, train_cost: 0, time: 0.009624631000000002, length: 19, iterations: 933"}
{"test_case": 46, "data": "MetropolisHasting 46: robots/2-4-2.pl, test_cost: 0, train_cost: 0, time: 0.005752096999999998, length: 22, iterations: 524"}
{"test_case": 47, "data": "MetropolisHasting 47: robots/2-4-3.pl, test_cost: 0, train_cost: 0, time: 0.00013842899999999547, length: 6, iterations: 10"}
{"test_case": 48, "data": "MetropolisHasting 48: robots/2-4-4.pl, test_cost: 0, train_cost: 0, time: 0.012919607000000007, length: 42, iterations: 1008"}
{"test_case": 49, "data": "MetropolisHasting 49: robots/2-4-5.pl, test_cost: 0, train_cost: 0, time: 0.008816375000000001, length: 33, iterations: 714"}
{"test_case": 50, "data": "MetropolisHasting 50: robots/2-4-6.pl, test_cost: 0, train_cost: 0, time: 0.00026215400000000055, length: 0, iterations: 6"}
{"test_case": 51, "data": "MetropolisHasting 51: robots/2-4-7.pl, test_cost: 0, train_cost: 0, time: 0.00031422099999999994, length: 10, iterations: 24"}
{"test_case": 52, "data": "MetropolisHasting 52: robots/2-4-8.pl, test_cost: 0, train_cost: 0, time: 0.012129748999999999, length: 32, iterations: 952"}
{"test_case": 53, "data": "MetropolisHasting 53: robots/2-4-9.pl, test_cost: 0, train_cost: 0, time: 0.017644401, length: 10, iterations: 1684"}
{"test_case": 54, "data": "MetropolisHasting 54: robots/2-4-10.pl, test_cost: 0, train_cost: 0, time: 0.013443684999999997, length: 28, iterations: 1157"}
{"test_case": 55, "data": "MetropolisHasting 55: robots/2-5-0.pl, test_cost: 0, train_cost: 0, time: 0.001655408000000004, length: 19, iterations: 146"}
{"test_case": 56, "data": "MetropolisHasting 56: robots/2-5-1.pl, test_cost: 0, train_cost: 0, time: 0.0011106950000000018, length: 8, iterations: 99"}
{"test_case": 57, "data": "MetropolisHasting 57: robots/2-5-2.pl, test_cost: 0, train_cost: 0, time: 0.013151516999999995, length: 31, iterations: 1124"}
{"test_case": 58, "data": "MetropolisHasting 58: robots/2-5-3.pl, test_cost: 0, train_cost: 0, time: 0.003878145999999999, length: 19, iterations: 340"}
{"test_case": 59, "data": "MetropolisHasting 59: robots/2-5-4.pl, test_cost: 0, train_cost: 0, time: 0.004581525000000003, length: 45, iterations: 347"}
{"test_case": 60, "data": "MetropolisHasting 60: robots/2-5-5.pl, test_cost: 0, train_cost: 0, time: 0.0014921050000000005, length: 7, iterations: 107"}
{"test_case": 61, "data": "MetropolisHasting 61: robots/2-5-6.pl, test_cost: 0, train_cost: 0, time: 3.1289000000000317e-05, length: 0, iterations: 1"}
{"test_case": 62, "data": "MetropolisHasting 62: robots/2-5-7.pl, test_cost: 0, train_cost: 0, time: 0.025221197, length: 40, iterations: 1894"}
{"test_case": 63, "data": "MetropolisHasting 63: robots/2-5-8.pl, test_cost: 0, train_cost: 0, time: 0.0025241619999999965, length: 24, iterations: 210"}
{"test_case": 64, "data": "MetropolisHasting 64: robots/2-5-9.pl, test_cost: 0, train_cost: 0, time: 0.0010557099999999944, length: 9, iterations: 96"}
{"test_case": 65, "data": "MetropolisHasting 65: robots/2-5-10.pl, test_cost: 0, train_cost: 0, time: 0.031686515, length: 19, iterations: 2968"}
{"test_case": 66, "data": "MetropolisHasting 66: robots/2-6-0.pl, test_cost: 0, train_cost: 0, time: 0.018937239999999994, length: 16, iterations: 1715"}
{"test_case": 67, "data": "MetropolisHasting 67: robots/2-6-1.pl, test_cost: 0, train_cost: 0, time: 0.019363065, length: 30, iterations: 1664"}
{"test_case": 68, "data": "MetropolisHasting 68: robots/2-6-2.pl, test_cost: 0, train_cost: 0, time: 0.0021878799999999893, length: 8, iterations: 205"}
{"test_case": 69, "data": "MetropolisHasting 69: robots/2-6-3.pl, test_cost: 0, train_cost: 0, time: 0.009457071999999997, length: 69, iterations: 625"}
{"test_case": 70, "data": "MetropolisHasting 70: robots/2-6-4.pl, test_cost: 0, train_cost: 0, time: 0.019511055, length: 20, iterations: 1574"}
{"test_case": 71, "data": "MetropolisHasting 71: robots/2-6-5.pl, test_cost: 0, train_cost: 0, time: 0.007776085000000002, length: 16, iterations: 635"}
{"test_case": 72, "data": "MetropolisHasting 72: robots/2-6-6.pl, test_cost: 0, train_cost: 0, time: 0.011735975999999995, length: 18, iterations: 1054"}
{"test_case": 73, "data": "MetropolisHasting 73: robots/2-6-7.pl, test_cost: 0, train_cost: 0, time: 0.00014459499999999736, length: 8, iterations: 10"}
{"test_case": 74, "data": "MetropolisHasting 74: robots/2-6-8.pl, test_cost: 0, train_cost: 0, time: 0.011545416000000003, length: 92, iterations: 748"}
{"test_case": 75, "data": "MetropolisHasting 75: robots/2-6-9.pl, test_cost: 0, train_cost: 0, time: 0.007899399000000001, length: 25, iterations: 745"}
{"test_case": 76, "data": "MetropolisHasting 76: robots/2-6-10.pl, test_cost: 0, train_cost: 0, time: 0.008510188000000002, length: 22, iterations: 769"}
{"test_case": 77, "data": "MetropolisHasting 77: robots/2-7-0.pl, test_cost: 0, train_cost: 0, time: 0.006212662000000008, length: 13, iterations: 548"}
{"test_case": 78, "data": "MetropolisHasting 78: robots/2-7-1.pl, test_cost: 0, train_cost: 0, time: 0.012849537999999994, length: 27, iterations: 1080"}
{"test_case": 79, "data": "MetropolisHasting 79: robots/2-7-2.pl, test_cost: 0, train_cost: 0, time: 0.0038182869999999897, length: 8, iterations: 354"}
{"test_case": 80, "data": "MetropolisHasting 80: robots/2-7-3.pl, test_cost: 0, train_cost: 0, time: 0.002966354, length: 10, iterations: 252"}
{"test_case": 81, "data": "MetropolisHasting 81: robots/2-7-4.pl, test_cost: 0, train_cost: 0, time: 0.00015798499999999938, length: 6, iterations: 12"}
{"test_case": 82, "data": "MetropolisHasting 82: robots/2-7-5.pl, test_cost: 0, train_cost: 0, time: 0.020317526000000002, length: 34, iterations: 1716"}
{"test_case": 83, "data": "MetropolisHasting 83: robots/2-7-6.pl, test_cost: 0, train_cost: 0, time: 8.150599999999855e-05, length: 0, iterations: 5"}
{"test_case": 84, "data": "MetropolisHasting 84: robots/2-7-7.pl, test_cost: 0, train_cost: 0, time: 0.009038341999999998, length: 22, iterations: 760"}
{"test_case": 85, "data": "MetropolisHasting 85: robots/2-7-8.pl, test_cost: 0, train_cost: 0, time: 0.008565261999999997, length: 23, iterations: 668"}
{"test_case": 86, "data": "MetropolisHasting 86: robots/2-7-9.pl, test_cost: 0, train_cost: 0, time: 6.757899999999817e-05, length: 0, iterations: 4"}
{"test_case": 87, "data": "MetropolisHasting 87: robots/2-7-10.pl, test_cost: 0, train_cost: 0, time: 0.00010621599999999926, length: 1, iterations: 8"}
{"test_case": 88, "data": "MetropolisHasting 88: robots/2-8-0.pl, test_cost: 0, train_cost: 0, time: 0.0032999599999999976, length: 33, iterations: 260"}
{"test_case": 89, "data": "MetropolisHasting 89: robots/2-8-1.pl, test_cost: 0, train_cost: 0, time: 0.0006342650000000019, length: 10, iterations: 54"}
{"test_case": 90, "data": "MetropolisHasting 90: robots/2-8-2.pl, test_cost: 0, train_cost: 0, time: 0.0017960390000000001, length: 23, iterations: 125"}
{"test_case": 91, "data": "MetropolisHasting 91: robots/2-8-3.pl, test_cost: 0, train_cost: 0, time: 0.006997420999999999, length: 20, iterations: 574"}
{"test_case": 92, "data": "MetropolisHasting 92: robots/2-8-4.pl, test_cost: 0, train_cost: 0, time: 0.0026429920000000003, length: 6, iterations: 227"}
{"test_case": 93, "data": "MetropolisHasting 93: robots/2-8-5.pl, test_cost: 0, train_cost: 0, time: 0.024652442, length: 25, iterations: 2142"}
{"test_case": 94, "data": "MetropolisHasting 94: robots/2-8-6.pl, test_cost: 0, train_cost: 0, time: 0.0074390689999999995, length: 14, iterations: 618"}
{"test_case": 95, "data": "MetropolisHasting 95: robots/2-8-7.pl, test_cost: 0, train_cost: 0, time: 4.2016000000005826e-05, length: 1, iterations: 2"}
{"test_case": 96, "data": "MetropolisHasting 96: robots/2-8-8.pl, test_cost: 0, train_cost: 0, time: 0.0003253470000000036, length: 4, iterations: 27"}
{"test_case": 97, "data": "MetropolisHasting 97: robots/2-8-9.pl, test_cost: 0, train_cost: 0, time: 0.005576437999999996, length: 55, iterations: 430"}
{"test_case": 98, "data": "MetropolisHasting 98: robots/2-8-10.pl, test_cost: 0, train_cost: 0, time: 0.013223592, length: 33, iterations: 1143"}
{"test_case": 99, "data": "MetropolisHasting 99: robots/2-9-0.pl, test_cost: 0, train_cost: 0, time: 0.00491606700000001, length: 43, iterations: 382"}
{"test_case": 100, "data": "MetropolisHasting 100: robots/2-9-1.pl, test_cost: 0, train_cost: 0, time: 0.0018239609999999998, length: 9, iterations: 150"}
{"test_case": 101, "data": "MetropolisHasting 101: robots/2-9-2.pl, test_cost: 0, train_cost: 0, time: 0.004753746, length: 10, iterations: 409"}
{"test_case": 102, "data": "MetropolisHasting 102: robots/2-9-3.pl, test_cost: 0, train_cost: 0, time: 0.0013478350000000004, length: 8, iterations: 121"}
{"test_case": 103, "data": "MetropolisHasting 103: robots/2-9-4.pl, test_cost: 0, train_cost: 0, time: 0.00338484, length: 19, iterations: 296"}
{"test_case": 104, "data": "MetropolisHasting 104: robots/2-9-5.pl, test_cost: 0, train_cost: 0, time: 0.011418924, length: 31, iterations: 1012"}
{"test_case": 105, "data": "MetropolisHasting 105: robots/2-9-6.pl, test_cost: 0, train_cost: 0, time: 0.004456435999999998, length: 34, iterations: 366"}
{"test_case": 106, "data": "MetropolisHasting 106: robots/2-9-7.pl, test_cost: 0, train_cost: 0, time: 3.0125999999998376e-05, length: 2, iterations: 1"}
{"test_case": 107, "data": "MetropolisHasting 107: robots/2-9-8.pl, test_cost: 0, train_cost: 0, time: 0.0031412489999999987, length: 15, iterations: 297"}
{"test_case": 108, "data": "MetropolisHasting 108: robots/2-9-9.pl, test_cost: 0, train_cost: 0, time: 0.004011704999999997, length: 28, iterations: 377"}
{"test_case": 109, "data": "MetropolisHasting 109: robots/2-9-10.pl, test_cost: 0, train_cost: 0, time: 0.018716321, length: 19, iterations: 1798"}
{"test_case": 110, "data": "MetropolisHasting 110: robots/4-0-0.pl, test_cost: 0, train_cost: 0, time: 0.014531948, length: 71, iterations: 948"}
{"test_case": 111, "data": "MetropolisHasting 111: robots/4-0-1.pl, test_cost: 0, train_cost: 0, time: 0.021799908000000003, length: 96, iterations: 1370"}
{"test_case": 112, "data": "MetropolisHasting 112: robots/4-0-2.pl, test_cost: 0, train_cost: 0, time: 0.013816684000000003, length: 108, iterations: 692"}
{"test_case": 113, "data": "MetropolisHasting 113: robots/4-0-3.pl, test_cost: 0, train_cost: 0, time: 0.025087172999999997, length: 120, iterations: 1341"}
{"test_case": 114, "data": "MetropolisHasting 114: robots/4-0-4.pl, test_cost: 0, train_cost: 0, time: 0.0020314270000000023, length: 16, iterations: 175"}
{"test_case": 115, "data": "MetropolisHasting 115: robots/4-0-5.pl, test_cost: 0, train_cost: 0, time: 0.03726641800000001, length: 64, iterations: 2078"}
{"test_case": 116, "data": "MetropolisHasting 116: robots/4-0-6.pl, test_cost: 0, train_cost: 0, time: 0.09883608099999999, length: 221, iterations: 3505"}
{"test_case": 117, "data": "MetropolisHasting 117: robots/4-0-7.pl, test_cost: 0, train_cost: 0, time: 0.013996733999999983, length: 58, iterations: 1034"}
{"test_case": 118, "data": "MetropolisHasting 118: robots/4-0-8.pl, test_cost: 0, train_cost: 0, time: 0.025508598999999965, length: 26, iterations: 2024"}
{"test_case": 119, "data": "MetropolisHasting 119: robots/4-0-9.pl, test_cost: 0, train_cost: 0, time: 0.009146229000000006, length: 42, iterations: 713"}
{"test_case": 120, "data": "MetropolisHasting 120: robots/4-0-10.pl, test_cost: 0, train_cost: 0, time: 0.018155271, length: 69, iterations: 1111"}
{"test_case": 121, "data": "MetropolisHasting 121: robots/4-1-0.pl, test_cost: 0, train_cost: 0, time: 0.011456660000000004, length: 70, iterations: 799"}
{"test_case": 122, "data": "MetropolisHasting 122: robots/4-1-1.pl, test_cost: 0, train_cost: 0, time: 0.033863424999999996, length: 31, iterations: 2092"}
{"test_case": 123, "data": "MetropolisHasting 123: robots/4-1-2.pl, test_cost: 0, train_cost: 0, time: 0.283887823, length: 604, iterations: 6528"}
{"test_case": 124, "data": "MetropolisHasting 124: robots/4-1-3.pl, test_cost: 0, train_cost: 0, time: 0.008833413000000012, length: 35, iterations: 689"}
{"test_case": 125, "data": "MetropolisHasting 125: robots/4-1-4.pl, test_cost: 0, train_cost: 0, time: 0.00646427799999999, length: 69, iterations: 400"}
{"test_case": 126, "data": "MetropolisHasting 126: robots/4-1-5.pl, test_cost: 0, train_cost: 0, time: 0.21716541399999995, length: 292, iterations: 6087"}
{"test_case": 127, "data": "MetropolisHasting 127: robots/4-1-6.pl, test_cost: 0, train_cost: 0, time: 0.03786055799999999, length: 27, iterations: 3306"}
{"test_case": 128, "data": "MetropolisHasting 128: robots/4-1-7.pl, test_cost: 0, train_cost: 0, time: 0.01640899200000001, length: 29, iterations: 1311"}
{"test_case": 129, "data": "MetropolisHasting 129: robots/4-1-8.pl, test_cost: 0, train_cost: 0, time: 0.024959014999999973, length: 41, iterations: 1974"}
{"test_case": 130, "data": "MetropolisHasting 130: robots/4-1-9.pl, test_cost: 0, train_cost: 0, time: 0.009973834, length: 49, iterations: 688"}
{"test_case": 131, "data": "MetropolisHasting 131: robots/4-1-10.pl, test_cost: 0, train_cost: 0, time: 0.011831641, length: 66, iterations: 786"}
{"test_case": 132, "data": "MetropolisHasting 132: robots/4-2-0.pl, test_cost: 0, train_cost: 0, time: 0.016522654999999997, length: 16, iterations: 1208"}
{"test_case": 133, "data": "MetropolisHasting 133: robots/4-2-1.pl, test_cost: 0, train_cost: 0, time: 0.045245890000000004, length: 25, iterations: 3872"}
{"test_case": 134, "data": "MetropolisHasting 134: robots/4-2-2.pl, test_cost: 0, train_cost: 0, time: 0.126679261, length: 292, iterations: 3588"}
{"test_case": 135, "data": "MetropolisHasting 135: robots/4-2-3.pl, test_cost: 0, train_cost: 0, time: 0.028002453999999982, length: 59, iterations: 2070"}
{"test_case": 136, "data": "MetropolisHasting 136: robots/4-2-4.pl, test_cost: 0, train_cost: 0, time: 0.02276550600000002, length: 21, iterations: 2102"}
{"test_case": 137, "data": "MetropolisHasting 137: robots/4-2-5.pl, test_cost: 0, train_cost: 0, time: 0.009976898000000012, length: 60, iterations: 664"}
{"test_case": 138, "data": "MetropolisHasting 138: robots/4-2-6.pl, test_cost: 0, train_cost: 0, time: 0.08665305299999998, length: 244, iterations: 3307"}
{"test_case": 139, "data": "MetropolisHasting 139: robots/4-2-7.pl, test_cost: 0, train_cost: 0, time: 0.018421383999999985, length: 70, iterations: 1219"}
{"test_case": 140, "data": "MetropolisHasting 140: robots/4-2-8.pl, test_cost: 0, train_cost: 0, time: 0.017908113, length: 114, iterations: 880"}
{"test_case": 141, "data": "MetropolisHasting 141: robots/4-2-9.pl, test_cost: 0, train_cost: 0, time: 0.011473602999999999, length: 59, iterations: 732"}
{"test_case": 142, "data": "MetropolisHasting 142: robots/4-2-10.pl, test_cost: 0, train_cost: 0, time: 0.006546528000000003, length: 94, iterations: 392"}
{"test_case": 143, "data": "MetropolisHasting 143: robots/4-3-0.pl, test_cost: 0, train_cost: 0, time: 0.009134285999999998, length: 96, iterations: 527"}
{"test_case": 144, "data": "MetropolisHasting 144: robots/4-3-1.pl, test_cost: 0, train_cost: 0, time: 0.0032880580000000034, length: 21, iterations: 268"}
{"test_case": 145, "data": "MetropolisHasting 145: robots/4-3-2.pl, test_cost: 0, train_cost: 0, time: 0.012842729999999997, length: 101, iterations: 795"}
{"test_case": 146, "data": "MetropolisHasting 146: robots/4-3-3.pl, test_cost: 0, train_cost: 0, time: 0.06421342399999999, length: 32, iterations: 5578"}
{"test_case": 147, "data": "MetropolisHasting 147: robots/4-3-4.pl, test_cost: 0, train_cost: 0, time: 0.118054097, length: 55, iterations: 4566"}
{"test_case": 148, "data": "MetropolisHasting 148: robots/4-3-5.pl, test_cost: 0, train_cost: 0, time: 0.007905070999999986, length: 20, iterations: 623"}
{"test_case": 149, "data": "MetropolisHasting 149: robots/4-3-6.pl, test_cost: 0, train_cost: 0, time: 0.056047106999999985, length: 38, iterations: 3339"}
{"test_case": 150, "data": "MetropolisHasting 150: robots/4-3-7.pl, test_cost: 0, train_cost: 0, time: 0.019117314, length: 91, iterations: 1074"}
{"test_case": 151, "data": "MetropolisHasting 151: robots/4-3-8.pl, test_cost: 0, train_cost: 0, time: 0.012924874000000003, length: 71, iterations: 748"}
{"test_case": 152, "data": "MetropolisHasting 152: robots/4-3-9.pl, test_cost: 0, train_cost: 0, time: 0.012002183, length: 41, iterations: 847"}
{"test_case": 153, "data": "MetropolisHasting 153: robots/4-3-10.pl, test_cost: 0, train_cost: 0, time: 0.020500907000000006, length: 34, iterations: 1497"}
{"test_case": 154, "data": "MetropolisHasting 154: robots/4-4-0.pl, test_cost: 0, train_cost: 0, time: 0.006642303000000002, length: 35, iterations: 483"}
{"test_case": 155, "data": "MetropolisHasting 155: robots/4-4-1.pl, test_cost: 0, train_cost: 0, time: 0.013886050999999996, length: 38, iterations: 1091"}
{"test_case": 156, "data": "MetropolisHasting 156: robots/4-4-2.pl, test_cost: 0, train_cost: 0, time: 0.0021585699999999985, length: 12, iterations: 211"}
{"test_case": 157, "data": "MetropolisHasting 157: robots/4-4-3.pl, test_cost: 0, train_cost: 0, time: 0.011410344000000003, length: 72, iterations: 645"}
{"test_case": 158, "data": "MetropolisHasting 158: robots/4-4-4.pl, test_cost: 0, train_cost: 0, time: 0.028154117000000006, length: 29, iterations: 2357"}
{"test_case": 159, "data": "MetropolisHasting 159: robots/4-4-5.pl, test_cost: 0, train_cost: 0, time: 0.028163365999999995, length: 74, iterations: 1996"}
{"test_case": 160, "data": "MetropolisHasting 160: robots/4-4-6.pl, test_cost: 0, train_cost: 0, time: 0.016946765000000003, length: 92, iterations: 846"}
{"test_case": 161, "data": "MetropolisHasting 161: robots/4-4-7.pl, test_cost: 0, train_cost: 0, time: 0.012456031999999999, length: 74, iterations: 830"}
{"test_case": 162, "data": "MetropolisHasting 162: robots/4-4-8.pl, test_cost: 0, train_cost: 0, time: 0.009360220000000002, length: 62, iterations: 656"}
{"test_case": 163, "data": "MetropolisHasting 163: robots/4-4-9.pl, test_cost: 0, train_cost: 0, time: 0.128661101, length: 296, iterations: 3722"}
{"test_case": 164, "data": "MetropolisHasting 164: robots/4-4-10.pl, test_cost: 0, train_cost: 0, time: 0.107907208, length: 369, iterations: 2879"}
{"test_case": 165, "data": "MetropolisHasting 165: robots/4-5-0.pl, test_cost: 0, train_cost: 0, time: 0.0036237419999999854, length: 26, iterations: 289"}
{"test_case": 166, "data": "MetropolisHasting 166: robots/4-5-1.pl, test_cost: 0, train_cost: 0, time: 0.0004290550000000115, length: 2, iterations: 41"}
{"test_case": 167, "data": "MetropolisHasting 167: robots/4-5-2.pl, test_cost: 0, train_cost: 0, time: 0.0005351410000000167, length: 13, iterations: 49"}
{"test_case": 168, "data": "MetropolisHasting 168: robots/4-5-3.pl, test_cost: 0, train_cost: 0, time: 0.04195683699999997, length: 151, iterations: 1948"}
{"test_case": 169, "data": "MetropolisHasting 169: robots/4-5-4.pl, test_cost: 0, train_cost: 0, time: 0.0072968239999999795, length: 19, iterations: 524"}
{"test_case": 170, "data": "MetropolisHasting 170: robots/4-5-5.pl, test_cost: 0, train_cost: 0, time: 0.419591983, length: 674, iterations: 7210"}
{"test_case": 171, "data": "MetropolisHasting 171: robots/4-5-6.pl, test_cost: 0, train_cost: 0, time: 0.023875232999999996, length: 25, iterations: 1516"}
{"test_case": 172, "data": "MetropolisHasting 172: robots/4-5-7.pl, test_cost: 0, train_cost: 0, time: 0.11693549900000005, length: 65, iterations: 6258"}
{"test_case": 173, "data": "MetropolisHasting 173: robots/4-5-8.pl, test_cost: 0, train_cost: 0, time: 1.2066719670000001, length: 1102, iterations: 14011"}
{"test_case": 174, "data": "MetropolisHasting 174: robots/4-5-9.pl, test_cost: 0, train_cost: 0, time: 0.018390791000000073, length: 80, iterations: 976"}
{"test_case": 175, "data": "MetropolisHasting 175: robots/4-5-10.pl, test_cost: 0, train_cost: 0, time: 0.009309361999999988, length: 48, iterations: 696"}
{"test_case": 176, "data": "MetropolisHasting 176: robots/4-6-0.pl, test_cost: 0, train_cost: 0, time: 0.011274516000000068, length: 55, iterations: 729"}
{"test_case": 177, "data": "MetropolisHasting 177: robots/4-6-1.pl, test_cost: 0, train_cost: 0, time: 0.001147886999999903, length: 17, iterations: 87"}
{"test_case": 178, "data": "MetropolisHasting 178: robots/4-6-2.pl, test_cost: 0, train_cost: 0, time: 0.0027033850000000026, length: 31, iterations: 196"}
{"test_case": 179, "data": "MetropolisHasting 179: robots/4-6-3.pl, test_cost: 0, train_cost: 0, time: 6.442800000017179e-05, length: 3, iterations: 4"}
{"test_case": 180, "data": "MetropolisHasting 180: robots/4-6-4.pl, test_cost: 0, train_cost: 0, time: 0.002203279, length: 27, iterations: 143"}
{"test_case": 181, "data": "MetropolisHasting 181: robots/4-6-5.pl, test_cost: 0, train_cost: 0, time: 0.006387801, length: 57, iterations: 433"}
{"test_case": 182, "data": "MetropolisHasting 182: robots/4-6-6.pl, test_cost: 0, train_cost: 0, time: 0.328084534, length: 505, iterations: 7424"}
{"test_case": 183, "data": "MetropolisHasting 183: robots/4-6-7.pl, test_cost: 0, train_cost: 0, time: 0.16056859699999998, length: 333, iterations: 5779"}
{"test_case": 184, "data": "MetropolisHasting 184: robots/4-6-8.pl, test_cost: 0, train_cost: 0, time: 0.011591836000000022, length: 78, iterations: 842"}
{"test_case": 185, "data": "MetropolisHasting 185: robots/4-6-9.pl, test_cost: 0, train_cost: 0, time: 0.022884758999999977, length: 85, iterations: 1388"}
{"test_case": 186, "data": "MetropolisHasting 186: robots/4-6-10.pl, test_cost: 0, train_cost: 0, time: 0.01710347000000001, length: 29, iterations: 1130"}
{"test_case": 187, "data": "MetropolisHasting 187: robots/4-7-0.pl, test_cost: 0, train_cost: 0, time: 0.00032112499999992217, length: 3, iterations: 28"}
{"test_case": 188, "data": "MetropolisHasting 188: robots/4-7-1.pl, test_cost: 0, train_cost: 0, time: 1.4823910639999998, length: 1092, iterations: 16865"}
{"test_case": 189, "data": "MetropolisHasting 189: robots/4-7-2.pl, test_cost: 0, train_cost: 0, time: 0.09033921300000003, length: 96, iterations: 3641"}
{"test_case": 190, "data": "MetropolisHasting 190: robots/4-7-3.pl, test_cost: 0, train_cost: 0, time: 0.008099614, length: 39, iterations: 547"}
{"test_case": 191, "data": "MetropolisHasting 191: robots/4-7-4.pl, test_cost: 0, train_cost: 0, time: 0.127427511, length: 391, iterations: 3574"}
{"test_case": 192, "data": "MetropolisHasting 192: robots/4-7-5.pl, test_cost: 0, train_cost: 0, time: 0.04601635200000001, length: 87, iterations: 3106"}
{"test_case": 193, "data": "MetropolisHasting 193: robots/4-7-6.pl, test_cost: 0, train_cost: 0, time: 0.008007189999999997, length: 99, iterations: 362"}
{"test_case": 194, "data": "MetropolisHasting 194: robots/4-7-7.pl, test_cost: 0, train_cost: 0, time: 0.0018011959999999771, length: 23, iterations: 154"}
{"test_case": 195, "data": "MetropolisHasting 195: robots/4-7-8.pl, test_cost: 0, train_cost: 0, time: 0.02069285599999998, length: 92, iterations: 1011"}
{"test_case": 196, "data": "MetropolisHasting 196: robots/4-7-9.pl, test_cost: 0, train_cost: 0, time: 0.02991728399999999, length: 109, iterations: 1430"}
{"test_case": 197, "data": "MetropolisHasting 197: robots/4-7-10.pl, test_cost: 0, train_cost: 0, time: 0.000957178000000003, length: 23, iterations: 77"}
{"test_case": 198, "data": "MetropolisHasting 198: robots/4-8-0.pl, test_cost: 0, train_cost: 0, time: 0.012184220999999995, length: 33, iterations: 870"}
{"test_case": 199, "data": "MetropolisHasting 199: robots/4-8-1.pl, test_cost: 0, train_cost: 0, time: 0.00042189100000000757, length: 15, iterations: 29"}
{"test_case": 200, "data": "MetropolisHasting 200: robots/4-8-2.pl, test_cost: 0, train_cost: 0, time: 0.007088901, length: 42, iterations: 524"}
{"test_case": 201, "data": "MetropolisHasting 201: robots/4-8-3.pl, test_cost: 0, train_cost: 0, time: 0.10895927899999999, length: 311, iterations: 3600"}
{"test_case": 202, "data": "MetropolisHasting 202: robots/4-8-4.pl, test_cost: 0, train_cost: 0, time: 0.012257644000000012, length: 46, iterations: 1026"}
{"test_case": 203, "data": "MetropolisHasting 203: robots/4-8-5.pl, test_cost: 0, train_cost: 0, time: 0.029299406, length: 58, iterations: 1516"}
{"test_case": 204, "data": "MetropolisHasting 204: robots/4-8-6.pl, test_cost: 0, train_cost: 0, time: 0.011690409000000013, length: 38, iterations: 906"}
{"test_case": 205, "data": "MetropolisHasting 205: robots/4-8-7.pl, test_cost: 0, train_cost: 0, time: 0.007384814999999989, length: 45, iterations: 558"}
{"test_case": 206, "data": "MetropolisHasting 206: robots/4-8-8.pl, test_cost: 0, train_cost: 0, time: 0.105563416, length: 56, iterations: 7637"}
{"test_case": 207, "data": "MetropolisHasting 207: robots/4-8-9.pl, test_cost: 0, train_cost: 0, time: 1.009223386, length: 1058, iterations: 12341"}
{"test_case": 208, "data": "MetropolisHasting 208: robots/4-8-10.pl, test_cost: 0, train_cost: 0, time: 0.017491874000000074, length: 63, iterations: 1193"}
{"test_case": 209, "data": "MetropolisHasting 209: robots/4-9-0.pl, test_cost: 0, train_cost: 0, time: 0.09274880000000008, length: 280, iterations: 3002"}
{"test_case": 210, "data": "MetropolisHasting 210: robots/4-9-1.pl, test_cost: 0, train_cost: 0, time: 0.0011006479999999992, length: 12, iterations: 75"}
{"test_case": 211, "data": "MetropolisHasting 211: robots/4-9-2.pl, test_cost: 0, train_cost: 0, time: 0.04271441, length: 95, iterations: 2315"}
{"test_case": 212, "data": "MetropolisHasting 212: robots/4-9-3.pl, test_cost: 0, train_cost: 0, time: 0.009459506, length: 36, iterations: 688"}
{"test_case": 213, "data": "MetropolisHasting 213: robots/4-9-4.pl, test_cost: 0, train_cost: 0, time: 0.06505930500000001, length: 180, iterations: 3679"}
{"test_case": 214, "data": "MetropolisHasting 214: robots/4-9-5.pl, test_cost: 0, train_cost: 0, time: 0.033809854, length: 92, iterations: 1794"}
{"test_case": 215, "data": "MetropolisHasting 215: robots/4-9-6.pl, test_cost: 0, train_cost: 0, time: 0.005999951000000003, length: 17, iterations: 504"}
{"test_case": 216, "data": "MetropolisHasting 216: robots/4-9-7.pl, test_cost: 0, train_cost: 0, time: 0.05567000300000002, length: 59, iterations: 3612"}
{"test_case": 217, "data": "MetropolisHasting 217: robots/4-9-8.pl, test_cost: 0, train_cost: 0, time: 0.083721661, length: 97, iterations: 4184"}
{"test_case": 218, "data": "MetropolisHasting 218: robots/4-9-9.pl, test_cost: 0, train_cost: 0, time: 0.13596538000000002, length: 291, iterations: 5802"}
{"test_case": 219, "data": "MetropolisHasting 219: robots/4-9-10.pl, test_cost: 0, train_cost: 0, time: 0.04323523400000001, length: 165, iterations: 2072"}
{"test_case": 220, "data": "MetropolisHasting 220: robots/6-0-0.pl, test_cost: 0, train_cost: 0, time: 0.040791378, length: 166, iterations: 1737"}
{"test_case": 221, "data": "MetropolisHasting 221: robots/6-0-1.pl, test_cost: 0, train_cost: 0, time: 0.042362828, length: 85, iterations: 2528"}
{"test_case": 222, "data": "MetropolisHasting 222: robots/6-0-2.pl, test_cost: 0, train_cost: 0, time: 0.029055993000000002, length: 190, iterations: 1154"}
{"test_case": 223, "data": "MetropolisHasting 223: robots/6-0-3.pl, test_cost: 0, train_cost: 0, time: 0.018324072999999982, length: 57, iterations: 1166"}
{"test_case": 224, "data": "MetropolisHasting 224: robots/6-0-4.pl, test_cost: 0, train_cost: 0, time: 0.02081238599999999, length: 105, iterations: 1175"}
{"test_case": 225, "data": "MetropolisHasting 225: robots/6-0-5.pl, test_cost: 0, train_cost: 0, time: 0.026953589, length: 148, iterations: 1429"}
{"test_case": 226, "data": "MetropolisHasting 226: robots/6-0-6.pl, test_cost: 0, train_cost: 0, time: 0.055476970999999986, length: 190, iterations: 2172"}
{"test_case": 227, "data": "MetropolisHasting 227: robots/6-0-7.pl, test_cost: 0, train_cost: 0, time: 0.03157504900000002, length: 114, iterations: 1786"}
{"test_case": 228, "data": "MetropolisHasting 228: robots/6-0-8.pl, test_cost: 0, train_cost: 0, time: 0.147148287, length: 370, iterations: 4139"}
{"test_case": 229, "data": "MetropolisHasting 229: robots/6-0-9.pl, test_cost: 0, train_cost: 0, time: 0.0001419500000000018, length: 4, iterations: 10"}
{"test_case": 230, "data": "MetropolisHasting 230: robots/6-0-10.pl, test_cost: 0, train_cost: 0, time: 0.013959027000000002, length: 79, iterations: 778"}
{"test_case": 231, "data": "MetropolisHasting 231: robots/6-1-0.pl, test_cost: 0, train_cost: 0, time: 0.107923562, length: 254, iterations: 4668"}
{"test_case": 232, "data": "MetropolisHasting 232: robots/6-1-1.pl, test_cost: 0, train_cost: 0, time: 0.022463638000000008, length: 108, iterations: 1428"}
{"test_case": 233, "data": "MetropolisHasting 233: robots/6-1-2.pl, test_cost: 0, train_cost: 0, time: 0.013394274000000012, length: 35, iterations: 1080"}
{"test_case": 234, "data": "MetropolisHasting 234: robots/6-1-3.pl, test_cost: 0, train_cost: 0, time: 0.20803920800000003, length: 501, iterations: 5218"}
{"test_case": 235, "data": "MetropolisHasting 235: robots/6-1-4.pl, test_cost: 0, train_cost: 0, time: 0.14339734799999998, length: 444, iterations: 3477"}
{"test_case": 236, "data": "MetropolisHasting 236: robots/6-1-5.pl, test_cost: 0, train_cost: 0, time: 0.022613141999999975, length: 83, iterations: 1575"}
{"test_case": 237, "data": "MetropolisHasting 237: robots/6-1-6.pl, test_cost: 0, train_cost: 0, time: 0.006468373999999999, length: 45, iterations: 502"}
{"test_case": 238, "data": "MetropolisHasting 238: robots/6-1-7.pl, test_cost: 0, train_cost: 0, time: 0.19632547, length: 460, iterations: 4551"}
{"test_case": 239, "data": "MetropolisHasting 239: robots/6-1-8.pl, test_cost: 0, train_cost: 0, time: 0.003536117999999977, length: 12, iterations: 329"}
{"test_case": 240, "data": "MetropolisHasting 240: robots/6-1-9.pl, test_cost: 0, train_cost: 0, time: 0.41008819700000004, length: 860, iterations: 6598"}
{"test_case": 241, "data": "MetropolisHasting 241: robots/6-1-10.pl, test_cost: 0, train_cost: 0, time: 0.08650914700000006, length: 362, iterations: 2457"}
{"test_case": 242, "data": "MetropolisHasting 242: robots/6-2-0.pl, test_cost: 0, train_cost: 0, time: 0.026868011000000025, length: 179, iterations: 1195"}
{"test_case": 243, "data": "MetropolisHasting 243: robots/6-2-1.pl, test_cost: 0, train_cost: 0, time: 0.03686326800000006, length: 166, iterations: 1466"}
{"test_case": 244, "data": "MetropolisHasting 244: robots/6-2-2.pl, test_cost: 0, train_cost: 0, time: 0.029857287999999982, length: 118, iterations: 1604"}
{"test_case": 245, "data": "MetropolisHasting 245: robots/6-2-3.pl, test_cost: 0, train_cost: 0, time: 0.07270854900000001, length: 320, iterations: 2214"}
{"test_case": 246, "data": "MetropolisHasting 246: robots/6-2-4.pl, test_cost: 0, train_cost: 0, time: 0.07687038099999999, length: 264, iterations: 2340"}
{"test_case": 247, "data": "MetropolisHasting 247: robots/6-2-5.pl, test_cost: 0, train_cost: 0, time: 0.640197536, length: 953, iterations: 9086"}
{"test_case": 248, "data": "MetropolisHasting 248: robots/6-2-6.pl, test_cost: 0, train_cost: 0, time: 0.12151932600000004, length: 330, iterations: 3610"}
{"test_case": 249, "data": "MetropolisHasting 249: robots/6-2-7.pl, test_cost: 0, train_cost: 0, time: 0.04259997299999996, length: 190, iterations: 1557"}
{"test_case": 250, "data": "MetropolisHasting 250: robots/6-2-8.pl, test_cost: 0, train_cost: 0, time: 0.058087827999999994, length: 39, iterations: 3454"}
{"test_case": 251, "data": "MetropolisHasting 251: robots/6-2-9.pl, test_cost: 0, train_cost: 0, time: 0.010578008, length: 96, iterations: 667"}
{"test_case": 252, "data": "MetropolisHasting 252: robots/6-2-10.pl, test_cost: 0, train_cost: 0, time: 0.10297775399999999, length: 78, iterations: 4939"}
{"test_case": 253, "data": "MetropolisHasting 253: robots/6-3-0.pl, test_cost: 0, train_cost: 0, time: 0.13387822700000002, length: 389, iterations: 3884"}
{"test_case": 254, "data": "MetropolisHasting 254: robots/6-3-1.pl, test_cost: 0, train_cost: 0, time: 2.410455544, length: 2024, iterations: 17662"}
{"test_case": 255, "data": "MetropolisHasting 255: robots/6-3-2.pl, test_cost: 0, train_cost: 0, time: 0.02946702900000009, length: 20, iterations: 2283"}
{"test_case": 256, "data": "MetropolisHasting 256: robots/6-3-3.pl, test_cost: 0, train_cost: 0, time: 0.03985469500000027, length: 84, iterations: 1916"}
{"test_case": 257, "data": "MetropolisHasting 257: robots/6-3-4.pl, test_cost: 0, train_cost: 0, time: 0.030281299999999955, length: 129, iterations: 1442"}
{"test_case": 258, "data": "MetropolisHasting 258: robots/6-3-5.pl, test_cost: 0, train_cost: 0, time: 0.00931576600000028, length: 56, iterations: 532"}
{"test_case": 259, "data": "MetropolisHasting 259: robots/6-3-6.pl, test_cost: 0, train_cost: 0, time: 0.5977960969999998, length: 913, iterations: 6747"}
{"test_case": 260, "data": "MetropolisHasting 260: robots/6-3-7.pl, test_cost: 0, train_cost: 0, time: 0.423914511, length: 847, iterations: 5452"}
{"test_case": 261, "data": "MetropolisHasting 261: robots/6-3-8.pl, test_cost: 0, train_cost: 0, time: 1.520759065, length: 1663, iterations: 12858"}
{"test_case": 262, "data": "MetropolisHasting 262: robots/6-3-9.pl, test_cost: 0, train_cost: 0, time: 0.010421186999999943, length: 40, iterations: 806"}
{"test_case": 263, "data": "MetropolisHasting 263: robots/6-3-10.pl, test_cost: 3, train_cost: 3, time: 60.00029782, length: 9470, iterations: 93353"}
{"test_case": 264, "data": "MetropolisHasting 264: robots/6-4-0.pl, test_cost: 0, train_cost: 0, time: 0.8988377159999956, length: 1044, iterations: 10137"}
{"test_case": 265, "data": "MetropolisHasting 265: robots/6-4-1.pl, test_cost: 0, train_cost: 0, time: 0.12862604099999686, length: 425, iterations: 3138"}
{"test_case": 266, "data": "MetropolisHasting 266: robots/6-4-2.pl, test_cost: 0, train_cost: 0, time: 0.014381014999997888, length: 96, iterations: 850"}
{"test_case": 267, "data": "MetropolisHasting 267: robots/6-4-3.pl, test_cost: 0, train_cost: 0, time: 0.017951449999998204, length: 123, iterations: 894"}
{"test_case": 268, "data": "MetropolisHasting 268: robots/6-4-4.pl, test_cost: 0, train_cost: 0, time: 0.032548694999995575, length: 186, iterations: 1332"}
{"test_case": 269, "data": "MetropolisHasting 269: robots/6-4-5.pl, test_cost: 0, train_cost: 0, time: 0.02220769499999875, length: 23, iterations: 1983"}
{"test_case": 270, "data": "MetropolisHasting 270: robots/6-4-6.pl, test_cost: 0, train_cost: 0, time: 0.041745039000000005, length: 131, iterations: 2526"}
{"test_case": 271, "data": "MetropolisHasting 271: robots/6-4-7.pl, test_cost: 0, train_cost: 0, time: 0.093695863, length: 50, iterations: 3899"}
{"test_case": 272, "data": "MetropolisHasting 272: robots/6-4-8.pl, test_cost: 0, train_cost: 0, time: 0.296851517, length: 548, iterations: 6341"}
{"test_case": 273, "data": "MetropolisHasting 273: robots/6-4-9.pl, test_cost: 0, train_cost: 0, time: 0.018586351, length: 52, iterations: 1323"}
{"test_case": 274, "data": "MetropolisHasting 274: robots/6-4-10.pl, test_cost: 0, train_cost: 0, time: 0.13385216499999997, length: 392, iterations: 3701"}
{"test_case": 275, "data": "MetropolisHasting 275: robots/6-5-0.pl, test_cost: 0, train_cost: 0, time: 0.011910049000000034, length: 27, iterations: 876"}
{"test_case": 276, "data": "MetropolisHasting 276: robots/6-5-1.pl, test_cost: 0, train_cost: 0, time: 0.001485352999999967, length: 32, iterations: 130"}
{"test_case": 277, "data": "MetropolisHasting 277: robots/6-5-2.pl, test_cost: 0, train_cost: 0, time: 0.01752630300000002, length: 86, iterations: 1256"}
{"test_case": 278, "data": "MetropolisHasting 278: robots/6-5-3.pl, test_cost: 4, train_cost: 4, time: 60.000429965, length: 9894, iterations: 88796"}
{"test_case": 279, "data": "MetropolisHasting 279: robots/6-5-4.pl, test_cost: 0, train_cost: 0, time: 0.004042349999998862, length: 38, iterations: 278"}
{"test_case": 280, "data": "MetropolisHasting 280: robots/6-5-5.pl, test_cost: 0, train_cost: 0, time: 0.010259299, length: 57, iterations: 648"}
{"test_case": 281, "data": "MetropolisHasting 281: robots/6-5-6.pl, test_cost: 0, train_cost: 0, time: 0.08463472799999999, length: 374, iterations: 2412"}
{"test_case": 282, "data": "MetropolisHasting 282: robots/6-5-7.pl, test_cost: 0, train_cost: 0, time: 0.04263716000000001, length: 96, iterations: 1997"}
{"test_case": 283, "data": "MetropolisHasting 283: robots/6-5-8.pl, test_cost: 0, train_cost: 0, time: 0.06259584200000001, length: 249, iterations: 2302"}
{"test_case": 284, "data": "MetropolisHasting 284: robots/6-5-9.pl, test_cost: 0, train_cost: 0, time: 0.03662650999999997, length: 131, iterations: 1605"}
{"test_case": 285, "data": "MetropolisHasting 285: robots/6-5-10.pl, test_cost: 0, train_cost: 0, time: 0.142990335, length: 215, iterations: 4741"}
{"test_case": 286, "data": "MetropolisHasting 286: robots/6-6-0.pl, test_cost: 0, train_cost: 0, time: 0.024612280999999958, length: 123, iterations: 1188"}
{"test_case": 287, "data": "MetropolisHasting 287: robots/6-6-1.pl, test_cost: 0, train_cost: 0, time: 0.04487693199999998, length: 181, iterations: 2072"}
{"test_case": 288, "data": "MetropolisHasting 288: robots/6-6-2.pl, test_cost: 0, train_cost: 0, time: 0.13503910800000007, length: 382, iterations: 3156"}
{"test_case": 289, "data": "MetropolisHasting 289: robots/6-6-3.pl, test_cost: 0, train_cost: 0, time: 0.03742933599999998, length: 79, iterations: 2598"}
{"test_case": 290, "data": "MetropolisHasting 290: robots/6-6-4.pl, test_cost: 0, train_cost: 0, time: 0.0214795, length: 110, iterations: 1392"}
{"test_case": 291, "data": "MetropolisHasting 291: robots/6-6-5.pl, test_cost: 0, train_cost: 0, time: 0.168833311, length: 58, iterations: 4332"}
{"test_case": 292, "data": "MetropolisHasting 292: robots/6-6-6.pl, test_cost: 0, train_cost: 0, time: 0.02605127900000001, length: 118, iterations: 1360"}
{"test_case": 293, "data": "MetropolisHasting 293: robots/6-6-7.pl, test_cost: 0, train_cost: 0, time: 0.006806546999999996, length: 62, iterations: 463"}
{"test_case": 294, "data": "MetropolisHasting 294: robots/6-6-8.pl, test_cost: 0, train_cost: 0, time: 0.527989313, length: 704, iterations: 8710"}
{"test_case": 295, "data": "MetropolisHasting 295: robots/6-6-9.pl, test_cost: 0, train_cost: 0, time: 0.10417227600000001, length: 224, iterations: 3929"}
{"test_case": 296, "data": "MetropolisHasting 296: robots/6-6-10.pl, test_cost: 0, train_cost: 0, time: 0.08474549799999997, length: 345, iterations: 2587"}
{"test_case": 297, "data": "MetropolisHasting 297: robots/6-7-0.pl, test_cost: 0, train_cost: 0, time: 0.5855098160000001, length: 676, iterations: 12176"}
{"test_case": 298, "data": "MetropolisHasting 298: robots/6-7-1.pl, test_cost: 0, train_cost: 0, time: 0.027283399999999958, length: 161, iterations: 1206"}
{"test_case": 299, "data": "MetropolisHasting 299: robots/6-7-2.pl, test_cost: 0, train_cost: 0, time: 0.010899084000000059, length: 88, iterations: 627"}
{"test_case": 300, "data": "MetropolisHasting 300: robots/6-7-3.pl, test_cost: 0, train_cost: 0, time: 0.07617790799999999, length: 300, iterations: 2198"}
{"test_case": 301, "data": "MetropolisHasting 301: robots/6-7-4.pl, test_cost: 0, train_cost: 0, time: 0.01558188399999999, length: 129, iterations: 740"}
{"test_case": 302, "data": "MetropolisHasting 302: robots/6-7-5.pl, test_cost: 0, train_cost: 0, time: 0.9237337639999998, length: 1142, iterations: 11943"}
{"test_case": 303, "data": "MetropolisHasting 303: robots/6-7-6.pl, test_cost: 0, train_cost: 0, time: 1.186999502, length: 1289, iterations: 10845"}
{"test_case": 304, "data": "MetropolisHasting 304: robots/6-7-7.pl, test_cost: 0, train_cost: 0, time: 0.07953790999999999, length: 112, iterations: 6191"}
{"test_case": 305, "data": "MetropolisHasting 305: robots/6-7-8.pl, test_cost: 0, train_cost: 0, time: 1.3924397659999999, length: 1413, iterations: 15490"}
{"test_case": 306, "data": "MetropolisHasting 306: robots/6-7-9.pl, test_cost: 0, train_cost: 0, time: 4.977155010000001, length: 2605, iterations: 24057"}
{"test_case": 307, "data": "MetropolisHasting 307: robots/6-7-10.pl, test_cost: 0, train_cost: 0, time: 0.07192695600000043, length: 135, iterations: 2788"}
{"test_case": 308, "data": "MetropolisHasting 308: robots/6-8-0.pl, test_cost: 0, train_cost: 0, time: 7.982480889000001, length: 3472, iterations: 31505"}
{"test_case": 309, "data": "MetropolisHasting 309: robots/6-8-1.pl, test_cost: 0, train_cost: 0, time: 0.008354485999998218, length: 73, iterations: 527"}
{"test_case": 310, "data": "MetropolisHasting 310: robots/6-8-2.pl, test_cost: 0, train_cost: 0, time: 0.484688887, length: 579, iterations: 8386"}
{"test_case": 311, "data": "MetropolisHasting 311: robots/6-8-3.pl, test_cost: 0, train_cost: 0, time: 0.05397275300000004, length: 191, iterations: 2151"}
{"test_case": 312, "data": "MetropolisHasting 312: robots/6-8-4.pl, test_cost: 0, train_cost: 0, time: 0.11625471799999998, length: 289, iterations: 4055"}
{"test_case": 313, "data": "MetropolisHasting 313: robots/6-8-5.pl, test_cost: 0, train_cost: 0, time: 0.278264928, length: 56, iterations: 6504"}
{"test_case": 314, "data": "MetropolisHasting 314: robots/6-8-6.pl, test_cost: 0, train_cost: 0, time: 0.15865702699999995, length: 429, iterations: 4409"}
{"test_case": 315, "data": "MetropolisHasting 315: robots/6-8-7.pl, test_cost: 0, train_cost: 0, time: 0.007731997000000046, length: 55, iterations: 616"}
{"test_case": 316, "data": "MetropolisHasting 316: robots/6-8-8.pl, test_cost: 0, train_cost: 0, time: 0.327999763, length: 614, iterations: 5726"}
{"test_case": 317, "data": "MetropolisHasting 317: robots/6-8-9.pl, test_cost: 0, train_cost: 0, time: 1.473659667, length: 647, iterations: 19132"}
{"test_case": 318, "data": "MetropolisHasting 318: robots/6-8-10.pl, test_cost: 0, train_cost: 0, time: 8.41359813, length: 524, iterations: 40455"}
{"test_case": 319, "data": "MetropolisHasting 319: robots/6-9-0.pl, test_cost: 0, train_cost: 0, time: 0.028802797999999186, length: 163, iterations: 1486"}
{"test_case": 320, "data": "MetropolisHasting 320: robots/6-9-1.pl, test_cost: 0, train_cost: 0, time: 0.014369669, length: 32, iterations: 987"}
{"test_case": 321, "data": "MetropolisHasting 321: robots/6-9-2.pl, test_cost: 0, train_cost: 0, time: 0.010015555000000002, length: 52, iterations: 813"}
{"test_case": 322, "data": "MetropolisHasting 322: robots/6-9-3.pl, test_cost: 0, train_cost: 0, time: 0.02772956, length: 76, iterations: 1868"}
{"test_case": 323, "data": "MetropolisHasting 323: robots/6-9-4.pl, test_cost: 0, train_cost: 0, time: 11.254726727, length: 4313, iterations: 37046"}
{"test_case": 324, "data": "MetropolisHasting 324: robots/6-9-5.pl, test_cost: 0, train_cost: 0, time: 0.07347120400000051, length: 257, iterations: 2231"}
{"test_case": 325, "data": "MetropolisHasting 325: robots/6-9-6.pl, test_cost: 0, train_cost: 0, time: 0.03883889699999976, length: 192, iterations: 1396"}
{"test_case": 326, "data": "MetropolisHasting 326: robots/6-9-7.pl, test_cost: 0, train_cost: 0, time: 0.14860515500000027, length: 320, iterations: 5376"}
{"test_case": 327, "data": "MetropolisHasting 327: robots/6-9-8.pl, test_cost: 0, train_cost: 0, time: 0.00680594499999998, length: 59, iterations: 526"}
{"test_case": 328, "data": "MetropolisHasting 328: robots/6-9-9.pl, test_cost: 0, train_cost: 0, time: 0.0119319339999997, length: 118, iterations: 631"}
{"test_case": 329, "data": "MetropolisHasting 329: robots/6-9-10.pl, test_cost: 0, train_cost: 0, time: 0.06315417800000134, length: 255, iterations: 2333"}
{"test_case": 330, "data": "MetropolisHasting 330: robots/8-0-0.pl, test_cost: 0, train_cost: 0, time: 0.175597832, length: 378, iterations: 4300"}
{"test_case": 331, "data": "MetropolisHasting 331: robots/8-0-1.pl, test_cost: 0, train_cost: 0, time: 0.051778828, length: 156, iterations: 2264"}
{"test_case": 332, "data": "MetropolisHasting 332: robots/8-0-2.pl, test_cost: 0, train_cost: 0, time: 1.032262736, length: 504, iterations: 12461"}
{"test_case": 333, "data": "MetropolisHasting 333: robots/8-0-3.pl, test_cost: 0, train_cost: 0, time: 0.1153999229999998, length: 281, iterations: 3239"}
{"test_case": 334, "data": "MetropolisHasting 334: robots/8-0-4.pl, test_cost: 0, train_cost: 0, time: 5.695020695, length: 3341, iterations: 25974"}
{"test_case": 335, "data": "MetropolisHasting 335: robots/8-0-5.pl, test_cost: 0, train_cost: 0, time: 0.1078421039999995, length: 334, iterations: 2816"}
{"test_case": 336, "data": "MetropolisHasting 336: robots/8-0-6.pl, test_cost: 0, train_cost: 0, time: 1.9467712540000006, length: 1961, iterations: 13021"}
{"test_case": 337, "data": "MetropolisHasting 337: robots/8-0-7.pl, test_cost: 0, train_cost: 0, time: 0.05861186000000096, length: 226, iterations: 2108"}
{"test_case": 338, "data": "MetropolisHasting 338: robots/8-0-8.pl, test_cost: 0, train_cost: 0, time: 0.04334138900000006, length: 235, iterations: 1706"}
{"test_case": 339, "data": "MetropolisHasting 339: robots/8-0-9.pl, test_cost: 0, train_cost: 0, time: 0.06573771999999956, length: 272, iterations: 1951"}
{"test_case": 340, "data": "MetropolisHasting 340: robots/8-0-10.pl, test_cost: 0, train_cost: 0, time: 1.228625737, length: 1407, iterations: 9858"}
{"test_case": 341, "data": "MetropolisHasting 341: robots/8-1-0.pl, test_cost: 0, train_cost: 0, time: 7.370779871, length: 4045, iterations: 25796"}
{"test_case": 342, "data": "MetropolisHasting 342: robots/8-1-1.pl, test_cost: 0, train_cost: 0, time: 0.017266461999998484, length: 115, iterations: 888"}
{"test_case": 343, "data": "MetropolisHasting 343: robots/8-1-2.pl, test_cost: 0, train_cost: 0, time: 12.054141222999998, length: 4957, iterations: 35725"}
{"test_case": 344, "data": "MetropolisHasting 344: robots/8-1-3.pl, test_cost: 0, train_cost: 0, time: 0.03746577300000098, length: 179, iterations: 1494"}
{"test_case": 345, "data": "MetropolisHasting 345: robots/8-1-4.pl, test_cost: 0, train_cost: 0, time: 0.1095182880000003, length: 374, iterations: 2688"}
{"test_case": 346, "data": "MetropolisHasting 346: robots/8-1-5.pl, test_cost: 0, train_cost: 0, time: 0.0240939950000012, length: 116, iterations: 1182"}
{"test_case": 347, "data": "MetropolisHasting 347: robots/8-1-6.pl, test_cost: 0, train_cost: 0, time: 0.27591577200000117, length: 506, iterations: 5627"}
{"test_case": 348, "data": "MetropolisHasting 348: robots/8-1-7.pl, test_cost: 0, train_cost: 0, time: 0.031398621000001015, length: 160, iterations: 1365"}
{"test_case": 349, "data": "MetropolisHasting 349: robots/8-1-8.pl, test_cost: 0, train_cost: 0, time: 0.011008064999998624, length: 73, iterations: 660"}
{"test_case": 350, "data": "MetropolisHasting 350: robots/8-1-9.pl, test_cost: 0, train_cost: 0, time: 0.29466142700000003, length: 562, iterations: 5107"}
{"test_case": 351, "data": "MetropolisHasting 351: robots/8-1-10.pl, test_cost: 0, train_cost: 0, time: 0.025424027999999987, length: 122, iterations: 1180"}
{"test_case": 352, "data": "MetropolisHasting 352: robots/8-2-0.pl, test_cost: 0, train_cost: 0, time: 0.174308705, length: 374, iterations: 4918"}
{"test_case": 353, "data": "MetropolisHasting 353: robots/8-2-1.pl, test_cost: 0, train_cost: 0, time: 3.667083962, length: 2743, iterations: 20346"}
{"test_case": 354, "data": "MetropolisHasting 354: robots/8-2-2.pl, test_cost: 0, train_cost: 0, time: 0.027639782999999696, length: 153, iterations: 1413"}
{"test_case": 355, "data": "MetropolisHasting 355: robots/8-2-3.pl, test_cost: 0, train_cost: 0, time: 0.05843728199999987, length: 194, iterations: 2264"}
{"test_case": 356, "data": "MetropolisHasting 356: robots/8-2-4.pl, test_cost: 0, train_cost: 0, time: 0.40127050700000044, length: 800, iterations: 6036"}
{"test_case": 357, "data": "MetropolisHasting 357: robots/8-2-5.pl, test_cost: 0, train_cost: 0, time: 0.08575324799999962, length: 250, iterations: 3048"}
{"test_case": 358, "data": "MetropolisHasting 358: robots/8-2-6.pl, test_cost: 0, train_cost: 0, time: 0.08798807199999992, length: 102, iterations: 4215"}
{"test_case": 359, "data": "MetropolisHasting 359: robots/8-2-7.pl, test_cost: 0, train_cost: 0, time: 0.0796836049999996, length: 299, iterations: 2300"}
{"test_case": 360, "data": "MetropolisHasting 360: robots/8-2-8.pl, test_cost: 0, train_cost: 0, time: 1.086841124, length: 1469, iterations: 10669"}
{"test_case": 361, "data": "MetropolisHasting 361: robots/8-2-9.pl, test_cost: 0, train_cost: 0, time: 0.018384176999999946, length: 99, iterations: 1006"}
{"test_case": 362, "data": "MetropolisHasting 362: robots/8-2-10.pl, test_cost: 0, train_cost: 0, time: 0.14524128199999997, length: 86, iterations: 3388"}
{"test_case": 363, "data": "MetropolisHasting 363: robots/8-3-0.pl, test_cost: 0, train_cost: 0, time: 0.05233012400000003, length: 100, iterations: 3030"}
{"test_case": 364, "data": "MetropolisHasting 364: robots/8-3-1.pl, test_cost: 0, train_cost: 0, time: 5.588442583999999, length: 3529, iterations: 21963"}
{"test_case": 365, "data": "MetropolisHasting 365: robots/8-3-2.pl, test_cost: 0, train_cost: 0, time: 43.258724998, length: 8734, iterations: 76933"}
{"test_case": 366, "data": "MetropolisHasting 366: robots/8-3-3.pl, test_cost: 0, train_cost: 0, time: 0.5816545390000059, length: 735, iterations: 9568"}
{"test_case": 367, "data": "MetropolisHasting 367: robots/8-3-4.pl, test_cost: 0, train_cost: 0, time: 8.763454324999998, length: 414, iterations: 33595"}
{"test_case": 368, "data": "MetropolisHasting 368: robots/8-3-5.pl, test_cost: 0, train_cost: 0, time: 2.204150009000003, length: 2283, iterations: 13602"}
{"test_case": 369, "data": "MetropolisHasting 369: robots/8-3-6.pl, test_cost: 0, train_cost: 0, time: 0.00803009500000229, length: 57, iterations: 640"}
{"test_case": 370, "data": "MetropolisHasting 370: robots/8-3-7.pl, test_cost: 0, train_cost: 0, time: 0.015889566999999993, length: 141, iterations: 707"}
{"test_case": 371, "data": "MetropolisHasting 371: robots/8-3-8.pl, test_cost: 0, train_cost: 0, time: 0.06508522600000001, length: 29, iterations: 3930"}
{"test_case": 372, "data": "MetropolisHasting 372: robots/8-3-9.pl, test_cost: 5, train_cost: 5, time: 60.001683684, length: 11250, iterations: 80377"}
{"test_case": 373, "data": "MetropolisHasting 373: robots/8-3-10.pl, test_cost: 0, train_cost: 0, time: 0.027935607999999945, length: 52, iterations: 1554"}
{"test_case": 374, "data": "MetropolisHasting 374: robots/8-4-0.pl, test_cost: 0, train_cost: 0, time: 0.03806885499999879, length: 136, iterations: 1862"}
{"test_case": 375, "data": "MetropolisHasting 375: robots/8-4-1.pl, test_cost: 0, train_cost: 0, time: 0.1061483589999952, length: 346, iterations: 3463"}
{"test_case": 376, "data": "MetropolisHasting 376: robots/8-4-2.pl, test_cost: 0, train_cost: 0, time: 0.009360490999995363, length: 77, iterations: 563"}
{"test_case": 377, "data": "MetropolisHasting 377: robots/8-4-3.pl, test_cost: 0, train_cost: 0, time: 1.105392198000004, length: 1552, iterations: 9789"}
{"test_case": 378, "data": "MetropolisHasting 378: robots/8-4-4.pl, test_cost: 0, train_cost: 0, time: 0.0301006930000014, length: 146, iterations: 1429"}
{"test_case": 379, "data": "MetropolisHasting 379: robots/8-4-5.pl, test_cost: 0, train_cost: 0, time: 0.004255594999996504, length: 43, iterations: 344"}
{"test_case": 380, "data": "MetropolisHasting 380: robots/8-4-6.pl, test_cost: 0, train_cost: 0, time: 0.040492322, length: 185, iterations: 1395"}
{"test_case": 381, "data": "MetropolisHasting 381: robots/8-4-7.pl, test_cost: 0, train_cost: 0, time: 1.227523092, length: 1536, iterations: 10582"}
{"test_case": 382, "data": "MetropolisHasting 382: robots/8-4-8.pl, test_cost: 0, train_cost: 0, time: 0.016618789000000023, length: 69, iterations: 1241"}
{"test_case": 383, "data": "MetropolisHasting 383: robots/8-4-9.pl, test_cost: 0, train_cost: 0, time: 0.15922725300000007, length: 396, iterations: 4529"}
{"test_case": 384, "data": "MetropolisHasting 384: robots/8-4-10.pl, test_cost: 0, train_cost: 0, time: 0.028226192999999844, length: 201, iterations: 1210"}
{"test_case": 385, "data": "MetropolisHasting 385: robots/8-5-0.pl, test_cost: 0, train_cost: 0, time: 0.07504024799999987, length: 125, iterations: 3711"}
{"test_case": 386, "data": "MetropolisHasting 386: robots/8-5-1.pl, test_cost: 0, train_cost: 0, time: 0.09413659799999996, length: 303, iterations: 2696"}
{"test_case": 387, "data": "MetropolisHasting 387: robots/8-5-2.pl, test_cost: 0, train_cost: 0, time: 0.11861791499999996, length: 432, iterations: 2820"}
{"test_case": 388, "data": "MetropolisHasting 388: robots/8-5-3.pl, test_cost: 0, train_cost: 0, time: 0.06330030399999997, length: 267, iterations: 1922"}
{"test_case": 389, "data": "MetropolisHasting 389: robots/8-5-4.pl, test_cost: 0, train_cost: 0, time: 0.01521175600000002, length: 93, iterations: 786"}
{"test_case": 390, "data": "MetropolisHasting 390: robots/8-5-5.pl, test_cost: 0, train_cost: 0, time: 0.0009197240000000106, length: 20, iterations: 67"}
{"test_case": 391, "data": "MetropolisHasting 391: robots/8-5-6.pl, test_cost: 0, train_cost: 0, time: 0.287800263, length: 353, iterations: 7234"}
{"test_case": 392, "data": "MetropolisHasting 392: robots/8-5-7.pl, test_cost: 0, train_cost: 0, time: 0.10905726999999998, length: 346, iterations: 3030"}
{"test_case": 393, "data": "MetropolisHasting 393: robots/8-5-8.pl, test_cost: 0, train_cost: 0, time: 0.07764220899999996, length: 317, iterations: 2108"}
{"test_case": 394, "data": "MetropolisHasting 394: robots/8-5-9.pl, test_cost: 0, train_cost: 0, time: 0.05809906399999998, length: 167, iterations: 2680"}
{"test_case": 395, "data": "MetropolisHasting 395: robots/8-5-10.pl, test_cost: 0, train_cost: 0, time: 0.023497599000000036, length: 113, iterations: 1005"}
{"test_case": 396, "data": "MetropolisHasting 396: robots/8-6-0.pl, test_cost: 0, train_cost: 0, time: 17.633309637, length: 5956, iterations: 47177"}
{"test_case": 397, "data": "MetropolisHasting 397: robots/8-6-1.pl, test_cost: 0, train_cost: 0, time: 46.410966466000005, length: 10056, iterations: 67254"}
{"test_case": 398, "data": "MetropolisHasting 398: robots/8-6-2.pl, test_cost: 0, train_cost: 0, time: 1.9417951079999938, length: 1455, iterations: 16947"}
{"test_case": 399, "data": "MetropolisHasting 399: robots/8-6-3.pl, test_cost: 0, train_cost: 0, time: 0.04472003700000471, length: 98, iterations: 2483"}
{"test_case": 400, "data": "MetropolisHasting 400: robots/8-6-4.pl, test_cost: 0, train_cost: 0, time: 0.019409660999999995, length: 61, iterations: 1400"}
{"test_case": 401, "data": "MetropolisHasting 401: robots/8-6-5.pl, test_cost: 0, train_cost: 0, time: 0.028337658000000016, length: 122, iterations: 1605"}
{"test_case": 402, "data": "MetropolisHasting 402: robots/8-6-6.pl, test_cost: 0, train_cost: 0, time: 0.031720474, length: 139, iterations: 1431"}
{"test_case": 403, "data": "MetropolisHasting 403: robots/8-6-7.pl, test_cost: 0, train_cost: 0, time: 1.820585012, length: 1544, iterations: 13914"}
{"test_case": 404, "data": "MetropolisHasting 404: robots/8-6-8.pl, test_cost: 0, train_cost: 0, time: 5.802887643, length: 3652, iterations: 23229"}
{"test_case": 405, "data": "MetropolisHasting 405: robots/8-6-9.pl, test_cost: 0, train_cost: 0, time: 0.02836094400000011, length: 195, iterations: 1247"}
{"test_case": 406, "data": "MetropolisHasting 406: robots/8-6-10.pl, test_cost: 0, train_cost: 0, time: 0.05982940300000017, length: 310, iterations: 2250"}
{"test_case": 407, "data": "MetropolisHasting 407: robots/8-7-0.pl, test_cost: 0, train_cost: 0, time: 0.25514704199999994, length: 715, iterations: 4390"}
{"test_case": 408, "data": "MetropolisHasting 408: robots/8-7-1.pl, test_cost: 0, train_cost: 0, time: 4.3964295469999985, length: 3050, iterations: 20372"}
{"test_case": 409, "data": "MetropolisHasting 409: robots/8-7-2.pl, test_cost: 0, train_cost: 0, time: 5.230273167999998, length: 3109, iterations: 24974"}
{"test_case": 410, "data": "MetropolisHasting 410: robots/8-7-3.pl, test_cost: 0, train_cost: 0, time: 0.048043764, length: 243, iterations: 1637"}
{"test_case": 411, "data": "MetropolisHasting 411: robots/8-7-4.pl, test_cost: 3, train_cost: 3, time: 60.000521715, length: 11606, iterations: 75241"}
{"test_case": 412, "data": "MetropolisHasting 412: robots/8-7-5.pl, test_cost: 0, train_cost: 0, time: 0.007462381000003404, length: 102, iterations: 424"}
{"test_case": 413, "data": "MetropolisHasting 413: robots/8-7-6.pl, test_cost: 0, train_cost: 0, time: 0.6225484570000006, length: 780, iterations: 9295"}
{"test_case": 414, "data": "MetropolisHasting 414: robots/8-7-7.pl, test_cost: 0, train_cost: 0, time: 0.022931406999994408, length: 40, iterations: 1565"}
{"test_case": 415, "data": "MetropolisHasting 415: robots/8-7-8.pl, test_cost: 10, train_cost: 10, time: 60.001709254999994, length: 11123, iterations: 71348"}
{"test_case": 416, "data": "MetropolisHasting 416: robots/8-7-9.pl, test_cost: 0, train_cost: 0, time: 0.04651752399999509, length: 166, iterations: 2293"}
{"test_case": 417, "data": "MetropolisHasting 417: robots/8-7-10.pl, test_cost: 0, train_cost: 0, time: 0.07491843599999015, length: 238, iterations: 2563"}
{"test_case": 418, "data": "MetropolisHasting 418: robots/8-8-0.pl, test_cost: 0, train_cost: 0, time: 4.031901841000007, length: 2427, iterations: 27794"}
{"test_case": 419, "data": "MetropolisHasting 419: robots/8-8-1.pl, test_cost: 0, train_cost: 0, time: 0.059477201000007085, length: 241, iterations: 2095"}
{"test_case": 420, "data": "MetropolisHasting 420: robots/8-8-2.pl, test_cost: 0, train_cost: 0, time: 0.077665174, length: 256, iterations: 2634"}
{"test_case": 421, "data": "MetropolisHasting 421: robots/8-8-3.pl, test_cost: 0, train_cost: 0, time: 0.028674096999999982, length: 93, iterations: 1568"}
{"test_case": 422, "data": "MetropolisHasting 422: robots/8-8-4.pl, test_cost: 0, train_cost: 0, time: 0.08521808199999997, length: 78, iterations: 3557"}
{"test_case": 423, "data": "MetropolisHasting 423: robots/8-8-5.pl, test_cost: 0, train_cost: 0, time: 0.08151368799999997, length: 361, iterations: 2221"}
{"test_case": 424, "data": "MetropolisHasting 424: robots/8-8-6.pl, test_cost: 0, train_cost: 0, time: 0.24430178199999997, length: 470, iterations: 4677"}
{"test_case": 425, "data": "MetropolisHasting 425: robots/8-8-7.pl, test_cost: 0, train_cost: 0, time: 0.39070453800000005, length: 816, iterations: 5371"}
{"test_case": 426, "data": "MetropolisHasting 426: robots/8-8-8.pl, test_cost: 0, train_cost: 0, time: 0.044499347999999994, length: 183, iterations: 1871"}
{"test_case": 427, "data": "MetropolisHasting 427: robots/8-8-9.pl, test_cost: 0, train_cost: 0, time: 0.126643893, length: 421, iterations: 3160"}
{"test_case": 428, "data": "MetropolisHasting 428: robots/8-8-10.pl, test_cost: 0, train_cost: 0, time: 1.1757062500000002, length: 1364, iterations: 10180"}
{"test_case": 429, "data": "MetropolisHasting 429: robots/8-9-0.pl, test_cost: 0, train_cost: 0, time: 0.0860360189999998, length: 403, iterations: 2812"}
{"test_case": 430, "data": "MetropolisHasting 430: robots/8-9-1.pl, test_cost: 0, train_cost: 0, time: 0.018627792, length: 92, iterations: 856"}
{"test_case": 431, "data": "MetropolisHasting 431: robots/8-9-2.pl, test_cost: 0, train_cost: 0, time: 0.497285408, length: 385, iterations: 8292"}
{"test_case": 432, "data": "MetropolisHasting 432: robots/8-9-3.pl, test_cost: 0, train_cost: 0, time: 0.13555090000000003, length: 306, iterations: 4384"}
{"test_case": 433, "data": "MetropolisHasting 433: robots/8-9-4.pl, test_cost: 0, train_cost: 0, time: 0.631013292, length: 114, iterations: 10110"}
{"test_case": 434, "data": "MetropolisHasting 434: robots/8-9-5.pl, test_cost: 0, train_cost: 0, time: 0.06473078899999996, length: 140, iterations: 2764"}
{"test_case": 435, "data": "MetropolisHasting 435: robots/8-9-6.pl, test_cost: 0, train_cost: 0, time: 0.5686912819999999, length: 943, iterations: 6896"}
{"test_case": 436, "data": "MetropolisHasting 436: robots/8-9-7.pl, test_cost: 0, train_cost: 0, time: 1.3071107330000002, length: 1382, iterations: 12525"}
{"test_case": 437, "data": "MetropolisHasting 437: robots/8-9-8.pl, test_cost: 0, train_cost: 0, time: 0.016293235999999656, length: 96, iterations: 862"}
{"test_case": 438, "data": "MetropolisHasting 438: robots/8-9-9.pl, test_cost: 0, train_cost: 0, time: 3.9476616260000004, length: 2066, iterations: 27123"}
{"test_case": 439, "data": "MetropolisHasting 439: robots/8-9-10.pl, test_cost: 0, train_cost: 0, time: 0.053628347000000076, length: 231, iterations: 1674"}
{"test_case": 440, "data": "MetropolisHasting 440: robots/10-0-0.pl, test_cost: 0, train_cost: 0, time: 0.011857929000000001, length: 42, iterations: 898"}
{"test_case": 441, "data": "MetropolisHasting 441: robots/10-0-1.pl, test_cost: 0, train_cost: 0, time: 0.040532761, length: 220, iterations: 1493"}
{"test_case": 442, "data": "MetropolisHasting 442: robots/10-0-2.pl, test_cost: 7, train_cost: 7, time: 60.001020704, length: 10971, iterations: 69368"}
{"test_case": 443, "data": "MetropolisHasting 443: robots/10-0-3.pl, test_cost: 0, train_cost: 0, time: 0.043146106999998324, length: 216, iterations: 1828"}
{"test_case": 444, "data": "MetropolisHasting 444: robots/10-0-4.pl, test_cost: 0, train_cost: 0, time: 0.047148432999996714, length: 182, iterations: 2146"}
{"test_case": 445, "data": "MetropolisHasting 445: robots/10-0-5.pl, test_cost: 0, train_cost: 0, time: 0.03647165799999641, length: 120, iterations: 1631"}
{"test_case": 446, "data": "MetropolisHasting 446: robots/10-0-6.pl, test_cost: 0, train_cost: 0, time: 0.2571767500000064, length: 442, iterations: 5357"}
{"test_case": 447, "data": "MetropolisHasting 447: robots/10-0-7.pl, test_cost: 0, train_cost: 0, time: 0.014173182999996925, length: 72, iterations: 978"}
{"test_case": 448, "data": "MetropolisHasting 448: robots/10-0-8.pl, test_cost: 0, train_cost: 0, time: 0.3521722870000019, length: 755, iterations: 5425"}
{"test_case": 449, "data": "MetropolisHasting 449: robots/10-0-9.pl, test_cost: 0, train_cost: 0, time: 1.3512343550000026, length: 1133, iterations: 12649"}
{"test_case": 450, "data": "MetropolisHasting 450: robots/10-0-10.pl, test_cost: 2, train_cost: 2, time: 60.000053257, length: 10907, iterations: 72015"}
{"test_case": 451, "data": "MetropolisHasting 451: robots/10-1-0.pl, test_cost: 0, train_cost: 0, time: 0.016364398000000335, length: 114, iterations: 767"}
{"test_case": 452, "data": "MetropolisHasting 452: robots/10-1-1.pl, test_cost: 0, train_cost: 0, time: 0.0032687859999995794, length: 61, iterations: 254"}
{"test_case": 453, "data": "MetropolisHasting 453: robots/10-1-2.pl, test_cost: 0, train_cost: 0, time: 0.17482088399999896, length: 399, iterations: 3811"}
{"test_case": 454, "data": "MetropolisHasting 454: robots/10-1-3.pl, test_cost: 0, train_cost: 0, time: 1.7930297830000015, length: 1720, iterations: 11484"}
{"test_case": 455, "data": "MetropolisHasting 455: robots/10-1-4.pl, test_cost: 0, train_cost: 0, time: 0.11441050399999853, length: 227, iterations: 3706"}
{"test_case": 456, "data": "MetropolisHasting 456: robots/10-1-5.pl, test_cost: 0, train_cost: 0, time: 2.2778830929999927, length: 2109, iterations: 12169"}
{"test_case": 457, "data": "MetropolisHasting 457: robots/10-1-6.pl, test_cost: 0, train_cost: 0, time: 0.06158444099999372, length: 226, iterations: 2049"}
{"test_case": 458, "data": "MetropolisHasting 458: robots/10-1-7.pl, test_cost: 0, train_cost: 0, time: 0.03646076299999379, length: 218, iterations: 1364"}
{"test_case": 459, "data": "MetropolisHasting 459: robots/10-1-8.pl, test_cost: 0, train_cost: 0, time: 0.005479622000009954, length: 92, iterations: 334"}
{"test_case": 460, "data": "MetropolisHasting 460: robots/10-1-9.pl, test_cost: 0, train_cost: 0, time: 56.869670355000004, length: 12811, iterations: 66406"}
{"test_case": 461, "data": "MetropolisHasting 461: robots/10-1-10.pl, test_cost: 0, train_cost: 0, time: 0.11850047699999777, length: 484, iterations: 2540"}
{"test_case": 462, "data": "MetropolisHasting 462: robots/10-2-0.pl, test_cost: 0, train_cost: 0, time: 12.697955940000007, length: 5148, iterations: 35028"}
{"test_case": 463, "data": "MetropolisHasting 463: robots/10-2-1.pl, test_cost: 0, train_cost: 0, time: 0.0210293110000066, length: 126, iterations: 1054"}
{"test_case": 464, "data": "MetropolisHasting 464: robots/10-2-2.pl, test_cost: 0, train_cost: 0, time: 0.11413945099999978, length: 187, iterations: 4733"}
{"test_case": 465, "data": "MetropolisHasting 465: robots/10-2-3.pl, test_cost: 0, train_cost: 0, time: 0.1840649500000069, length: 308, iterations: 5185"}
{"test_case": 466, "data": "MetropolisHasting 466: robots/10-2-4.pl, test_cost: 0, train_cost: 0, time: 1.9051361340000028, length: 2187, iterations: 11471"}
{"test_case": 467, "data": "MetropolisHasting 467: robots/10-2-5.pl, test_cost: 0, train_cost: 0, time: 0.11869229399999881, length: 394, iterations: 2810"}
{"test_case": 468, "data": "MetropolisHasting 468: robots/10-2-6.pl, test_cost: 0, train_cost: 0, time: 0.6124465160000057, length: 1013, iterations: 7571"}
{"test_case": 469, "data": "MetropolisHasting 469: robots/10-2-7.pl, test_cost: 0, train_cost: 0, time: 0.18819920199999274, length: 506, iterations: 3945"}
{"test_case": 470, "data": "MetropolisHasting 470: robots/10-2-8.pl, test_cost: 0, train_cost: 0, time: 0.10378780000000001, length: 292, iterations: 3110"}
{"test_case": 471, "data": "MetropolisHasting 471: robots/10-2-9.pl, test_cost: 0, train_cost: 0, time: 3.159870658, length: 2403, iterations: 16351"}
{"test_case": 472, "data": "MetropolisHasting 472: robots/10-2-10.pl, test_cost: 0, train_cost: 0, time: 0.012703884999999637, length: 76, iterations: 734"}
{"test_case": 473, "data": "MetropolisHasting 473: robots/10-3-0.pl, test_cost: 0, train_cost: 0, time: 0.02700736199999998, length: 174, iterations: 1346"}
{"test_case": 474, "data": "MetropolisHasting 474: robots/10-3-1.pl, test_cost: 0, train_cost: 0, time: 53.259383422000006, length: 12168, iterations: 63602"}
{"test_case": 475, "data": "MetropolisHasting 475: robots/10-3-2.pl, test_cost: 0, train_cost: 0, time: 0.05976657900000504, length: 278, iterations: 1938"}
{"test_case": 476, "data": "MetropolisHasting 476: robots/10-3-3.pl, test_cost: 0, train_cost: 0, time: 0.21426202099999614, length: 463, iterations: 4675"}
{"test_case": 477, "data": "MetropolisHasting 477: robots/10-3-4.pl, test_cost: 0, train_cost: 0, time: 0.05196646699999974, length: 211, iterations: 2128"}
{"test_case": 478, "data": "MetropolisHasting 478: robots/10-3-5.pl, test_cost: 0, train_cost: 0, time: 0.009994994000003032, length: 83, iterations: 609"}
{"test_case": 479, "data": "MetropolisHasting 479: robots/10-3-6.pl, test_cost: 6, train_cost: 6, time: 60.00040616, length: 12677, iterations: 76647"}
{"test_case": 480, "data": "MetropolisHasting 480: robots/10-3-7.pl, test_cost: 0, train_cost: 0, time: 0.702566629, length: 1114, iterations: 6730"}
{"test_case": 481, "data": "MetropolisHasting 481: robots/10-3-8.pl, test_cost: 0, train_cost: 0, time: 0.09210752600000005, length: 279, iterations: 2819"}
{"test_case": 482, "data": "MetropolisHasting 482: robots/10-3-9.pl, test_cost: 0, train_cost: 0, time: 2.123083246, length: 1705, iterations: 15793"}
{"test_case": 483, "data": "MetropolisHasting 483: robots/10-3-10.pl, test_cost: 17, train_cost: 17, time: 60.001444868, length: 11116, iterations: 79101"}
{"test_case": 484, "data": "MetropolisHasting 484: robots/10-4-0.pl, test_cost: 0, train_cost: 0, time: 0.22031270000000092, length: 364, iterations: 5210"}
{"test_case": 485, "data": "MetropolisHasting 485: robots/10-4-1.pl, test_cost: 0, train_cost: 0, time: 8.175584433000004, length: 4040, iterations: 26946"}
{"test_case": 486, "data": "MetropolisHasting 486: robots/10-4-2.pl, test_cost: 0, train_cost: 0, time: 0.05782351000000574, length: 129, iterations: 2789"}
{"test_case": 487, "data": "MetropolisHasting 487: robots/10-4-3.pl, test_cost: 0, train_cost: 0, time: 0.6171461050000033, length: 908, iterations: 7707"}
{"test_case": 488, "data": "MetropolisHasting 488: robots/10-4-4.pl, test_cost: 0, train_cost: 0, time: 0.03233778199999904, length: 176, iterations: 1233"}
{"test_case": 489, "data": "MetropolisHasting 489: robots/10-4-5.pl, test_cost: 0, train_cost: 0, time: 2.064229775000001, length: 1974, iterations: 13994"}
{"test_case": 490, "data": "MetropolisHasting 490: robots/10-4-6.pl, test_cost: 5, train_cost: 5, time: 60.00010939, length: 11284, iterations: 77027"}
{"test_case": 491, "data": "MetropolisHasting 491: robots/10-4-7.pl, test_cost: 0, train_cost: 0, time: 0.04710292299999708, length: 238, iterations: 1650"}
{"test_case": 492, "data": "MetropolisHasting 492: robots/10-4-8.pl, test_cost: 0, train_cost: 0, time: 0.08476886300000075, length: 228, iterations: 2616"}
{"test_case": 493, "data": "MetropolisHasting 493: robots/10-4-9.pl, test_cost: 0, train_cost: 0, time: 1.7650994769999997, length: 1505, iterations: 15713"}
{"test_case": 494, "data": "MetropolisHasting 494: robots/10-4-10.pl, test_cost: 0, train_cost: 0, time: 0.18102014499999797, length: 470, iterations: 3886"}
{"test_case": 495, "data": "MetropolisHasting 495: robots/10-5-0.pl, test_cost: 0, train_cost: 0, time: 3.153454607999997, length: 2333, iterations: 18121"}
{"test_case": 496, "data": "MetropolisHasting 496: robots/10-5-1.pl, test_cost: 0, train_cost: 0, time: 4.092240000000004, length: 3391, iterations: 17610"}
{"test_case": 497, "data": "MetropolisHasting 497: robots/10-5-2.pl, test_cost: 0, train_cost: 0, time: 0.16233036999999229, length: 411, iterations: 3341"}
{"test_case": 498, "data": "MetropolisHasting 498: robots/10-5-3.pl, test_cost: 0, train_cost: 0, time: 0.1329741509999991, length: 517, iterations: 2870"}
{"test_case": 499, "data": "MetropolisHasting 499: robots/10-5-4.pl, test_cost: 0, train_cost: 0, time: 0.07457671000000232, length: 178, iterations: 2811"}
{"test_case": 500, "data": "MetropolisHasting 500: robots/10-5-5.pl, test_cost: 4, train_cost: 4, time: 60.000396331000005, length: 8053, iterations: 108560"}
{"test_case": 501, "data": "MetropolisHasting 501: robots/10-5-6.pl, test_cost: 0, train_cost: 0, time: 0.11573626500000245, length: 488, iterations: 2486"}
{"test_case": 502, "data": "MetropolisHasting 502: robots/10-5-7.pl, test_cost: 0, train_cost: 0, time: 1.6326235439999977, length: 1956, iterations: 11178"}
{"test_case": 503, "data": "MetropolisHasting 503: robots/10-5-8.pl, test_cost: 0, train_cost: 0, time: 0.007491438999998934, length: 62, iterations: 499"}
{"test_case": 504, "data": "MetropolisHasting 504: robots/10-5-9.pl, test_cost: 0, train_cost: 0, time: 0.03236728699999958, length: 186, iterations: 1438"}
{"test_case": 505, "data": "MetropolisHasting 505: robots/10-5-10.pl, test_cost: 0, train_cost: 0, time: 0.06539190999999533, length: 225, iterations: 1884"}
{"test_case": 506, "data": "MetropolisHasting 506: robots/10-6-0.pl, test_cost: 0, train_cost: 0, time: 1.1910849029999966, length: 1361, iterations: 9869"}
{"test_case": 507, "data": "MetropolisHasting 507: robots/10-6-1.pl, test_cost: 0, train_cost: 0, time: 0.03398068100000273, length: 116, iterations: 2145"}
{"test_case": 508, "data": "MetropolisHasting 508: robots/10-6-2.pl, test_cost: 0, train_cost: 0, time: 0.017384697000004223, length: 114, iterations: 842"}
{"test_case": 509, "data": "MetropolisHasting 509: robots/10-6-3.pl, test_cost: 0, train_cost: 0, time: 0.023697518999995282, length: 138, iterations: 1189"}
{"test_case": 510, "data": "MetropolisHasting 510: robots/10-6-4.pl, test_cost: 0, train_cost: 0, time: 5.334959951, length: 3391, iterations: 20921"}
{"test_case": 511, "data": "MetropolisHasting 511: robots/10-6-5.pl, test_cost: 0, train_cost: 0, time: 0.023719349999999473, length: 33, iterations: 1674"}
{"test_case": 512, "data": "MetropolisHasting 512: robots/10-6-6.pl, test_cost: 3, train_cost: 3, time: 60.001135492, length: 11413, iterations: 75583"}
{"test_case": 513, "data": "MetropolisHasting 513: robots/10-6-7.pl, test_cost: 0, train_cost: 0, time: 0.03178113600000643, length: 141, iterations: 1487"}
{"test_case": 514, "data": "MetropolisHasting 514: robots/10-6-8.pl, test_cost: 0, train_cost: 0, time: 0.8036800149999976, length: 884, iterations: 9346"}
{"test_case": 515, "data": "MetropolisHasting 515: robots/10-6-9.pl, test_cost: 0, train_cost: 0, time: 0.3641286099999945, length: 644, iterations: 7640"}
{"test_case": 516, "data": "MetropolisHasting 516: robots/10-6-10.pl, test_cost: 0, train_cost: 0, time: 0.04267178300000296, length: 209, iterations: 1802"}
{"test_case": 517, "data": "MetropolisHasting 517: robots/10-7-0.pl, test_cost: 0, train_cost: 0, time: 0.07293896600000949, length: 251, iterations: 2614"}
{"test_case": 518, "data": "MetropolisHasting 518: robots/10-7-1.pl, test_cost: 0, train_cost: 0, time: 0.6942676439999929, length: 1068, iterations: 10864"}
{"test_case": 519, "data": "MetropolisHasting 519: robots/10-7-2.pl, test_cost: 0, train_cost: 0, time: 3.359485036999999, length: 2742, iterations: 14796"}
{"test_case": 520, "data": "MetropolisHasting 520: robots/10-7-3.pl, test_cost: 0, train_cost: 0, time: 18.368229848000002, length: 5509, iterations: 47114"}
{"test_case": 521, "data": "MetropolisHasting 521: robots/10-7-4.pl, test_cost: 0, train_cost: 0, time: 4.027317629999999, length: 3299, iterations: 17093"}
{"test_case": 522, "data": "MetropolisHasting 522: robots/10-7-5.pl, test_cost: 11, train_cost: 11, time: 60.002328553000005, length: 12793, iterations: 67902"}
{"test_case": 523, "data": "MetropolisHasting 523: robots/10-7-6.pl, test_cost: 0, train_cost: 0, time: 5.625988352000007, length: 3339, iterations: 26361"}
{"test_case": 524, "data": "MetropolisHasting 524: robots/10-7-7.pl, test_cost: 0, train_cost: 0, time: 0.021133673999997882, length: 208, iterations: 808"}
{"test_case": 525, "data": "MetropolisHasting 525: robots/10-7-8.pl, test_cost: 0, train_cost: 0, time: 0.02772423300000071, length: 155, iterations: 1463"}
{"test_case": 526, "data": "MetropolisHasting 526: robots/10-7-9.pl, test_cost: 0, train_cost: 0, time: 0.11491255600000727, length: 226, iterations: 3739"}
{"test_case": 527, "data": "MetropolisHasting 527: robots/10-7-10.pl, test_cost: 0, train_cost: 0, time: 0.6478805859999994, length: 1175, iterations: 7574"}
{"test_case": 528, "data": "MetropolisHasting 528: robots/10-8-0.pl, test_cost: 0, train_cost: 0, time: 0.03755999599999882, length: 194, iterations: 1360"}
{"test_case": 529, "data": "MetropolisHasting 529: robots/10-8-1.pl, test_cost: 0, train_cost: 0, time: 0.09543848999999227, length: 345, iterations: 2269"}
{"test_case": 530, "data": "MetropolisHasting 530: robots/10-8-2.pl, test_cost: 0, train_cost: 0, time: 23.460236113, length: 7740, iterations: 40713"}
{"test_case": 531, "data": "MetropolisHasting 531: robots/10-8-3.pl, test_cost: 0, train_cost: 0, time: 0.05948226199999951, length: 215, iterations: 1899"}
{"test_case": 532, "data": "MetropolisHasting 532: robots/10-8-4.pl, test_cost: 0, train_cost: 0, time: 0.4404873969999983, length: 668, iterations: 6511"}
{"test_case": 533, "data": "MetropolisHasting 533: robots/10-8-5.pl, test_cost: 0, train_cost: 0, time: 2.9433023720000016, length: 2536, iterations: 16959"}
{"test_case": 534, "data": "MetropolisHasting 534: robots/10-8-6.pl, test_cost: 0, train_cost: 0, time: 0.03331496999999928, length: 179, iterations: 1219"}
{"test_case": 535, "data": "MetropolisHasting 535: robots/10-8-7.pl, test_cost: 0, train_cost: 0, time: 0.23262812200000127, length: 555, iterations: 4413"}
{"test_case": 536, "data": "MetropolisHasting 536: robots/10-8-8.pl, test_cost: 0, train_cost: 0, time: 0.018588226000002095, length: 90, iterations: 963"}
{"test_case": 537, "data": "MetropolisHasting 537: robots/10-8-9.pl, test_cost: 0, train_cost: 0, time: 0.12937962699999872, length: 365, iterations: 3533"}
{"test_case": 538, "data": "MetropolisHasting 538: robots/10-8-10.pl, test_cost: 0, train_cost: 0, time: 0.1915034829999982, length: 345, iterations: 5733"}
{"test_case": 539, "data": "MetropolisHasting 539: robots/10-9-0.pl, test_cost: 0, train_cost: 0, time: 0.8315402149999969, length: 1338, iterations: 7518"}
{"test_case": 540, "data": "MetropolisHasting 540: robots/10-9-1.pl, test_cost: 0, train_cost: 0, time: 24.417742566999998, length: 7313, iterations: 49148"}
{"test_case": 541, "data": "MetropolisHasting 541: robots/10-9-2.pl, test_cost: 0, train_cost: 0, time: 0.23794480500000148, length: 502, iterations: 7135"}
{"test_case": 542, "data": "MetropolisHasting 542: robots/10-9-3.pl, test_cost: 0, train_cost: 0, time: 0.19535370099999838, length: 355, iterations: 4819"}
{"test_case": 543, "data": "MetropolisHasting 543: robots/10-9-4.pl, test_cost: 0, train_cost: 0, time: 8.794455947, length: 4357, iterations: 23759"}
{"test_case": 544, "data": "MetropolisHasting 544: robots/10-9-5.pl, test_cost: 0, train_cost: 0, time: 0.06905055099999657, length: 152, iterations: 3190"}
{"test_case": 545, "data": "MetropolisHasting 545: robots/10-9-6.pl, test_cost: 0, train_cost: 0, time: 7.710470526999998, length: 3983, iterations: 24066"}
{"test_case": 546, "data": "MetropolisHasting 546: robots/10-9-7.pl, test_cost: 0, train_cost: 0, time: 0.39625151700000316, length: 962, iterations: 5279"}
{"test_case": 547, "data": "MetropolisHasting 547: robots/10-9-8.pl, test_cost: 0, train_cost: 0, time: 0.0199989740000035, length: 151, iterations: 872"}
{"test_case": 548, "data": "MetropolisHasting 548: robots/10-9-9.pl, test_cost: 0, train_cost: 0, time: 0.19534597700000234, length: 444, iterations: 5190"}
{"test_case": 549, "data": "MetropolisHasting 549: robots/10-9-10.pl, test_cost: 0, train_cost: 0, time: 3.2571897199999995, length: 2976, iterations: 17616"}
{"domain": "robot", "params": {"type": "metropolis", "alpha": 1, "add_token_end": 0, "add_token_random": 30, "remove_token_end": 0, "remove_token_random": 30, "add_loop_end": 0, "add_loop_random": 30, "add_if_statement_end": 0, "add_if_statement_random": 30, "start_over": 10}, "files": "([2, 4, 6, 8, 10], range(0, 10), range(0, 11))", "cases_solved": "537 / 550 (97.6%)", "average": {"test_cost": 0.14545454545454545, "train_cost": 0.14545454545454545, "execution_time": 2.3933914288218183, "program_length": 774.2381818181815, "number_of_explored_programs": 6481.476363636366, "number_of_iterations": 6481.476363636366}, "average_correct": {"test_cost": 0.0, "train_cost": 0.0, "execution_time": 0.9987965524357542, "program_length": 527.5121042830542, "number_of_explored_programs": 4710.417132216015, "number_of_iterations": 4710.417132216015}, "average_failed": {"test_cost": 6.153846153846154, "train_cost": 6.153846153846154, "execution_time": 60.000887476461536, "program_length": 10965.923076923078, "number_of_explored_programs": 79639.84615384614, "number_of_iterations": 79639.84615384614}, "variance": {"test_cost": 1.2684219241596297, "train_cost": 1.2684219241596297, "execution_time": 103.62107441507827, "program_length": 4257576.108922007, "number_of_explored_programs": 211670163.11692664, "number_of_iterations": 211670163.11692664}, "variance_correct": {"test_cost": 0.0, "train_cost": 0.0, "execution_time": 23.696743454158938, "program_length": 1745194.5525584368, "number_of_explored_programs": 80995818.2398552, "number_of_iterations": 80995818.2398552}, "variance_failed": {"test_cost": 17.974358974358978, "train_cost": 17.974358974358978, "execution_time": 5.200781325634615e-07, "program_length": 1581671.9102564103, "number_of_explored_programs": 127572298.3076923, "number_of_iterations": 127572298.3076923}, "best_results": {"file": "robots/10-9-10.pl", "test_cost": 0, "train_cost": 0, "execution_time": 3.2571897199999995, "program_length": 2976, "number_of_explored_programs": 17616, "program": "Program([MoveDown, MoveDown, If(AtRight [MoveUp] [MoveUp]), LoopWhile(AtLeft [MoveDown]), If(AtTop [MoveLeft] [MoveDown]), LoopWhile(AtRight [MoveUp]), If(AtBottom [Drop] [MoveUp]), If(AtTop [MoveLeft] [MoveUp]), MoveRight, If(AtRight [MoveLeft] [Grab]), LoopWhile(AtLeft [MoveDown]), If(NotAtBottom [MoveDown] [Drop]), LoopWhile(AtRight [MoveUp]), If(AtLeft [MoveLeft] [MoveLeft]), If(NotAtTop [MoveUp] [Grab]), MoveLeft, LoopWhile(AtRight [Drop]), MoveLeft, LoopWhile(AtRight [MoveUp]), MoveDown, MoveUp, LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [MoveUp]), LoopWhile(AtRight [Grab]), MoveDown, If(NotAtBottom [MoveDown] [MoveDown]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtTop [MoveLeft]), If(NotAtBottom [MoveRight] [MoveDown]), If(NotAtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtRight [MoveUp]), If(NotAtTop [MoveRight] [Grab]), MoveUp, LoopWhile(AtBottom [MoveLeft]), If(AtLeft [Grab] [MoveRight]), If(NotAtRight [MoveDown] [Drop]), MoveRight, MoveDown, LoopWhile(AtBottom [MoveUp]), If(NotAtBottom [MoveDown] [MoveUp]), LoopWhile(AtLeft [MoveLeft]), MoveDown, LoopWhile(AtBottom [Drop]), MoveUp, LoopWhile(AtRight [Grab]), MoveDown, If(NotAtBottom [MoveLeft] [MoveUp]), If(NotAtTop [MoveDown] [MoveUp]), If(NotAtRight [MoveUp] [MoveLeft]), If(AtTop [Drop] [MoveRight]), MoveRight, MoveDown, LoopWhile(AtTop [MoveDown]), MoveUp, MoveDown, If(AtRight [MoveDown] [MoveLeft]), MoveUp, LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [MoveRight]), MoveLeft, MoveRight, MoveLeft, LoopWhile(NotAtRight [MoveRight]), LoopWhile(NotAtRight [MoveUp]), LoopWhile(NotAtRight [Drop]), If(AtRight [MoveLeft] [MoveLeft]), LoopWhile(AtTop [MoveLeft]), If(AtLeft [MoveDown] [MoveUp]), If(AtBottom [MoveLeft] [MoveLeft]), If(AtBottom [MoveDown] [MoveLeft]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [Drop]), If(NotAtTop [MoveUp] [MoveDown]), MoveDown, If(NotAtTop [MoveUp] [MoveRight]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtLeft [MoveRight]), MoveUp, LoopWhile(AtTop [MoveRight]), LoopWhile(AtBottom [MoveLeft]), If(AtLeft [MoveDown] [MoveUp]), If(AtLeft [MoveRight] [MoveDown]), MoveDown, If(AtBottom [MoveLeft] [MoveDown]), If(AtBottom [MoveLeft] [MoveLeft]), LoopWhile(AtBottom [Grab]), MoveRight, If(AtLeft [MoveLeft] [MoveRight]), MoveRight, MoveLeft, LoopWhile(AtTop [MoveRight]), If(NotAtLeft [MoveLeft] [MoveLeft]), MoveDown, If(AtRight [Drop] [MoveUp]), If(NotAtRight [MoveDown] [MoveRight]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtLeft [MoveUp]), If(NotAtTop [MoveLeft] [Drop]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [Drop]), MoveDown, MoveUp, If(NotAtRight [MoveUp] [MoveLeft]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtBottom [Drop]), If(NotAtTop [MoveLeft] [Drop]), MoveRight, MoveLeft, MoveLeft, MoveUp, If(AtLeft [MoveUp] [MoveRight]), LoopWhile(AtTop [MoveUp]), If(AtLeft [Drop] [MoveDown]), MoveLeft, MoveUp, LoopWhile(AtTop [MoveRight]), LoopWhile(AtTop [MoveRight]), MoveRight, MoveRight, If(AtTop [Grab] [MoveDown]), LoopWhile(AtTop [MoveDown]), MoveUp, LoopWhile(AtLeft [Grab]), MoveUp, If(AtBottom [MoveDown] [MoveRight]), MoveDown, If(AtTop [MoveUp] [MoveLeft]), LoopWhile(AtBottom [Drop]), MoveDown, MoveRight, If(NotAtRight [MoveLeft] [MoveRight]), MoveUp, If(NotAtBottom [MoveDown] [MoveDown]), MoveRight, If(NotAtBottom [MoveUp] [MoveDown]), If(NotAtBottom [MoveLeft] [MoveUp]), If(NotAtBottom [MoveUp] [MoveUp]), LoopWhile(AtTop [MoveUp]), If(NotAtRight [MoveLeft] [MoveRight]), MoveLeft, LoopWhile(AtTop [Drop]), MoveDown, MoveRight, MoveLeft, If(AtLeft [MoveDown] [MoveUp]), If(NotAtLeft [MoveRight] [Drop]), LoopWhile(NotAtBottom [MoveDown]), LoopWhile(AtRight [MoveLeft]), If(NotAtBottom [MoveUp] [MoveLeft]), MoveUp, LoopWhile(AtTop [MoveRight]), LoopWhile(AtBottom [MoveLeft]), If(AtBottom [Drop] [MoveRight]), MoveUp, MoveDown, LoopWhile(AtRight [MoveLeft]), If(AtTop [MoveDown] [MoveUp]), LoopWhile(AtRight [Drop]), MoveUp, MoveRight, MoveRight, MoveDown, MoveLeft, MoveDown, If(AtRight [Drop] [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), MoveRight, MoveRight, LoopWhile(AtRight [Grab]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [Drop]), MoveDown, If(NotAtBottom [MoveDown] [MoveUp]), MoveLeft, If(NotAtLeft [MoveUp] [MoveDown]), If(AtBottom [MoveRight] [MoveLeft]), LoopWhile(AtLeft [Drop]), LoopWhile(AtLeft [MoveLeft]), If(NotAtRight [MoveLeft] [MoveUp]), MoveLeft, MoveUp, MoveUp, MoveLeft, If(NotAtRight [MoveUp] [MoveRight]), MoveRight, If(AtRight [Grab] [MoveUp]), MoveDown, MoveDown, MoveRight, If(AtBottom [Drop] [MoveUp]), LoopWhile(NotAtBottom [MoveDown]), If(AtRight [Drop] [MoveLeft]), If(NotAtBottom [MoveLeft] [MoveRight]), MoveRight, LoopWhile(AtTop [Grab]), If(AtLeft [MoveDown] [MoveLeft]), If(AtLeft [MoveLeft] [MoveUp]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtRight [MoveRight]), MoveUp, MoveUp, LoopWhile(AtTop [MoveUp]), If(NotAtTop [MoveLeft] [MoveLeft]), MoveUp, MoveRight, LoopWhile(AtLeft [Grab]), MoveLeft, MoveLeft, LoopWhile(AtRight [MoveLeft]), LoopWhile(AtRight [MoveRight]), If(NotAtLeft [MoveUp] [Grab]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [MoveUp]), If(AtRight [Grab] [MoveDown]), MoveDown, If(AtTop [MoveRight] [MoveUp]), MoveDown, MoveRight, If(AtRight [MoveDown] [MoveUp]), LoopWhile(NotAtLeft [MoveLeft]), LoopWhile(AtRight [MoveLeft]), MoveRight, If(NotAtLeft [MoveRight] [MoveDown]), If(AtBottom [MoveRight] [MoveRight]), MoveRight, If(NotAtRight [MoveRight] [MoveDown]), LoopWhile(AtBottom [MoveLeft]), MoveDown, MoveRight, If(AtBottom [Grab] [MoveDown]), MoveDown, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [MoveLeft]), MoveLeft, LoopWhile(AtBottom [MoveLeft]), If(NotAtTop [MoveRight] [MoveRight]), If(NotAtLeft [MoveRight] [Drop]), MoveUp, MoveRight, LoopWhile(AtRight [MoveUp]), MoveDown, If(NotAtLeft [MoveLeft] [Grab]), If(NotAtLeft [MoveUp] [Drop]), LoopWhile(AtLeft [MoveRight]), MoveLeft, LoopWhile(AtTop [MoveUp]), If(AtBottom [MoveDown] [MoveLeft]), MoveDown, MoveUp, If(AtRight [Grab] [MoveDown]), MoveUp, If(AtRight [MoveLeft] [MoveDown]), MoveUp, MoveLeft, If(NotAtRight [MoveLeft] [MoveUp]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtBottom [Drop]), LoopWhile(AtBottom [MoveRight]), MoveRight, MoveUp, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtRight [MoveUp]), MoveLeft, LoopWhile(AtLeft [Drop]), If(NotAtBottom [MoveLeft] [MoveRight]), MoveLeft, If(NotAtBottom [MoveLeft] [MoveRight]), If(AtRight [MoveRight] [MoveUp]), LoopWhile(AtBottom [Drop]), MoveRight, MoveUp, LoopWhile(AtLeft [MoveLeft]), If(NotAtLeft [MoveDown] [Grab]), MoveUp, MoveUp, MoveRight, If(NotAtBottom [MoveLeft] [Drop]), If(NotAtLeft [MoveDown] [MoveRight]), MoveUp, If(AtLeft [MoveUp] [MoveLeft]), If(NotAtTop [MoveRight] [MoveRight]), If(NotAtLeft [MoveDown] [MoveUp]), LoopWhile(AtRight [MoveDown]), MoveRight, LoopWhile(AtRight [MoveDown]), If(NotAtLeft [MoveRight] [MoveRight]), LoopWhile(AtTop [Grab]), MoveDown, MoveUp, LoopWhile(AtRight [Grab]), MoveDown, LoopWhile(AtTop [MoveUp]), If(AtRight [MoveUp] [MoveRight]), If(AtBottom [Drop] [MoveUp]), LoopWhile(AtBottom [MoveLeft]), MoveRight, If(NotAtTop [MoveUp] [MoveDown]), LoopWhile(AtBottom [MoveRight]), If(AtLeft [MoveLeft] [MoveRight]), If(AtTop [MoveRight] [MoveRight]), If(NotAtTop [MoveUp] [Grab]), MoveLeft, MoveRight, If(NotAtRight [MoveUp] [MoveDown]), If(NotAtRight [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveUp]), If(AtTop [MoveUp] [MoveDown]), MoveRight, LoopWhile(AtRight [Grab]), MoveDown, MoveRight, LoopWhile(AtTop [MoveRight]), If(NotAtBottom [MoveUp] [MoveRight]), LoopWhile(AtTop [Drop]), If(AtLeft [MoveRight] [MoveUp]), If(NotAtBottom [MoveDown] [MoveRight]), LoopWhile(NotAtRight [Grab]), If(AtBottom [Grab] [MoveDown]), If(NotAtBottom [MoveLeft] [Drop]), LoopWhile(AtTop [MoveUp]), MoveUp, If(NotAtLeft [MoveLeft] [Drop]), MoveLeft, MoveRight, MoveLeft, LoopWhile(AtBottom [MoveUp]), LoopWhile(AtBottom [Grab]), LoopWhile(AtLeft [MoveRight]), If(AtRight [Drop] [MoveDown]), LoopWhile(AtLeft [MoveLeft]), MoveLeft, MoveDown, If(AtLeft [MoveUp] [MoveRight]), If(AtLeft [Grab] [MoveLeft]), LoopWhile(AtRight [MoveLeft]), MoveLeft, MoveRight, If(AtTop [MoveLeft] [MoveUp]), LoopWhile(AtTop [Grab]), MoveRight, If(AtBottom [MoveRight] [MoveUp]), MoveLeft, MoveRight, LoopWhile(NotAtRight [MoveRight]), LoopWhile(AtRight [MoveLeft]), MoveRight, If(AtLeft [MoveLeft] [MoveUp]), If(NotAtRight [MoveDown] [MoveLeft]), If(AtLeft [MoveRight] [MoveDown]), LoopWhile(AtTop [MoveUp]), MoveLeft, If(NotAtRight [MoveDown] [MoveLeft]), LoopWhile(AtRight [Grab]), MoveLeft, LoopWhile(AtBottom [MoveDown]), MoveUp, MoveDown, LoopWhile(AtLeft [MoveDown]), MoveDown, MoveUp, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [Grab]), LoopWhile(AtTop [MoveRight]), If(AtRight [MoveRight] [MoveUp]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtTop [MoveRight]), If(AtRight [MoveDown] [MoveRight]), LoopWhile(AtLeft [MoveUp]), MoveRight, MoveUp, MoveLeft, LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [Drop]), If(AtLeft [MoveDown] [MoveDown]), LoopWhile(AtBottom [Drop]), If(NotAtRight [MoveLeft] [MoveDown]), LoopWhile(AtTop [Grab]), If(AtRight [Drop] [MoveUp]), MoveLeft, If(NotAtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtRight [Grab]), If(NotAtRight [MoveUp] [MoveLeft]), MoveLeft, MoveLeft, MoveLeft, MoveRight, LoopWhile(AtBottom [MoveUp]), If(NotAtTop [MoveDown] [MoveLeft]), If(AtTop [MoveUp] [MoveDown]), LoopWhile(AtBottom [MoveUp]), MoveRight, MoveDown, If(AtLeft [MoveLeft] [MoveDown]), If(NotAtRight [MoveLeft] [Drop]), If(AtBottom [Grab] [MoveRight]), If(NotAtLeft [MoveDown] [MoveRight]), MoveUp, If(NotAtRight [MoveUp] [Drop]), LoopWhile(AtTop [Drop]), MoveRight, MoveLeft, MoveRight, LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [MoveUp]), MoveLeft, If(AtRight [MoveUp] [MoveLeft]), If(AtTop [MoveRight] [MoveUp]), MoveRight, MoveLeft, LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [Grab]), MoveDown, If(NotAtRight [MoveRight] [Grab]), MoveDown, LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [MoveLeft]), If(AtRight [Grab] [MoveLeft]), MoveRight, MoveRight, MoveLeft, If(NotAtRight [MoveDown] [MoveLeft]), MoveRight, If(NotAtLeft [MoveRight] [MoveRight]), MoveRight, MoveDown, LoopWhile(AtLeft [Grab]), MoveLeft, LoopWhile(AtRight [Grab]), If(AtRight [MoveLeft] [MoveRight]), MoveUp, If(AtTop [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtLeft [MoveRight]), MoveLeft, LoopWhile(AtLeft [MoveDown]), If(NotAtTop [MoveRight] [Drop]), If(NotAtTop [MoveDown] [MoveDown]), If(AtBottom [MoveUp] [MoveRight]), LoopWhile(AtRight [Grab]), If(AtBottom [MoveRight] [MoveRight]), If(AtRight [MoveUp] [MoveUp]), If(AtTop [Grab] [MoveUp]), If(NotAtBottom [MoveUp] [MoveUp]), If(AtTop [MoveDown] [MoveLeft]), If(NotAtLeft [MoveLeft] [MoveUp]), If(AtTop [MoveRight] [MoveRight]), MoveLeft, LoopWhile(AtRight [MoveLeft]), MoveLeft, If(NotAtLeft [MoveRight] [MoveUp]), If(AtBottom [MoveUp] [MoveUp]), If(NotAtRight [MoveUp] [MoveLeft]), LoopWhile(AtRight [Grab]), If(AtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtTop [MoveDown]), If(AtRight [MoveRight] [MoveLeft]), If(AtLeft [Grab] [MoveDown]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [MoveUp]), MoveRight, MoveRight, If(AtBottom [MoveDown] [MoveLeft]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtRight [Drop]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtTop [Drop]), MoveLeft, If(NotAtRight [MoveLeft] [MoveRight]), MoveLeft, MoveRight, LoopWhile(AtBottom [Drop]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtTop [MoveRight]), LoopWhile(AtTop [MoveRight]), LoopWhile(NotAtRight [MoveRight]), LoopWhile(AtLeft [MoveUp]), If(NotAtBottom [MoveDown] [MoveLeft]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtTop [MoveRight]), If(AtBottom [MoveDown] [MoveUp]), If(AtTop [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveDown]), MoveUp, If(NotAtRight [Drop] [MoveDown]), LoopWhile(AtLeft [Grab]), LoopWhile(AtBottom [MoveRight]), If(NotAtBottom [MoveDown] [MoveUp]), MoveLeft, LoopWhile(AtLeft [Grab]), LoopWhile(AtBottom [Drop]), MoveDown, LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [MoveDown]), If(NotAtRight [MoveUp] [MoveUp]), If(AtTop [MoveUp] [MoveUp]), LoopWhile(AtBottom [MoveUp]), LoopWhile(AtBottom [MoveUp]), MoveDown, If(AtTop [Drop] [MoveUp]), MoveDown, LoopWhile(AtBottom [Drop]), MoveDown, If(NotAtLeft [MoveRight] [MoveLeft]), LoopWhile(AtLeft [MoveUp]), MoveLeft, LoopWhile(AtLeft [MoveUp]), MoveRight, LoopWhile(AtBottom [MoveDown]), If(AtLeft [MoveRight] [MoveDown]), If(NotAtLeft [MoveLeft] [Grab]), LoopWhile(AtLeft [MoveRight]), If(NotAtTop [MoveUp] [MoveDown]), If(NotAtLeft [MoveLeft] [Drop]), LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [Drop]), MoveLeft, If(NotAtBottom [MoveLeft] [MoveRight]), LoopWhile(AtTop [MoveLeft]), LoopWhile(AtLeft [MoveRight]), LoopWhile(AtRight [MoveLeft]), MoveDown, If(NotAtRight [MoveDown] [MoveLeft]), MoveRight, LoopWhile(AtRight [MoveDown]), LoopWhile(AtRight [Drop]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [MoveDown]), MoveRight, If(NotAtRight [MoveDown] [Grab]), If(AtLeft [MoveLeft] [MoveLeft]), If(AtBottom [MoveLeft] [MoveUp]), If(NotAtLeft [MoveUp] [MoveUp]), MoveRight, LoopWhile(AtRight [MoveLeft]), If(NotAtTop [MoveUp] [MoveUp]), If(NotAtRight [MoveDown] [MoveLeft]), MoveUp, LoopWhile(AtTop [Grab]), If(NotAtTop [MoveUp] [Drop]), If(NotAtBottom [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveDown]), If(NotAtBottom [MoveLeft] [MoveRight]), MoveRight, If(AtRight [MoveUp] [MoveUp]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtBottom [MoveRight]), If(AtRight [MoveRight] [MoveUp]), If(NotAtLeft [MoveLeft] [MoveUp]), MoveUp, If(AtBottom [Drop] [MoveDown]), LoopWhile(AtTop [Grab]), MoveDown, If(AtRight [Drop] [MoveRight]), LoopWhile(AtTop [Drop]), MoveRight, LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [MoveUp]), If(NotAtRight [MoveLeft] [MoveDown]), MoveDown, LoopWhile(AtRight [MoveLeft]), If(AtRight [MoveUp] [MoveUp]), MoveUp, MoveDown, MoveDown, If(AtLeft [Drop] [MoveRight]), LoopWhile(AtTop [MoveUp]), MoveDown, MoveDown, LoopWhile(AtRight [MoveRight]), If(NotAtLeft [MoveLeft] [MoveRight]), If(NotAtLeft [MoveDown] [Drop]), If(NotAtLeft [MoveUp] [Grab]), LoopWhile(AtTop [MoveLeft]), If(NotAtBottom [MoveLeft] [Grab]), LoopWhile(AtLeft [Grab]), If(NotAtLeft [MoveRight] [MoveRight]), LoopWhile(AtRight [MoveLeft]), MoveDown, If(AtBottom [MoveRight] [MoveDown]), If(AtBottom [Drop] [MoveLeft]), If(NotAtLeft [MoveDown] [Grab]), MoveRight, LoopWhile(AtLeft [MoveRight]), If(AtRight [MoveDown] [MoveUp]), LoopWhile(AtTop [MoveRight]), MoveUp, If(AtLeft [Drop] [MoveLeft]), MoveUp, LoopWhile(AtRight [MoveUp]), LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [Drop]), If(AtBottom [MoveUp] [MoveUp]), LoopWhile(AtTop [MoveRight]), If(NotAtBottom [MoveLeft] [MoveLeft]), MoveUp, If(NotAtTop [MoveDown] [MoveLeft]), LoopWhile(AtBottom [Drop]), MoveUp, If(AtRight [Grab] [MoveDown]), MoveUp, LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [MoveDown]), If(AtRight [MoveRight] [MoveLeft]), MoveUp, If(AtLeft [Grab] [MoveDown]), MoveUp, If(AtTop [MoveLeft] [MoveRight]), LoopWhile(AtBottom [MoveUp]), If(NotAtLeft [MoveRight] [MoveLeft]), If(AtLeft [MoveDown] [MoveRight]), MoveRight, MoveDown, If(AtLeft [MoveUp] [MoveDown]), LoopWhile(AtBottom [Grab]), MoveDown, MoveDown, MoveLeft, LoopWhile(AtRight [MoveRight]), If(AtTop [MoveRight] [MoveUp]), LoopWhile(AtRight [Drop]), If(NotAtTop [MoveRight] [MoveRight]), If(NotAtBottom [MoveLeft] [MoveLeft]), If(AtRight [MoveLeft] [MoveUp]), MoveUp, If(NotAtRight [MoveUp] [MoveDown]), MoveDown, If(AtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtRight [MoveRight]), MoveLeft, MoveUp, If(NotAtTop [MoveLeft] [MoveDown]), If(AtLeft [Drop] [MoveLeft]), LoopWhile(AtBottom [Grab]), LoopWhile(AtBottom [Drop]), MoveUp, LoopWhile(AtBottom [MoveUp]), MoveDown, MoveUp, LoopWhile(AtBottom [MoveLeft]), MoveUp, LoopWhile(AtLeft [MoveDown]), If(AtRight [Grab] [MoveUp]), MoveDown, MoveLeft, MoveUp, If(AtLeft [MoveDown] [MoveLeft]), If(AtBottom [MoveRight] [MoveDown]), If(NotAtLeft [MoveDown] [Grab]), If(NotAtLeft [MoveDown] [MoveRight]), If(AtTop [MoveRight] [MoveUp]), LoopWhile(AtBottom [MoveRight]), MoveUp, MoveUp, MoveRight, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [MoveUp]), If(AtTop [MoveDown] [MoveUp]), LoopWhile(NotAtTop [MoveUp]), MoveRight, LoopWhile(AtRight [MoveRight]), LoopWhile(NotAtTop [MoveRight]), LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [Drop]), If(AtBottom [MoveRight] [MoveDown]), MoveDown, MoveDown, LoopWhile(AtRight [Grab]), LoopWhile(AtRight [Drop]), MoveRight, LoopWhile(AtLeft [MoveRight]), MoveLeft, If(AtLeft [MoveUp] [MoveUp]), If(AtRight [MoveLeft] [MoveDown]), If(AtBottom [Drop] [MoveUp]), LoopWhile(AtTop [MoveRight]), MoveDown, MoveDown, LoopWhile(AtRight [Grab]), MoveRight, MoveUp, If(AtBottom [Grab] [MoveDown]), LoopWhile(AtLeft [MoveDown]), If(AtTop [MoveDown] [MoveDown]), If(AtBottom [Grab] [MoveRight]), MoveDown, LoopWhile(AtBottom [MoveLeft]), MoveDown, If(AtTop [MoveRight] [MoveLeft]), If(AtTop [MoveUp] [MoveUp]), MoveUp, LoopWhile(AtTop [Drop]), MoveUp, LoopWhile(AtRight [Grab]), MoveDown, MoveDown, MoveDown, LoopWhile(AtLeft [MoveUp]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [MoveRight]), MoveUp, MoveUp, LoopWhile(AtRight [MoveLeft]), If(NotAtLeft [MoveUp] [MoveRight]), LoopWhile(NotAtTop [MoveUp]), If(AtTop [MoveLeft] [MoveUp]), LoopWhile(AtRight [Drop]), LoopWhile(AtRight [MoveDown]), MoveDown, LoopWhile(NotAtTop [MoveUp]), LoopWhile(AtTop [MoveDown]), MoveDown, LoopWhile(AtBottom [Grab]), If(NotAtRight [MoveDown] [Drop]), MoveUp, If(AtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtLeft [MoveDown]), MoveDown, MoveDown, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtLeft [MoveRight]), MoveDown, LoopWhile(AtTop [MoveLeft]), MoveLeft, LoopWhile(AtBottom [MoveDown]), If(NotAtLeft [MoveLeft] [MoveRight]), LoopWhile(AtTop [MoveDown]), MoveRight, If(AtTop [MoveUp] [MoveLeft]), LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtTop [Grab]), LoopWhile(AtTop [Grab]), LoopWhile(AtTop [MoveDown]), If(NotAtLeft [Drop] [MoveDown]), MoveUp, If(AtBottom [Grab] [MoveDown]), LoopWhile(AtRight [Grab]), LoopWhile(AtRight [MoveUp]), If(AtRight [Drop] [MoveUp]), LoopWhile(NotAtLeft [Drop]), LoopWhile(AtTop [MoveLeft]), If(AtBottom [MoveRight] [MoveDown]), LoopWhile(AtRight [MoveDown]), LoopWhile(NotAtLeft [Drop]), If(NotAtLeft [MoveRight] [MoveUp]), MoveUp, MoveDown, MoveUp, MoveRight, LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [Drop]), If(AtTop [Drop] [MoveDown]), MoveDown, MoveRight, MoveDown, LoopWhile(AtRight [Drop]), MoveDown, LoopWhile(AtRight [MoveRight]), LoopWhile(AtTop [MoveRight]), LoopWhile(NotAtBottom [MoveDown]), If(AtRight [Grab] [MoveRight]), LoopWhile(AtLeft [Grab]), If(NotAtRight [MoveRight] [MoveLeft]), MoveUp, LoopWhile(AtBottom [Drop]), If(NotAtBottom [MoveDown] [MoveRight]), If(NotAtLeft [MoveUp] [MoveDown]), LoopWhile(AtRight [Drop]), If(AtBottom [Drop] [MoveDown]), LoopWhile(AtBottom [MoveUp]), MoveLeft, If(AtBottom [Drop] [MoveUp]), MoveUp, LoopWhile(AtBottom [Drop]), If(AtBottom [MoveRight] [MoveLeft]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtLeft [MoveDown]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtTop [Drop]), If(AtBottom [MoveRight] [MoveDown]), If(AtTop [Drop] [MoveUp]), MoveDown, If(AtRight [Grab] [MoveDown]), MoveLeft, MoveLeft, LoopWhile(NotAtLeft [MoveUp]), If(AtLeft [MoveUp] [Grab]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [MoveDown]), LoopWhile(AtBottom [Grab]), If(NotAtLeft [MoveLeft] [MoveUp]), MoveRight, MoveLeft, LoopWhile(NotAtLeft [MoveRight]), MoveRight, LoopWhile(AtBottom [Grab]), LoopWhile(AtRight [Drop]), If(AtTop [Drop] [MoveDown]), MoveDown, If(AtLeft [MoveLeft] [MoveUp]), If(AtRight [MoveUp] [MoveLeft]), If(NotAtRight [MoveDown] [MoveRight]), MoveUp, LoopWhile(AtLeft [MoveRight]), If(NotAtBottom [MoveUp] [MoveRight]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtBottom [MoveDown]), If(AtTop [MoveDown] [MoveUp]), MoveDown, MoveUp, MoveRight, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [MoveUp]), MoveDown, MoveLeft, If(AtBottom [MoveDown] [MoveDown]), MoveDown, MoveUp, LoopWhile(AtLeft [MoveUp]), MoveDown, MoveUp, If(NotAtBottom [MoveUp] [Drop]), If(AtRight [Drop] [MoveDown]), MoveRight, LoopWhile(AtLeft [MoveLeft]), MoveRight, LoopWhile(AtBottom [MoveUp]), If(AtTop [MoveLeft] [MoveUp]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtRight [Drop]), MoveUp, MoveRight, MoveUp, MoveLeft, MoveRight, If(NotAtBottom [MoveLeft] [Drop]), If(NotAtTop [MoveRight] [MoveUp]), MoveLeft, LoopWhile(AtRight [Grab]), If(NotAtTop [MoveRight] [MoveLeft]), MoveDown, If(AtBottom [MoveRight] [MoveRight]), LoopWhile(NotAtLeft [MoveLeft]), MoveDown, MoveRight, If(NotAtRight [MoveRight] [Grab]), MoveLeft, MoveRight, If(AtRight [MoveDown] [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), MoveDown, MoveUp, MoveRight, MoveLeft, If(AtBottom [Grab] [MoveRight]), MoveUp, If(NotAtTop [MoveDown] [MoveLeft]), MoveRight, MoveUp, If(AtLeft [MoveUp] [MoveLeft]), If(NotAtTop [MoveDown] [MoveUp]), If(NotAtRight [MoveLeft] [MoveUp]), MoveDown, If(AtBottom [Drop] [MoveUp]), MoveUp, If(AtLeft [MoveLeft] [MoveDown]), LoopWhile(AtTop [MoveRight]), MoveLeft, If(AtRight [MoveLeft] [MoveRight]), If(AtBottom [Drop] [MoveRight]), MoveLeft, MoveLeft, LoopWhile(AtLeft [MoveRight]), If(AtRight [Grab] [MoveLeft]), MoveUp, LoopWhile(AtRight [Drop]), MoveDown, LoopWhile(NotAtLeft [Grab]), If(AtTop [MoveRight] [MoveDown]), LoopWhile(AtTop [MoveRight]), MoveUp, MoveUp, If(AtBottom [MoveRight] [MoveUp]), If(NotAtLeft [MoveLeft] [MoveRight]), If(AtBottom [MoveDown] [MoveRight]), MoveUp, MoveUp, If(NotAtTop [MoveLeft] [Grab]), MoveUp, MoveRight, LoopWhile(AtRight [Grab]), If(AtRight [MoveRight] [MoveDown]), MoveDown, LoopWhile(AtRight [Grab]), If(AtRight [MoveRight] [MoveUp]), If(AtRight [Drop] [MoveDown]), MoveLeft, LoopWhile(AtRight [MoveDown]), LoopWhile(AtBottom [MoveRight]), MoveRight, LoopWhile(AtLeft [MoveUp]), MoveDown, If(AtRight [Grab] [MoveDown]), If(AtBottom [MoveDown] [MoveUp]), LoopWhile(AtBottom [Drop]), If(AtLeft [MoveLeft] [MoveRight]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtTop [MoveDown]), MoveUp, If(NotAtTop [MoveLeft] [MoveLeft]), If(AtTop [Grab] [MoveDown]), If(AtLeft [MoveRight] [MoveRight]), LoopWhile(AtRight [Drop]), If(AtRight [MoveRight] [MoveDown]), If(NotAtRight [MoveDown] [Grab]), MoveRight, MoveDown, MoveUp, If(NotAtBottom [MoveDown] [Grab]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [Drop]), LoopWhile(AtLeft [MoveUp]), MoveUp, LoopWhile(AtRight [MoveUp]), MoveLeft, If(NotAtTop [MoveUp] [MoveDown]), If(NotAtTop [MoveUp] [MoveDown]), MoveDown, If(NotAtTop [MoveUp] [MoveLeft]), MoveUp, MoveLeft, MoveRight, LoopWhile(AtRight [MoveUp]), LoopWhile(AtTop [Drop]), LoopWhile(NotAtBottom [MoveDown]), MoveRight, If(AtRight [MoveUp] [MoveLeft]), If(AtRight [Grab] [MoveLeft]), If(AtBottom [MoveUp] [Drop]), If(AtBottom [MoveDown] [MoveUp]), If(NotAtRight [MoveDown] [Drop]), If(AtRight [MoveRight] [MoveRight]), MoveRight, If(AtLeft [MoveLeft] [MoveRight]), MoveLeft, LoopWhile(AtTop [MoveUp]), MoveRight, If(NotAtLeft [MoveLeft] [MoveLeft]), LoopWhile(AtTop [Grab]), If(NotAtRight [MoveDown] [Drop]), LoopWhile(NotAtBottom [Drop]), MoveUp, MoveUp, If(AtRight [MoveRight] [MoveUp]), MoveRight, MoveLeft, LoopWhile(AtTop [MoveLeft]), If(NotAtBottom [MoveLeft] [Drop]), MoveUp, MoveLeft, MoveLeft, If(NotAtRight [MoveUp] [MoveUp]), LoopWhile(AtTop [Drop]), MoveRight, If(NotAtTop [MoveUp] [Drop]), If(NotAtRight [MoveRight] [Drop]), If(AtTop [MoveRight] [MoveUp]), LoopWhile(AtLeft [Grab]), MoveDown, LoopWhile(AtRight [MoveRight]), LoopWhile(NotAtBottom [MoveDown]), LoopWhile(AtRight [Drop]), LoopWhile(AtTop [MoveLeft]), MoveRight, If(NotAtTop [MoveRight] [Drop]), If(NotAtBottom [MoveDown] [MoveLeft]), If(NotAtLeft [MoveRight] [Drop]), If(AtBottom [MoveUp] [Grab]), LoopWhile(AtBottom [MoveLeft]), If(NotAtLeft [MoveUp] [MoveRight]), If(AtLeft [Grab] [MoveLeft]), MoveRight, LoopWhile(AtLeft [Grab]), LoopWhile(NotAtRight [MoveRight]), MoveLeft, MoveDown, LoopWhile(AtRight [Drop]), If(AtTop [Drop] [MoveUp]), MoveLeft, LoopWhile(AtBottom [MoveLeft]), If(AtTop [Grab] [MoveLeft]), LoopWhile(AtRight [MoveUp]), If(AtTop [Drop] [MoveUp]), MoveLeft, MoveUp, MoveLeft, LoopWhile(AtLeft [MoveUp]), If(NotAtBottom [MoveUp] [MoveRight]), MoveUp, If(NotAtRight [MoveUp] [MoveLeft]), LoopWhile(AtTop [MoveRight]), MoveDown, LoopWhile(AtBottom [MoveUp]), If(AtTop [MoveLeft] [MoveRight]), MoveLeft, MoveRight, If(NotAtLeft [MoveUp] [MoveDown]), MoveDown, MoveLeft, If(NotAtRight [MoveRight] [Grab]), LoopWhile(AtBottom [Drop]), If(NotAtTop [MoveLeft] [Drop]), LoopWhile(AtRight [MoveLeft]), MoveRight, If(NotAtRight [MoveUp] [MoveLeft]), MoveUp, If(NotAtBottom [MoveLeft] [MoveUp]), MoveRight, LoopWhile(AtTop [MoveLeft]), MoveUp, LoopWhile(AtLeft [MoveLeft]), If(AtBottom [MoveRight] [MoveDown]), If(AtRight [MoveLeft] [MoveRight]), If(AtLeft [Drop] [MoveLeft]), LoopWhile(NotAtBottom [MoveDown]), LoopWhile(NotAtBottom [MoveRight]), If(AtRight [MoveUp] [MoveUp]), If(NotAtRight [MoveRight] [Grab]), If(AtTop [MoveRight] [MoveRight]), LoopWhile(AtTop [Drop]), MoveRight, MoveLeft, MoveUp, If(AtBottom [MoveUp] [MoveUp]), LoopWhile(AtTop [MoveDown]), If(AtBottom [MoveUp] [MoveRight]), LoopWhile(AtRight [MoveDown]), If(AtLeft [MoveDown] [MoveDown]), MoveUp, LoopWhile(AtRight [MoveRight]), LoopWhile(AtLeft [Grab]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtBottom [Drop]), If(AtRight [MoveUp] [MoveLeft]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtRight [Drop]), LoopWhile(AtLeft [Drop]), LoopWhile(AtRight [MoveUp]), MoveUp, If(NotAtTop [MoveRight] [Grab]), MoveLeft, If(AtLeft [Drop] [MoveLeft]), LoopWhile(AtBottom [MoveUp]), MoveLeft, If(AtRight [Grab] [MoveDown]), LoopWhile(AtBottom [MoveDown]), MoveDown, If(AtBottom [MoveLeft] [MoveLeft]), MoveRight, If(NotAtLeft [MoveDown] [MoveUp]), If(AtRight [MoveDown] [MoveRight]), LoopWhile(AtBottom [Drop]), MoveRight, LoopWhile(AtTop [MoveDown]), If(NotAtRight [MoveUp] [Grab]), If(NotAtTop [MoveRight] [MoveRight]), If(AtTop [MoveDown] [MoveUp]), If(AtTop [Drop] [MoveLeft]), LoopWhile(AtBottom [Drop]), If(NotAtTop [MoveRight] [MoveUp]), If(NotAtTop [MoveLeft] [MoveRight]), MoveLeft, MoveLeft, If(AtLeft [MoveRight] [MoveUp]), If(AtBottom [MoveDown] [MoveUp]), MoveRight, If(AtRight [MoveDown] [MoveLeft]), If(NotAtLeft [MoveRight] [MoveRight]), MoveLeft, If(NotAtTop [MoveDown] [Drop]), MoveUp, MoveDown, MoveDown, If(NotAtLeft [MoveDown] [Grab]), MoveDown, If(NotAtRight [MoveLeft] [Drop]), LoopWhile(AtRight [MoveDown]), If(AtRight [MoveDown] [MoveRight]), LoopWhile(AtBottom [MoveUp]), MoveLeft, MoveLeft, MoveLeft, MoveUp, If(NotAtTop [MoveDown] [MoveRight]), MoveRight, LoopWhile(AtLeft [MoveUp]), If(AtLeft [Grab] [MoveLeft]), LoopWhile(AtTop [MoveDown]), If(NotAtRight [MoveRight] [Grab]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [MoveUp]), If(NotAtTop [MoveUp] [Grab]), MoveLeft, If(AtLeft [MoveRight] [MoveDown]), If(NotAtLeft [MoveRight] [Grab]), MoveRight, MoveLeft, MoveRight, LoopWhile(AtTop [MoveUp]), MoveRight, If(AtLeft [Drop] [MoveLeft]), If(NotAtRight [MoveUp] [MoveLeft]), LoopWhile(AtTop [MoveDown]), If(NotAtBottom [MoveDown] [MoveRight]), LoopWhile(AtLeft [MoveLeft]), MoveRight, LoopWhile(AtLeft [MoveLeft]), MoveUp, LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [MoveDown]), If(AtRight [MoveDown] [MoveLeft]), LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [MoveLeft]), If(AtLeft [MoveRight] [MoveLeft]), MoveUp, MoveDown, MoveRight, MoveUp, MoveDown, LoopWhile(AtBottom [Grab]), LoopWhile(AtRight [MoveUp]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [Drop]), If(AtTop [MoveUp] [MoveLeft]), If(NotAtLeft [MoveRight] [MoveDown]), MoveUp, If(NotAtTop [MoveDown] [MoveUp]), LoopWhile(AtBottom [Grab]), MoveUp, If(NotAtBottom [MoveUp] [Grab]), If(AtTop [MoveRight] [MoveRight]), LoopWhile(AtRight [Grab]), If(NotAtTop [MoveRight] [Drop]), MoveLeft, LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveUp]), MoveDown, MoveUp, MoveDown, If(NotAtTop [MoveDown] [Drop]), LoopWhile(AtLeft [Grab]), MoveUp, LoopWhile(AtLeft [MoveLeft]), MoveLeft, MoveLeft, MoveRight, MoveRight, If(NotAtRight [MoveDown] [Grab]), If(NotAtBottom [MoveRight] [Drop]), MoveDown, If(NotAtRight [MoveUp] [Drop]), MoveRight, If(AtTop [MoveLeft] [MoveUp]), LoopWhile(AtTop [MoveRight]), MoveLeft, MoveRight, LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [MoveUp]), MoveUp, If(AtRight [MoveRight] [MoveUp]), MoveRight, MoveLeft, LoopWhile(AtRight [MoveRight]), MoveDown, LoopWhile(AtRight [Drop]), MoveRight, LoopWhile(AtRight [MoveLeft]), If(AtTop [Drop] [MoveDown]), If(AtRight [MoveUp] [MoveDown]), If(NotAtBottom [MoveDown] [Drop]), MoveLeft, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtRight [Drop]), LoopWhile(AtRight [MoveRight]), If(AtTop [MoveUp] [MoveLeft]), MoveRight, MoveUp, If(NotAtBottom [MoveDown] [MoveLeft]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtTop [Grab]), MoveLeft, LoopWhile(AtBottom [MoveLeft]), If(AtRight [MoveRight] [MoveRight]), MoveDown, If(AtLeft [Grab] [MoveUp]), MoveUp, MoveRight, MoveLeft, If(AtTop [Drop] [MoveLeft]), LoopWhile(AtRight [MoveRight]), If(AtLeft [MoveLeft] [MoveUp]), If(NotAtBottom [MoveUp] [Grab]), MoveLeft, MoveUp, LoopWhile(NotAtLeft [MoveLeft]), MoveDown, LoopWhile(NotAtLeft [MoveDown]), LoopWhile(AtRight [Grab]), LoopWhile(AtRight [MoveUp]), MoveRight, If(AtTop [Grab] [MoveUp]), If(AtTop [MoveRight] [MoveUp]), If(AtTop [MoveLeft] [MoveDown]), If(AtRight [MoveRight] [MoveRight]), MoveRight, LoopWhile(AtTop [Drop]), If(NotAtBottom [MoveUp] [MoveLeft]), MoveLeft, If(AtTop [MoveDown] [MoveDown]), MoveDown, MoveRight, LoopWhile(AtBottom [MoveDown]), LoopWhile(NotAtBottom [MoveDown]), LoopWhile(NotAtBottom [MoveUp]), LoopWhile(NotAtBottom [Grab]), MoveRight, LoopWhile(AtLeft [Drop]), LoopWhile(AtTop [MoveRight]), LoopWhile(NotAtBottom [Grab]), MoveLeft, LoopWhile(AtTop [Grab]), MoveRight, LoopWhile(AtTop [MoveUp]), LoopWhile(AtTop [MoveUp]), MoveRight, MoveRight, LoopWhile(NotAtBottom [Grab]), LoopWhile(AtTop [MoveRight]), MoveRight, If(AtLeft [Drop] [MoveRight]), LoopWhile(AtRight [MoveUp]), LoopWhile(NotAtBottom [Grab]), If(NotAtTop [MoveRight] [Drop]), LoopWhile(NotAtRight [MoveLeft]), If(NotAtRight [MoveUp] [MoveLeft]), If(NotAtBottom [MoveRight] [MoveUp]), LoopWhile(AtTop [Drop]), If(NotAtRight [MoveUp] [MoveDown]), MoveRight, If(AtRight [MoveUp] [Drop]), MoveDown, If(AtLeft [Grab] [MoveLeft]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveLeft]), If(NotAtLeft [MoveUp] [MoveLeft]), LoopWhile(AtBottom [MoveRight]), MoveDown, MoveUp, MoveRight, If(NotAtRight [MoveUp] [MoveUp]), LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [MoveRight]), If(NotAtTop [MoveUp] [Grab]), If(AtTop [MoveDown] [MoveDown]), LoopWhile(AtLeft [Drop]), If(AtRight [MoveLeft] [Grab]), LoopWhile(AtBottom [MoveRight]), LoopWhile(AtBottom [Drop]), MoveRight, MoveDown, MoveLeft, MoveLeft, MoveUp, LoopWhile(AtBottom [MoveDown]), LoopWhile(AtLeft [MoveDown]), If(NotAtRight [MoveLeft] [MoveLeft]), If(NotAtLeft [MoveUp] [MoveDown]), LoopWhile(AtBottom [MoveDown]), MoveRight, LoopWhile(AtTop [MoveLeft]), LoopWhile(AtTop [Drop]), LoopWhile(AtBottom [Grab]), If(AtLeft [MoveDown] [MoveDown]), LoopWhile(AtRight [MoveDown]), If(AtBottom [MoveRight] [MoveLeft]), LoopWhile(AtLeft [MoveUp]), If(AtBottom [MoveDown] [MoveDown]), LoopWhile(AtBottom [Drop]), LoopWhile(AtRight [MoveRight]), MoveLeft, MoveRight, MoveDown, If(NotAtLeft [MoveLeft] [Grab]), LoopWhile(AtLeft [Grab]), If(NotAtLeft [MoveLeft] [MoveLeft]), If(NotAtRight [MoveRight] [MoveLeft]), MoveUp, LoopWhile(AtRight [Grab]), If(AtBottom [MoveRight] [MoveLeft]), If(NotAtLeft [MoveUp] [MoveUp]), MoveDown, If(NotAtRight [MoveDown] [Drop]), MoveUp, If(AtBottom [Drop] [MoveRight]), LoopWhile(AtRight [MoveRight]), If(AtTop [MoveUp] [MoveRight]), LoopWhile(AtTop [Drop]), LoopWhile(NotAtRight [MoveRight]), LoopWhile(NotAtRight [Drop]), If(AtBottom [MoveUp] [MoveUp]), MoveLeft, If(AtLeft [Drop] [MoveLeft]), LoopWhile(AtBottom [MoveUp]), If(NotAtTop [MoveUp] [MoveUp]), If(AtLeft [MoveUp] [MoveUp]), MoveRight, MoveLeft, LoopWhile(AtBottom [MoveRight]), MoveLeft, If(NotAtBottom [MoveDown] [Grab]), LoopWhile(NotAtRight [MoveRight]), If(AtRight [MoveLeft] [Grab]), MoveRight, If(AtLeft [Grab] [MoveUp]), MoveUp, LoopWhile(AtTop [MoveRight]), If(NotAtBottom [MoveUp] [Drop]), LoopWhile(AtLeft [Drop]), If(NotAtTop [MoveDown] [MoveDown]), MoveDown, LoopWhile(AtTop [MoveLeft]), MoveLeft, LoopWhile(NotAtBottom [MoveDown]), MoveLeft, If(NotAtLeft [MoveRight] [MoveDown]), If(NotAtRight [MoveRight] [MoveUp]), If(NotAtRight [MoveUp] [MoveUp]), MoveLeft, If(AtRight [Grab] [MoveUp]), If(NotAtRight [MoveUp] [MoveRight]), If(AtBottom [MoveUp] [MoveLeft]), LoopWhile(AtRight [Grab]), If(NotAtRight [MoveUp] [MoveRight]), MoveUp, LoopWhile(AtRight [MoveRight]), If(AtLeft [Drop] [MoveRight]), If(NotAtLeft [MoveLeft] [MoveUp]), If(NotAtBottom [MoveLeft] [MoveLeft]), If(NotAtLeft [MoveUp] [MoveDown]), If(AtLeft [MoveRight] [MoveRight]), If(NotAtBottom [MoveRight] [MoveRight]), LoopWhile(AtTop [MoveLeft]), MoveRight, LoopWhile(NotAtRight [Drop]), If(NotAtTop [MoveLeft] [MoveUp]), MoveUp, If(NotAtRight [MoveLeft] [Drop]), If(AtLeft [MoveUp] [MoveDown]), MoveDown, MoveRight, LoopWhile(AtRight [MoveDown]), MoveLeft, MoveLeft, LoopWhile(NotAtBottom [MoveDown]), LoopWhile(NotAtRight [MoveRight]), Grab, LoopWhile(AtLeft [Grab]), LoopWhile(NotAtBottom [MoveRight]), If(AtTop [MoveUp] [MoveLeft]), If(NotAtTop [MoveLeft] [MoveUp]), MoveUp, MoveRight, LoopWhile(AtRight [MoveLeft]), MoveUp, If(AtLeft [MoveUp] [MoveRight]), LoopWhile(AtTop [MoveRight]), If(NotAtBottom [MoveLeft] [MoveDown]), LoopWhile(AtBottom [MoveLeft]), MoveUp, MoveDown, MoveLeft, LoopWhile(AtTop [MoveDown]), If(AtRight [MoveRight] [MoveDown]), MoveUp, MoveRight, If(NotAtRight [MoveLeft] [Grab]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtBottom [MoveLeft]), MoveUp, If(AtLeft [Grab] [MoveDown]), LoopWhile(AtTop [MoveUp]), LoopWhile(AtRight [MoveLeft]), MoveRight, LoopWhile(AtTop [MoveRight]), LoopWhile(AtRight [Grab]), MoveUp, MoveLeft, LoopWhile(AtLeft [MoveRight]), LoopWhile(AtTop [Grab]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtRight [MoveRight]), LoopWhile(AtBottom [MoveLeft]), MoveUp, MoveDown, If(AtLeft [MoveRight] [MoveDown]), If(AtLeft [Grab] [MoveDown]), If(AtRight [Drop] [MoveDown]), MoveLeft, MoveUp, If(NotAtBottom [MoveUp] [MoveLeft]), If(NotAtTop [MoveDown] [MoveUp]), LoopWhile(AtRight [MoveDown]), MoveUp, MoveDown, MoveUp, LoopWhile(AtBottom [MoveRight]), LoopWhile(AtTop [Grab]), LoopWhile(AtBottom [MoveDown]), MoveLeft, MoveDown, MoveUp, If(NotAtTop [MoveRight] [MoveLeft]), LoopWhile(AtBottom [Drop]), If(AtRight [MoveRight] [MoveUp]), MoveLeft, LoopWhile(AtLeft [MoveUp]), LoopWhile(AtTop [MoveDown]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtTop [MoveLeft]), If(NotAtBottom [MoveUp] [Drop]), LoopWhile(AtRight [MoveLeft]), LoopWhile(AtRight [Grab]), LoopWhile(AtLeft [MoveUp]), MoveLeft, If(AtLeft [Drop] [MoveRight]), If(AtTop [MoveDown] [MoveDown]), LoopWhile(AtLeft [MoveLeft]), LoopWhile(AtRight [Grab]), MoveUp, LoopWhile(AtLeft [MoveUp]), LoopWhile(AtLeft [Grab]), LoopWhile(AtLeft [MoveRight]), MoveUp, If(NotAtLeft [MoveLeft] [Grab]), If(NotAtBottom [MoveLeft] [MoveLeft]), LoopWhile(AtBottom [Grab]), If(AtTop [Grab] [Drop]), If(AtRight [MoveRight] [MoveUp]), MoveDown, If(NotAtLeft [MoveUp] [MoveUp]), MoveDown, If(AtLeft [MoveDown] [MoveUp]), MoveLeft, LoopWhile(AtTop [MoveLeft]), If(NotAtRight [MoveLeft] [MoveRight]), LoopWhile(AtTop [Grab]), LoopWhile(AtTop [MoveRight]), If(AtRight [MoveDown] [MoveUp]), If(AtTop [Grab] [MoveDown]), If(AtBottom [Grab] [MoveRight]), LoopWhile(AtBottom [MoveLeft]), LoopWhile(AtLeft [Drop]), If(NotAtLeft [MoveLeft] [MoveUp]), MoveDown, If(AtTop [MoveLeft] [MoveUp]), If(NotAtBottom [MoveDown] [MoveDown]), MoveDown, If(NotAtLeft [MoveDown] [Grab]), MoveLeft, LoopWhile(AtRight [MoveUp]), LoopWhile(AtBottom [MoveLeft]), If(AtTop [MoveUp] [MoveRight]), If(AtTop [Grab] [MoveDown]), LoopWhile(AtTop [Drop]), MoveUp, LoopWhile(AtLeft [MoveDown]), MoveLeft, If(AtRight [MoveRight] [MoveDown]), MoveDown, LoopWhile(AtBottom [Grab]), If(AtBottom [MoveUp] [MoveUp]), If(NotAtTop [MoveRight] [MoveDown])])", "cost_per_iteration": [[1, 27], [2, 26], [4, 17], [22, 19], [27, 17], [31, 19], [36, 20], [37, 21], [38, 20], [41, 19], [45, 20], [48, 19], [55, 17], [82, 19], [92, 20], [98, 21], [99, 20], [127, 19], [128, 17], [139, 19], [159, 20], [182, 19], [185, 20], [195, 19], [242, 20], [244, 21], [259, 20], [262, 21], [263, 20], [270, 21], [272, 20], [299, 21], [300, 20], [333, 21], [334, 20], [338, 21], [341, 20], [376, 19], [392, 20], [394, 21], [405, 20], [413, 19], [418, 20], [421, 19], [428, 20], [432, 21], [449, 20], [472, 21], [495, 22], [509, 23], [515, 24], [518, 23], [519, 24], [520, 23], [522, 22], [535, 21], [560, 22], [576, 21], [579, 22], [586, 23], [593, 24], [623, 25], [625, 24], [641, 25], [650, 27], [656, 26], [660, 25], [663, 26], [666, 25], [667, 24], [669, 23], [672, 26], [675, 23], [689, 24], [692, 25], [693, 27], [698, 26], [700, 27], [702, 26], [703, 25], [704, 26], [705, 25], [707, 24], [708, 25], [711, 24], [716, 25], [723, 24], [730, 25], [732, 24], [749, 23], [750, 22], [754, 21], [756, 22], [766, 23], [769, 22], [773, 21], [774, 20], [778, 19], [783, 17], [833, 19], [839, 17], [848, 19], [850, 17], [858, 19], [860, 17], [917, 19], [920, 20], [921, 21], [935, 22], [939, 21], [940, 20], [954, 21], [956, 20], [981, 21], [986, 20], [987, 17], [1062, 19], [1071, 17], [1073, 19], [1078, 17], [1136, 19], [1139, 20], [1150, 19], [1151, 17], [1154, 19], [1155, 20], [1156, 19], [1166, 20], [1168, 19], [1171, 17], [1172, 19], [1182, 20], [1184, 19], [1197, 20], [1221, 19], [1232, 17], [1245, 19], [1248, 17], [1278, 19], [1288, 20], [1289, 21], [1294, 20], [1296, 19], [1302, 17], [1347, 19], [1352, 17], [1386, 19], [1387, 20], [1390, 21], [1391, 20], [1398, 19], [1403, 17], [1421, 19], [1423, 20], [1424, 19], [1425, 17], [1461, 19], [1470, 20], [1478, 19], [1479, 20], [1480, 19], [1483, 20], [1488, 19], [1493, 20], [1499, 19], [1511, 20], [1517, 19], [1529, 20], [1530, 21], [1535, 20], [1536, 19], [1560, 17], [1576, 19], [1581, 17], [1590, 19], [1598, 17], [1606, 19], [1609, 17], [1610, 19], [1693, 17], [1726, 19], [1730, 17], [1751, 19], [1766, 17], [1783, 19], [1789, 17], [1820, 19], [1823, 20], [1835, 21], [1844, 20], [1851, 19], [1856, 17], [1858, 19], [1871, 20], [1873, 19], [1880, 17], [1947, 19], [1956, 17], [2009, 19], [2016, 17], [2094, 19], [2100, 20], [2104, 21], [2111, 20], [2117, 21], [2118, 20], [2123, 19], [2152, 17], [2161, 19], [2169, 20], [2189, 21], [2192, 20], [2202, 19], [2218, 20], [2238, 21], [2246, 22], [2253, 23], [2255, 24], [2256, 23], [2257, 22], [2258, 21], [2277, 20], [2294, 21], [2329, 22], [2330, 23], [2340, 22], [2358, 23], [2360, 22], [2362, 23], [2369, 22], [2378, 21], [2396, 22], [2407, 23], [2412, 24], [2413, 23], [2420, 22], [2425, 23], [2429, 20], [2608, 19], [2622, 20], [2648, 19], [2751, 20], [2753, 21], [2776, 20], [2790, 19], [2857, 20], [3131, 19], [3161, 20], [3280, 21], [3290, 22], [3319, 23], [3321, 22], [3327, 23], [3337, 27], [3338, 26], [3341, 25], [3342, 24], [3345, 23], [3346, 24], [3347, 23], [3348, 22], [3353, 21], [3365, 22], [3367, 23], [3369, 22], [3373, 23], [3375, 22], [3380, 23], [3384, 24], [3385, 25], [3388, 24], [3389, 23], [3391, 24], [3393, 23], [3399, 22], [3400, 23], [3404, 24], [3408, 25], [3409, 26], [3412, 27], [3413, 26], [3415, 25], [3416, 24], [3417, 23], [3418, 24], [3419, 25], [3421, 24], [3423, 27], [3424, 26], [3426, 25], [3429, 26], [3437, 27], [3438, 28], [3441, 27], [3444, 26], [3445, 25], [3458, 24], [3463, 25], [3466, 26], [3472, 27], [3474, 28], [3480, 27], [3488, 26], [3489, 27], [3490, 26], [3491, 27], [3496, 26], [3499, 27], [3500, 26], [3502, 27], [3505, 28], [3506, 27], [3507, 26], [3512, 27], [3513, 28], [3518, 27], [3520, 26], [3523, 27], [3524, 26], [3526, 25], [3532, 27], [3535, 26], [3538, 25], [3544, 26], [3547, 27], [3557, 26], [3561, 27], [3562, 26], [3564, 27], [3569, 26], [3571, 25], [3592, 24], [3595, 25], [3601, 26], [3605, 25], [3606, 26], [3607, 25], [3610, 26], [3619, 27], [3632, 26], [3635, 25], [3640, 24], [3641, 25], [3647, 26], [3655, 27], [3657, 28], [3658, 21], [3661, 20], [3664, 21], [3666, 20], [3678, 21], [3681, 20], [3683, 19], [3700, 20], [3703, 21], [3710, 20], [3728, 21], [3739, 20], [3785, 19], [3810, 20], [3825, 19], [3829, 20], [3846, 21], [3850, 22], [3870, 23], [3876, 24], [3883, 23], [3885, 24], [3903, 25], [3922, 24], [3935, 23], [3937, 19], [3981, 20], [3991, 19], [4022, 16], [4169, 17], [4172, 16], [4268, 17], [4326, 16], [4380, 15], [4411, 14], [4442, 15], [4565, 16], [4780, 15], [4782, 14], [4800, 13], [4928, 12], [5032, 11], [5047, 12], [5116, 13], [5157, 14], [5199, 15], [5215, 14], [5231, 13], [5260, 12], [5391, 11], [5401, 10], [5514, 9], [5563, 10], [5592, 11], [5618, 12], [5672, 11], [5698, 10], [5761, 9], [5765, 8], [5767, 9], [5776, 10], [5779, 9], [5805, 8], [5840, 7], [5880, 8], [5959, 9], [5961, 8], [5965, 7], [6006, 8], [6033, 7], [6035, 8], [6038, 9], [6070, 8], [6081, 7], [6083, 5], [6339, 7], [6349, 8], [6355, 9], [6360, 8], [6368, 7], [6375, 8], [6383, 7], [6394, 5], [6400, 7], [6412, 8], [6439, 7], [6464, 5], [6621, 7], [6631, 8], [6639, 9], [6658, 8], [6682, 7], [6720, 5], [6861, 7], [6865, 5], [6922, 7], [6937, 8], [6971, 7], [7005, 5], [7052, 7], [7054, 5], [7314, 7], [7372, 5], [7389, 7], [7432, 5], [7693, 7], [7718, 8], [7719, 9], [7742, 10], [7813, 11], [7873, 10], [7881, 9], [7897, 8], [7898, 7], [7927, 5], [7948, 7], [8027, 8], [8041, 7], [8050, 8], [8184, 7], [8204, 5], [8278, 7], [8297, 5], [8364, 7], [8377, 5], [8386, 7], [8414, 5], [8499, 7], [8531, 5], [8587, 7], [8601, 8], [8621, 7], [8632, 5], [8963, 7], [9064, 5], [9157, 6], [9184, 9], [9192, 6], [9454, 9], [9682, 6], [9726, 7], [9765, 6], [9795, 9], [9873, 7], [9951, 5], [10020, 7], [10021, 5], [10292, 7], [10430, 5], [10444, 7], [10468, 5], [11004, 7], [11030, 8], [11033, 7], [11034, 5], [11108, 6], [11242, 7], [11250, 6], [11275, 5], [11311, 6], [11384, 11], [11450, 12], [11515, 11], [11619, 10], [11674, 11], [11722, 10], [11781, 5], [12178, 4], [12244, 3], [12573, 4], [12646, 3], [12995, 2], [13415, 1], [13541, 2], [13928, 1], [13943, 2], [13999, 3], [14003, 4], [14627, 5], [14712, 4], [14742, 3], [14901, 4], [15007, 3], [15245, 2], [15416, 1], [15690, 2], [15743, 1], [15866, 2], [16114, 1], [16237, 2], [16405, 1], [16785, 2], [17051, 1], [17127, 2], [17417, 1], [17616, 0]], "number_of_iterations": 17616}}
